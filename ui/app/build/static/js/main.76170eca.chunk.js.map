{"version":3,"sources":["lib/Types.ts","lib/Cookie.ts","sections/App/components/Header/assets/mill.svg","lib/components/Colors.ts","lib/components/UrlHelper.ts","lib/Constants.ts","lib/graphql/mutations/Token/index.ts","sections/App/components/Header/components/MenuItems/index.tsx","sections/App/components/Header/index.tsx","sections/NotFound/index.tsx","sections/Reservations/components/ReservationItem/index.tsx","lib/components/ReservationFormHelper.ts","lib/components/FormHelper.ts","lib/components/GuestFormHelper.ts","lib/graphql/mutations/Guest/index.ts","sections/GuestDrawer/index.tsx","lib/graphql/queries/Guests/index.ts","lib/graphql/mutations/Reservation/index.ts","sections/Reservations/components/ReservationModal/index.tsx","lib/graphql/queries/Suites/index.ts","sections/Reservations/index.tsx","sections/Guests/components/GuestItem.tsx","sections/Guests/index.tsx","lib/graphql/mutations/Suite/index.ts","sections/SuiteDrawer/index.tsx","sections/Suites/components/AddSuite/index.tsx","sections/Suites/index.tsx","sections/Login/index.tsx","lib/graphql/queries/ReservationGuests/index.ts","lib/graphql/mutations/Contact/index.ts","sections/ReservationGuests/components/Error/index.tsx","sections/ReservationGuests/components/Host/index.tsx","lib/graphql/mutations/ReservationGuest/index.ts","sections/ReservationGuests/components/ReservationGuestDrawer/index.tsx","sections/ReservationGuests/components/Roommates/index.tsx","sections/ReservationGuests/index.tsx","sections/App/components/PageTitle/index.tsx","sections/App/index.tsx","i18n.ts","index.tsx","sections/Splash/index.tsx"],"names":["GuestAge","GuestGender","getCookie","name","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","Colors","colors","getRandomColor","Math","floor","random","getReservationColor","reservationType","UrlHelper","urlParts","window","location","search","undefined","dateFormat","errorMessages","paths","refreshTokenName","tokenName","usernameKey","TOKEN_AUTH","gql","TOKEN_REFRESH","TOKEN_REVOKE","MenuItems","withRouter","history","user","t","useTranslation","useMutation","revokeToken","revokeLoading","loading","redirectToLogin","useCallback","localStorage","removeItem","push","userAvatar","size","style","backgroundColor","username","toUpperCase","spinning","mode","Item","icon","BookOutlined","to","IdcardOutlined","HomeOutlined","className","SubMenu","title","LogoutOutlined","onClick","refreshToken","getItem","variables","then","finally","Header","logoImage","src","logo","alt","NotFound","Content","status","subTitle","extra","type","ReservationItem","item","itemContext","getItemProps","getResizeProps","leftResizeProps","left","rightResizeProps","right","itemProps","useResizeHandle","content","color","fontWeight","start_time","format","end_time","maxHeight","dimensions","height","strong","Reservation","key","ReservationFormHelper","mealOptions","label","value","reservationOptions","getRequiredRule","message","required","FormHelper","requiredRule","GuestFormHelper","ageOptions","requiredAlphaRule","pattern","transform","CREATE_GUEST","UPDATE_GUEST","DELETE_GUEST","GuestDrawer","addGuest","close","guest","removeGuest","visible","Form","useForm","form","networkErrorHandler","reason","error","onError","createGuest","createLoading","updateGuest","updateLoading","deleteGuest","deleteLoading","useState","confirmClose","setConfirmClose","initialValues","age","address","municipality","addressMunicipality","psc","addressPsc","street","addressStreet","citizenship","selected","email","gender","identity","phone","phoneNumber","surname","visa","visaNumber","emailPrefixIcon","noStyle","MailOutlined","useEffect","resetFields","closeIcon","onCancel","onConfirm","placement","CloseOutlined","isFieldsTouched","width","footer","cancelText","WarningOutlined","okText","guestId","id","data","success","danger","float","validateFields","formData","getFieldsValue","new","String","catch","footerStyle","padding","textAlign","active","paragraph","rows","layout","level","hasFeedback","rules","placeholder","addonBefore","options","Option","Group","compact","marginBottom","GUESTS","CREATE_RESERVATION","DELETE_RESERVATION","UPDATE_RESERVATION","ReservationModal","addOrUpdateReservation","isOpen","clearReservation","reservation","onCompleted","createReservation","deleteReservation","updateReservation","useLazyQuery","getGuests","guestsLoading","guestsData","deleteConfirmVisible","setDeleteConfirmVisible","guestDrawerOpen","setGuestDrawerOpen","guestOptions","setGuestOptions","dates","fromDate","toDate","meal","notes","purpose","roommates","Array","from","roommate","getGuestOption","submitForm","getFieldValue","suite","guestValidator","validator","_rule","Promise","resolve","duplicate","filter","reject","Error","roommateValidator","duplicates","footerButtons","reservationId","CloseCircleOutlined","PlusCircleOutlined","EditOutlined","guests","forEach","tip","RangePicker","showTime","filterOption","input","option","match","toString","toLowerCase","indexOf","showSearch","List","fields","add","remove","map","fieldKey","restField","align","MinusCircleOutlined","disabled","block","PlusOutlined","TextArea","allowClear","concat","SUITES","SUITES_WITH_RESERVATIONS","Reservations","setPageTitle","groups","setGroups","items","setItems","setReservation","reservationModalOpen","setReservationModalOpen","dataLoading","setDataLoading","reservationsData","useQuery","getTimelineReservationItem","moment","group","background","border","reservationList","suiteList","suites","reservations","canChangeGroup","canMove","canResize","defaultTimeEnd","defaultTimeStart","groupRenderer","itemRenderer","props","lineHeight","onCanvasClick","groupId","time","selectedGroup","find","onItemClick","itemId","timelineItem","getRootProps","unit","styles","date","existingReservations","GuestItem","openGuestDrawer","selectGuest","actions","Meta","avatar","gap","description","Guests","drawerVisible","setDrawerVisible","setGuests","selectedGuest","setSelectedGuest","guestsList","bordered","dataSource","header","itemLayout","renderItem","existingGuests","cachedGuest","CREATE_SUITE","UPDATE_SUITE","DELETE_SUITE","SuiteDrawer","addOrUpdateSuite","clearSuite","createSuite","deleteSuite","updateSuite","number","suiteId","console","AddSuite","hasAccess","onAdd","Suites","activeSuite","setActiveSuite","setSuites","setHasAccess","suitesData","suitesList","cachedSuite","labelCol","lg","md","sm","wrapperCol","tailLayout","offset","span","xs","Login","token","tokenAuth","setItem","payload","getToken","loginLoading","onFinish","password","htmlType","RESERVATION_GUESTS","CONTACT_MESSAGE","show","createContactMessage","creatingMessage","Host","openDrawer","UPDATE_RESERVATON_GUEST","ReservationGuestDrawer","reservationHash","hash","updateReservationGuest","Roommates","ReservationGuests","useParams","setGuest","setRoommates","showError","setShowError","roommateList","reservationGuests","reservationGuest","PageTitle","borderBottom","paddingBottom","App","pageTitle","offsetTop","getUser","exact","path","i18next","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","apolloClient","Splash","locale","httpLink","HttpLink","uri","authMiddleware","ApolloLink","operation","forward","csrftoken","setContext","headers","errorLink","graphQLErrors","networkError","fromPromise","mutate","mutation","flatMap","authToken","exp","refreshExpiresIn","replace","ApolloClient","cache","InMemoryCache","typePolicies","Query","merge","suiteReservations","link","ReactDOM","render","fallback","ApolloProvider","client","csCZ","getElementById"],"mappings":"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","file":"static/js/main.76170eca.chunk.js","sourcesContent":["import { Moment } from \"moment\"\n\nexport type AppReferrer = \"/\" | \"/apartma\" | \"/guests\"\nexport type ReservationType = \"Závazná Rezervace\" | \"Nezávazná Rezervace\" | \"Aktuálně Ubytování\" | \"Obydlený Termín\"\nexport type ReservationTypeKey = \"BINDING\" | \"NONBINDING\" | \"ACCOMMODATED\" | \"INHABITED\"\n\nexport const Reservation = {\n  getType: (key: ReservationTypeKey): ReservationType => {\n    switch (key) {\n      case \"NONBINDING\":\n        return \"Nezávazná Rezervace\"\n      case \"ACCOMMODATED\":\n        return \"Aktuálně Ubytování\"\n      case \"INHABITED\":\n        return \"Obydlený Termín\"\n      case \"BINDING\":\n      default: return \"Závazná Rezervace\"\n    }\n  }\n}\n\nexport type ReservationMeal = \"BREAKFAST\" | \"HALFBOARD\" | \"NOMEAL\"\n\ninterface Address {\n  municipality?: string\n  psc?: number\n  street?: string\n}\n\ninterface Citizenship {\n  new?: string\n  selected?: string\n}\n\nexport interface GuestForm {\n  age: string,\n  address?: Address\n  citizenship?: Citizenship\n  email: string\n  gender?: string\n  id?: number\n  name: string\n  identity: string\n  phone: string\n  surname: string\n  visa?: string\n}\n\nexport interface Guest {\n  id?: number | string\n  name: string\n  surname: string\n}\n\nexport interface Suite {\n  id: number | string\n  number?: number | null\n  title?: string\n}\n\nexport interface IReservation {\n  fromDate: Moment\n  guest?: Guest\n  meal?: ReservationMeal\n  id?: number | string\n  notes?: string | null\n  purpose?: string | null\n  roommates: Array<Guest>\n  suite: Suite\n  toDate: Moment\n  type?: ReservationTypeKey\n}\n\nexport interface SuiteForm {\n  number: number,\n  title: string\n}\n\nexport interface OptionsType {\n  label: string,\n  value: string | number\n}\n\nexport interface CustomGroupFields {\n  number: number | null\n  title: string\n}\n\nexport interface CustomItemFields {\n  color?: string\n  guest: Guest\n  meal: ReservationMeal\n  notes: string | null\n  purpose: string | null\n  roommates: Guest[]\n  suite: Suite\n  type?: ReservationTypeKey\n}\n\nexport enum GuestAge {\n  ADULT = \"ADULT\",\n  CHILD = \"CHILD\",\n  INFANT = \"INFANT\",\n  YOUNG = \"YOUNG\",\n}\n\nexport enum GuestGender {\n  F = \"F\",\n  M = \"M\",\n}\n\nexport interface ReservationGuest {\n  __typename?: string;\n  age?: GuestAge | null;\n  addressMunicipality?: string | null;\n  addressPsc?: number | null;\n  addressStreet?: string | null;\n  citizenship?: string | null;\n  email?: string;\n  gender?: GuestGender | null;\n  identity?: string | null;\n  id?: number | string;\n  name: string;\n  phoneNumber?: string | null;\n  surname?: string;\n  visaNumber?: string | null;\n}\n\nexport interface User {\n  username: string\n}","export const getCookie = (name: string): string | null => {\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[ i ].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        return decodeURIComponent(cookie.substring(name.length + 1));\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport const setCookie = (name: string, value: string): void => {\r\n  if (document.cookie && document.cookie !== '') {\r\n    document.cookie = `${ name }=${ value };path=/`\r\n  }\r\n}\r\n\r\nexport const deleteCookie = (name: string): void => {\r\n  const cookie = getCookie(name)\r\n  if (cookie !== null) {\r\n    setCookie(name, `${ cookie };expires=Thu, 01 Jan 1970 00:00:01 GMT`)\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/mill.1f872c17.svg\";","import { ReservationTypeKey } from \"../Types\"\r\n\r\ninterface Props {\r\n  colors: string[]\r\n  getRandomColor: () => string\r\n  getReservationColor: (reservationType: ReservationTypeKey) => string\r\n}\r\n\r\nexport const Colors: Props = {\r\n  colors: [\r\n    \"#f5222d\", // red\r\n    \"#fa541c\", // volcano\r\n    \"#fa8c16\", // orange\r\n    \"#faad14\", // gold\r\n    \"#fadb14\", // yellow\r\n    \"#a0d911\", // lime\r\n    \"#52c41a\", // green\r\n    \"#13c2c2\", // cyan\r\n    \"#1890ff\", // blue\r\n    \"#2f54eb\", // geekblue\r\n    \"#722ed1\", // purple\r\n    \"#eb2f96\", // magenta\r\n  ],\r\n  getRandomColor: () => {\r\n    return Colors.colors[ Math.floor(Math.random() * Colors.colors.length) ]\r\n  },\r\n  getReservationColor: (reservationType: ReservationTypeKey): string => {\r\n    switch (reservationType) {\r\n      case \"NONBINDING\":\r\n        return \"rgb(254, 223, 3)\"\r\n      case \"ACCOMMODATED\":\r\n        return \"rgb(0, 133, 182)\"\r\n      case \"INHABITED\":\r\n        return \"rgb(254, 127, 45)\"\r\n      case \"BINDING\":\r\n      default: return \"rgb(0, 212, 157)\"\r\n    }\r\n  }\r\n}","import { AppReferrer } from \"../Types\";\r\n\r\ninterface IUrlHelper {\r\n  getReferrer: () => AppReferrer\r\n}\r\n\r\nexport const UrlHelper: IUrlHelper = {\r\n  getReferrer: (): AppReferrer => {\r\n    const urlParts = window.location.search.substring(1).split(\"=\")\r\n    if (urlParts.length >= 2 && urlParts[ 1 ] !== undefined) {\r\n      return urlParts[ 1 ] as AppReferrer\r\n    }\r\n    return \"/\"\r\n  }\r\n}","export const apolloErrorUnauthorized: string = \"Unauthorized\"\nexport const csrfTokenName: string = \"csrftoken\"\nexport const defaultArrivalHour: number = 14\nexport const defaultDepartureHour: number = 10\nexport const dateFormat = \"YYYY-MM-DD HH:mm\"\nexport const errorMessages = {\n  invalidCredentials: \"Please enter valid credentials\",\n  refreshTokenExpired: \"Refresh token is expired\",\n  signatureExpired: \"Signature has expired\",\n  unauthorized: \"Unauthorized\"\n}\nexport const paths = {\n  guests: \"/guests\",\n  login: \"/login\",\n  reservation_guests: \"/rezervace/:hash/hoste\",\n  root: \"/\",\n  suites: \"/apartma\"\n}\nexport const refreshTokenName: string = \"refreshToken\"\nexport const tokenName: string = \"token\"\nexport const usernameKey: string = \"username\"","import { gql } from \"@apollo/client\";\r\n\r\nexport const TOKEN_AUTH = gql`\r\n  mutation TokenAuth($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      payload\r\n      refreshExpiresIn\r\n      refreshToken\r\n      token\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOKEN_REFRESH = gql`\r\n  mutation RefreshToken($refreshToken: String!) {\r\n    refreshToken(refreshToken: $refreshToken) {\r\n      payload\r\n      refreshExpiresIn\r\n      refreshToken\r\n      token\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOKEN_REVOKE = gql`\r\n  mutation RevokeToken($refreshToken: String!) {\r\n    revokeToken(refreshToken: $refreshToken) {\r\n      revoked\r\n    }\r\n  }\r\n`","import { BookOutlined, HomeOutlined, IdcardOutlined, LogoutOutlined } from \"@ant-design/icons\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { Avatar, Menu, Spin } from \"antd\"\r\nimport { useCallback } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\"\r\nimport { Colors } from \"../../../../../../lib/components/Colors\"\r\nimport { UrlHelper } from \"../../../../../../lib/components/UrlHelper\"\r\nimport { refreshTokenName, tokenName, usernameKey } from \"../../../../../../lib/Constants\"\r\nimport { TOKEN_REVOKE } from \"../../../../../../lib/graphql/mutations/Token\"\r\nimport { RevokeToken, RevokeTokenVariables } from \"../../../../../../lib/graphql/mutations/Token/__generated__/RevokeToken\"\r\nimport { User } from \"../../../../../../lib/Types\"\r\n\r\ninterface Props {\r\n  user: User | null\r\n}\r\n\r\nexport const MenuItems = withRouter(({\r\n  history,\r\n  user\r\n}: RouteComponentProps & Props) => {\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [ revokeToken, { loading: revokeLoading } ] = useMutation<RevokeToken, RevokeTokenVariables>(TOKEN_REVOKE)\r\n\r\n  const redirectToLogin = useCallback(() => {\r\n    localStorage.removeItem(usernameKey)\r\n    history.push(`/login?next=${ UrlHelper.getReferrer() }`)\r\n  }, [ history ])\r\n\r\n  const logout = (): void => {\r\n    const refreshToken = localStorage.getItem(refreshTokenName)\r\n    if (refreshToken !== null) {\r\n      revokeToken({ variables: { refreshToken } })\r\n        .then(() => {\r\n          localStorage.removeItem(tokenName)\r\n          localStorage.removeItem(refreshTokenName)\r\n        })\r\n        .finally(() => redirectToLogin())\r\n    } else {\r\n      redirectToLogin()\r\n    }\r\n  }\r\n\r\n  const userAvatar = user !== null ? (\r\n    <Avatar\r\n      size={ 32 }\r\n      style={ {\r\n        backgroundColor: Colors.getRandomColor()\r\n      } }>\r\n      { user.username.substring(0, 1).toUpperCase() }\r\n    </Avatar>\r\n  ) : null\r\n\r\n  return user !== null ? (\r\n    <>\r\n      <Spin\r\n        spinning={ revokeLoading }>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item key=\"reservation\" icon={ <BookOutlined /> }>\r\n            <Link to=\"/\">{ t(\"reservations.name\") }</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"guests\" icon={ <IdcardOutlined /> }>\r\n            <Link to=\"/guests\">{ t(\"guests.name-pl\") }</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"suites\" icon={ <HomeOutlined /> }>\r\n            <Link to=\"/apartma\">{ t(\"rooms\") }</Link>\r\n          </Menu.Item>\r\n        </Menu >\r\n      </Spin>\r\n      <Menu className=\"user\" mode=\"horizontal\">\r\n        <Menu.SubMenu\r\n          key=\"user-sub\"\r\n          title={ userAvatar }>\r\n          <Menu.Item\r\n            key=\"logout\"\r\n            icon={ <LogoutOutlined /> }\r\n            onClick={ logout }>\r\n            { t(\"logout\") }\r\n          </Menu.Item>\r\n        </Menu.SubMenu>\r\n      </Menu>\r\n    </>\r\n  ) : null\r\n})","import { Link } from 'react-router-dom'\nimport './styles.css'\nimport logo from './assets/mill.svg'\nimport { MenuItems } from './components/MenuItems'\nimport { PageHeader } from 'antd'\nimport { User } from '../../../../lib/Types'\n\ninterface Props {\n  user: User | null\n}\n\nexport const Header = ({ user }: Props) => {\n\n  const logoImage = (\n    <img\n      className=\"logo\"\n      src={ logo }\n      alt=\"Kamenice logo\" />\n  )\n\n  const homeLink = () => {\n    return user !== null ? (\n      <Link to=\"/\">{ logoImage }</Link>\n    ) : logoImage\n  }\n\n  return (\n    <PageHeader>\n      { homeLink() }\n      <MenuItems user={ user } />\n    </PageHeader>\n  )\n}","import { Button, Layout, Result } from \"antd\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\n\r\nexport const NotFound = withRouter(({ history }: RouteComponentProps) => {\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Layout>\r\n      <Layout.Content>\r\n        <Result\r\n          status=\"404\"\r\n          title={ t(\"errors.oops\") }\r\n          subTitle={ t(\"errors.404\") }\r\n          extra={\r\n            <Button\r\n              onClick={ () => history.push(\"/\") }\r\n              type=\"primary\">\r\n              { t(\"go-home\") }\r\n            </Button>\r\n          } />\r\n      </Layout.Content>\r\n    </Layout>\r\n  )\r\n})","import { Popover } from \"antd\"\r\nimport { Moment } from \"moment\"\r\nimport { ReactCalendarItemRendererProps, TimelineItem } from \"react-calendar-timeline\"\r\nimport Text from \"antd/lib/typography/Text\"\r\nimport { CustomItemFields } from \"../../../../lib/Types\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nexport const ReservationItem = ({\r\n  item,\r\n  itemContext,\r\n  getItemProps,\r\n  getResizeProps\r\n}: ReactCalendarItemRendererProps<TimelineItem<CustomItemFields, Moment>>) => {\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const { left: leftResizeProps, right: rightResizeProps } = getResizeProps()\r\n\r\n  return item.itemProps !== undefined ? (\r\n    <div { ...getItemProps(item.itemProps) }>\r\n      { itemContext.useResizeHandle ? <div { ...leftResizeProps } /> : '' }\r\n      <Popover title={ item.title } content={ (\r\n        <>\r\n          <div style={ { color: item.color, fontWeight: 700 } }>\r\n            { t(`reservation-types.${ item.type }`) }\r\n          </div>\r\n          <div>\r\n            { t(\"from\") }: <strong>{ item.start_time.format(\"DD MMM HH:mm\") }</strong>\r\n          </div>\r\n          <div>\r\n            { t(\"to\") }: <strong>{ item.end_time.format(\"DD MMM HH:mm\") }</strong>\r\n          </div>\r\n        </>\r\n      ) }>\r\n        <div\r\n          className=\"rct-item-content\"\r\n          style={ { maxHeight: `${ itemContext.dimensions.height }` } }>\r\n          <Text strong>{ item.title }</Text>\r\n        </div>\r\n      </Popover>\r\n      { itemContext.useResizeHandle ? <div { ...rightResizeProps } /> : '' }\r\n    </div>\r\n  ) : null\r\n}","import { Rule } from \"antd/lib/form\";\r\nimport { OptionsType, Reservation, ReservationTypeKey } from \"../Types\";\r\n\r\ninterface IReservationFormHelper {\r\n  getRequiredRule: (message: string) => Rule\r\n  mealOptions: OptionsType[]\r\n  reservationOptions: (OptionsType & { value: ReservationTypeKey })[]\r\n}\r\n\r\nexport const ReservationFormHelper: IReservationFormHelper = {\r\n  mealOptions: [\r\n    {\r\n      label: \"Bez Stravy\",\r\n      value: \"NOMEAL\"\r\n    },\r\n    {\r\n      label: \"Jen Snídaně\",\r\n      value: \"BREAKFAST\"\r\n    },\r\n    {\r\n      label: \"Polopenze\",\r\n      value: \"HALFBOARD\"\r\n    }\r\n  ],\r\n  reservationOptions: [\r\n    {\r\n      label: Reservation.getType(\"BINDING\"),\r\n      value: \"BINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"NONBINDING\"),\r\n      value: \"NONBINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"ACCOMMODATED\"),\r\n      value: \"ACCOMMODATED\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"INHABITED\"),\r\n      value: \"INHABITED\"\r\n    }\r\n  ],\r\n  getRequiredRule: (message: string): Rule => {\r\n    return { required: true, message }\r\n  }\r\n}","import { Rule } from \"antd/lib/form\"\r\n\r\ninterface IFormHelper {\r\n  requiredRule: (message: string) => Rule\r\n  trim: (value: string | undefined) => string | undefined\r\n}\r\nexport const FormHelper: IFormHelper = {\r\n  requiredRule: (message: string) => {\r\n    return {\r\n      required: true,\r\n      message: message\r\n    }\r\n  },\r\n  trim: (value: string | undefined): string | undefined => {\r\n    return value === undefined ? value : value.trim()\r\n  }\r\n}","import { Rule } from \"antd/lib/form\";\nimport { OptionsType } from \"../Types\";\nimport { FormHelper } from \"./FormHelper\";\n\ninterface IGuestFormHelper {\n  ageOptions: OptionsType[]\n  requiredAlphaRule: (message: string) => Rule\n}\n\nexport const GuestFormHelper: IGuestFormHelper = {\n  ageOptions: [\n    {\n      label: \"12+\",\n      value: \"YOUNG\"\n    },\n    {\n      label: \"3-12 let\",\n      value: \"CHILD\"\n    },\n    {\n      label: \"Do 3 let\",\n      value: \"INFANT\"\n    },\n    {\n      label: \"Dospělý\",\n      value: \"ADULT\"\n    }\n  ],\n  requiredAlphaRule: (message: string) => {\n    return {\n      message: message,\n      pattern: /^([A-Za-z\\sáÁčČďĎéÉěĚíÍňŇřŘšŠťŤúÚůŮýÝžŽóÓ])+$/,\n      transform: FormHelper.trim\n    }\n  }\n}","import { gql } from \"@apollo/client\"\n\nexport const CREATE_GUEST = gql`\n  mutation CreateGuest($data: GuestInput!) {\n    createGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        age\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const UPDATE_GUEST = gql`\n  mutation UpdateGuest($data: GuestInput!) {\n    updateGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        age\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const DELETE_GUEST = gql`\n  mutation DeleteGuest($guestId: ID!) {\n    deleteGuest(guestId: $guestId) {\n      guest {\n        id\n      }\n    }\n  }\n`","import { useState } from \"react\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm, Select, Skeleton } from \"antd\"\r\nimport { CloseOutlined, MailOutlined, WarningOutlined } from \"@ant-design/icons\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { Store } from \"rc-field-form/lib/interface\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport \"./styles.css\"\r\nimport { ApolloError, FetchResult, useMutation } from \"@apollo/client\"\r\nimport { CREATE_GUEST, DELETE_GUEST, UPDATE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuest, CreateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuest\"\r\nimport { GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { Guests_guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { UpdateGuest, UpdateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/UpdateGuest\"\r\nimport { useEffect } from \"react\"\r\nimport { DeleteGuest, DeleteGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/DeleteGuest\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\ninterface Props {\r\n  addGuest: (guest: Guests_guests) => void\r\n  close: () => void\r\n  guest?: GuestsFull_guests | null\r\n  removeGuest?: (guestId: string) => void\r\n  visible: boolean\r\n}\r\n\r\nexport const GuestDrawer = ({\r\n  addGuest,\r\n  close,\r\n  guest,\r\n  removeGuest,\r\n  visible\r\n}: Props) => {\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const networkErrorHandler = (reason: ApolloError) => message.error(reason.message)\r\n\r\n  const [ createGuest, { loading: createLoading } ] = useMutation<CreateGuest, CreateGuestVariables>(CREATE_GUEST, {\r\n    onError: networkErrorHandler\r\n  })\r\n  const [ updateGuest, { loading: updateLoading } ] = useMutation<UpdateGuest, UpdateGuestVariables>(UPDATE_GUEST, {\r\n    onError: networkErrorHandler\r\n  })\r\n  const [ deleteGuest, { loading: deleteLoading } ] = useMutation<DeleteGuest, DeleteGuestVariables>(DELETE_GUEST, {\r\n    onError: networkErrorHandler\r\n  })\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n\r\n  const initialValues: Store = {\r\n    age: guest?.age,\r\n    address: {\r\n      municipality: guest?.addressMunicipality,\r\n      psc: guest?.addressPsc,\r\n      street: guest?.addressStreet\r\n    },\r\n    citizenship: {\r\n      selected: guest?.citizenship\r\n    },\r\n    email: guest?.email,\r\n    gender: guest?.gender,\r\n    identity: guest?.identity,\r\n    name: guest?.name,\r\n    phone: guest?.phoneNumber,\r\n    surname: guest?.surname,\r\n    visa: guest?.visaNumber\r\n  }\r\n  const emailPrefixIcon = (\r\n    <Form.Item name=\"email-prefix\" noStyle>\r\n      <MailOutlined />\r\n    </Form.Item>\r\n  )\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          age: formData.age,\r\n          addressMunicipality: formData.address?.municipality,\r\n          addressPsc: formData.address?.psc,\r\n          addressStreet: formData.address?.street,\r\n          citizenship: formData.citizenship?.selected === undefined ? formData.citizenship?.new : formData.citizenship.selected,\r\n          email: formData.email,\r\n          gender: formData.gender,\r\n          identity: formData.identity,\r\n          name: formData.name,\r\n          phoneNumber: formData.phone,\r\n          surname: formData.surname,\r\n          visaNumber: formData.visa\r\n        }\r\n        if (guest === undefined || guest === null) {\r\n          createGuest({ variables: { data: { ...variables } } })\r\n            .then((value: FetchResult<CreateGuest>) => {\r\n              const guest = value.data?.createGuest?.guest\r\n              if (guest !== undefined && guest !== null) {\r\n                addGuest(guest)\r\n                message.success(t(\"guests.added\", { name: guest.name, surname: guest.surname }))\r\n              }\r\n              close()\r\n            })\r\n        } else {\r\n          updateGuest({ variables: { data: { id: String(guest.id), ...variables } } })\r\n            .then((value: FetchResult<UpdateGuest>) => {\r\n              const guest = value.data?.updateGuest?.guest\r\n              if (guest !== undefined && guest !== null) {\r\n                addGuest(guest)\r\n                message.success(t(\"guests.updated\", { name: guest.name, surname: guest.surname }))\r\n              }\r\n              close()\r\n            })\r\n        }\r\n      })\r\n      .catch(() => message.error(t(\"errors.invalid-form\")))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true) {\r\n      form.resetFields()\r\n    }\r\n  }, [ form, visible ])\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title={ t(\"forms.close-dirty\") }\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ () => {\r\n            if (form.isFieldsTouched()) {\r\n              setConfirmClose(true)\r\n            } else {\r\n              close()\r\n            }\r\n          } } />\r\n        </Popconfirm>\r\n      ) }\r\n      placement=\"left\"\r\n      title={ t(\"guests.name\") }\r\n      width={ 500 }\r\n      visible={ visible }\r\n      footer={\r\n        <>\r\n          { guest !== undefined && guest !== null &&\r\n            <Popconfirm\r\n              cancelText={ t(\"no\") }\r\n              icon={ <WarningOutlined /> }\r\n              okText={ t(\"yes\") }\r\n              onConfirm={ () => {\r\n                deleteGuest({ variables: { guestId: guest.id } })\r\n                  .then((value: FetchResult<DeleteGuest>) => {\r\n                    const guest = value.data?.deleteGuest?.guest\r\n                    if (removeGuest !== undefined && guest !== undefined && guest !== null) {\r\n                      removeGuest(guest.id)\r\n                      message.success(t(\"guests.deleted\"))\r\n                      close()\r\n                    }\r\n                  })\r\n              } }\r\n              title={ t(\"forms.delete-confirm\") }>\r\n              <Button\r\n                danger\r\n                style={ {\r\n                  float: \"left\"\r\n                } }\r\n                type=\"primary\">\r\n                { t('forms.delete') }\r\n              </Button>\r\n            </Popconfirm>\r\n          }\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            { (guest === undefined || guest === null) ? t(\"forms.create\") : t(\"forms.update\") }\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        padding: \"16px 20px\",\r\n        textAlign: \"right\"\r\n      } }>\r\n      <Skeleton\r\n        active\r\n        loading={ createLoading || updateLoading || deleteLoading }\r\n        paragraph={ { rows: 15 } }>\r\n        <Form\r\n          form={ form }\r\n          initialValues={ initialValues }\r\n          layout=\"vertical\"\r\n          name=\"guest\">\r\n          <Title level={ 5 }>\r\n            { t(\"forms.personal-data\") }\r\n          </Title>\r\n          <Form.Item\r\n            hasFeedback\r\n            label={ t(\"name\") }\r\n            name=\"name\"\r\n            required\r\n            rules={ [\r\n              FormHelper.requiredRule(t(\"forms.field-required\")),\r\n              GuestFormHelper.requiredAlphaRule(t(\"forms.enter-text\"))\r\n            ] }>\r\n            <Input placeholder={ t('forms.your-name') } />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label={ t(\"surname\") }\r\n            name=\"surname\"\r\n            required\r\n            rules={ [\r\n              FormHelper.requiredRule(t(\"forms.field-required\")),\r\n              GuestFormHelper.requiredAlphaRule(t(\"forms.enter-text\"))\r\n            ] }>\r\n            <Input placeholder={ t(\"your-surname\") } />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label={ t(\"email\") }\r\n            name=\"email\"\r\n            required\r\n            rules={ [ FormHelper.requiredRule(t(\"forms.field-required\")) ] }>\r\n            <Input\r\n              addonBefore={ emailPrefixIcon }\r\n              placeholder={ t(\"email\") }\r\n              type=\"email\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label={ t(\"forms.id-number\") }\r\n            name=\"identity\">\r\n            <Input placeholder={ t(\"forms.id-number-full\") } />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label={ t(\"phone-number\") }\r\n            name=\"phone\">\r\n            <Input placeholder={ t(\"number\") } />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label={ t(\"age\") }\r\n            name=\"age\">\r\n            <Select\r\n              options={ GuestFormHelper.ageOptions }\r\n              placeholder={ t(\"forms.choose-from-list\") } />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={ t(\"sex\") }\r\n            name=\"gender\">\r\n            <Select\r\n              placeholder={ t(\"forms.choose-from-list\") }>\r\n              <Select.Option value=\"M\">{ t(\"man\") }</Select.Option>\r\n              <Select.Option value=\"F\">{ t(\"woman\") }</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label={ t(\"forms.visa-number\") }\r\n            name=\"visa\">\r\n            <Input placeholder={ t(\"forms.visa-number\") } />\r\n          </Form.Item>\r\n          <Title level={ 5 }>{ t(\"forms.address\") }</Title>\r\n          <Form.Item\r\n            label={ t(\"forms.street\") }\r\n            name={ [ \"address\", \"street\" ] }>\r\n            <Input placeholder={ t(\"forms.street\") } />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={ t(\"forms.psc-label\") }>\r\n            <Input.Group compact>\r\n              <Form.Item\r\n                style={ { marginBottom: 0, width: \"50%\" } }\r\n                name={ [ \"address\", \"psc\" ] }>\r\n                <Input placeholder={ t(\"forms.psc\") } />\r\n              </Form.Item>\r\n              <Form.Item\r\n                style={ { marginBottom: 0, width: \"50%\" } }\r\n                name={ [ \"address\", \"municipality\" ] }>\r\n                <Input placeholder={ t(\"forms.municipality\") } />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={ t(\"forms.citizenship\") }>\r\n            <Input.Group compact>\r\n              <Form.Item\r\n                style={ { width: \"50%\" } }\r\n                name={ [ \"citizenship\", \"selected\" ] }>\r\n                <Select style={ { width: \"100%\" } } placeholder={ t(\"forms.from-list\") }>\r\n                  <Select.Option value=\"cze\">CZE</Select.Option>\r\n                  <Select.Option value=\"sk\">SK</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                style={ { width: \"50%\" } }\r\n                name={ [ \"citizenship\", \"new\" ] }>\r\n                <Input placeholder={ t(\"forms.by-hand\") } />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n        </Form>\r\n      </Skeleton>\r\n    </Drawer>\r\n  )\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const GUESTS = gql`\r\n  query Guests {\r\n    guests {\r\n      age\r\n      addressMunicipality\r\n      addressPsc\r\n      addressStreet\r\n      citizenship\r\n      email\r\n      gender\r\n      identity\r\n      id\r\n      name\r\n      phoneNumber\r\n      surname\r\n      visaNumber\r\n    }\r\n  }\r\n`","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_RESERVATION = gql`\r\n  mutation CreateReservation($data: ReservationInput!) {\r\n    createReservation(data: $data) {\r\n      reservation {\r\n        fromDate\r\n        id\r\n        guest {\r\n          id\r\n          name\r\n          surname\r\n        }\r\n        meal\r\n        notes\r\n        purpose\r\n        roommates {\r\n          id\r\n          name\r\n          surname\r\n        }\r\n        suite {\r\n          id\r\n          number\r\n          title\r\n        }\r\n        toDate\r\n        type\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_RESERVATION = gql`\r\n  mutation DeleteReservation($reservationId: ID!) {\r\n    deleteReservation(reservationId: $reservationId) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_RESERVATION = gql`\r\n  mutation UpdateReservation($data: ReservationInput!) {\r\n    updateReservation(data: $data) {\r\n      reservation {\r\n        fromDate\r\n        id\r\n        guest {\r\n          id\r\n          name\r\n          surname\r\n        }\r\n        meal\r\n        notes\r\n        purpose\r\n        roommates {\r\n          id\r\n          name\r\n          surname\r\n        }\r\n        suite {\r\n          id\r\n          number\r\n          title\r\n        }\r\n        toDate\r\n        type\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\nimport { Button, DatePicker, Form, Input, message, Modal, Popconfirm, Select, Space, Spin } from \"antd\"\nimport { Moment } from \"moment\"\nimport { ApolloError, useLazyQuery, useMutation } from \"@apollo/client\"\nimport { Store } from \"rc-field-form/lib/interface\"\nimport { CloseCircleOutlined, CloseOutlined, EditOutlined, MinusCircleOutlined, PlusCircleOutlined, PlusOutlined } from \"@ant-design/icons\"\nimport \"./styles.css\"\nimport { IReservation, OptionsType, ReservationTypeKey } from \"../../../../lib/Types\"\nimport { ReservationFormHelper } from \"../../../../lib/components/ReservationFormHelper\"\nimport { FormHelper } from \"../../../../lib/components/FormHelper\"\nimport { ReservationInput } from \"../../../../lib/graphql/globalTypes\"\nimport { dateFormat } from \"../../../../lib/Constants\"\nimport { GuestDrawer } from \"../../../GuestDrawer\"\nimport { Guests, Guests_guests } from \"../../../../lib/graphql/queries/Guests/__generated__/Guests\"\nimport { GUESTS } from \"../../../../lib/graphql/queries/Guests\"\nimport { CreateReservation, CreateReservationVariables } from \"../../../../lib/graphql/mutations/Reservation/__generated__/CreateReservation\"\nimport { CREATE_RESERVATION, DELETE_RESERVATION, UPDATE_RESERVATION } from \"../../../../lib/graphql/mutations/Reservation\"\nimport { UpdateReservation, UpdateReservationVariables } from \"../../../../lib/graphql/mutations/Reservation/__generated__/UpdateReservation\"\nimport { DeleteReservation, DeleteReservationVariables } from \"../../../../lib/graphql/mutations/Reservation/__generated__/DeleteReservation\"\nimport { SuitesWithReservations_reservations } from \"../../../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  addOrUpdateReservation: (reservation?: SuitesWithReservations_reservations | null) => void\n  close: () => void\n  isOpen: boolean\n  clearReservation: (reservationId?: string | null) => void\n  reservation?: IReservation\n}\n\nexport const ReservationModal = ({\n  addOrUpdateReservation,\n  close,\n  isOpen,\n  clearReservation,\n  reservation,\n}: Props) => {\n\n  const { t } = useTranslation()\n\n  const networkErrorHandler = (reason: ApolloError) => message.error(reason.message)\n\n  const [ createReservation, { loading: createLoading } ] = useMutation<CreateReservation, CreateReservationVariables>(CREATE_RESERVATION, {\n    onCompleted: (data: CreateReservation) => {\n      addOrUpdateReservation(data.createReservation?.reservation)\n      message.success(t(\"reservation-created\"))\n      close()\n    },\n    onError: networkErrorHandler\n  })\n  const [ deleteReservation, { loading: deleteLoading } ] = useMutation<DeleteReservation, DeleteReservationVariables>(DELETE_RESERVATION, {\n    onCompleted: (data: DeleteReservation) => {\n      clearReservation(data.deleteReservation?.reservation?.id)\n      message.success(t(\"reservation-deleted\"))\n      close()\n    },\n    onError: networkErrorHandler\n  })\n  const [ updateReservation, { loading: updateLoading } ] = useMutation<UpdateReservation, UpdateReservationVariables>(UPDATE_RESERVATION, {\n    onCompleted: (data: UpdateReservation) => {\n      addOrUpdateReservation(data.updateReservation?.reservation)\n      message.success(t(\"reservation-updated\"))\n      close()\n    },\n    onError: networkErrorHandler\n  })\n  const [ getGuests, { loading: guestsLoading, data: guestsData } ] = useLazyQuery<Guests>(GUESTS, {\n    onError: networkErrorHandler\n  })\n\n  const [ deleteConfirmVisible, setDeleteConfirmVisible ] = useState<boolean>(false)\n  const [ guestDrawerOpen, setGuestDrawerOpen ] = useState<boolean>(false)\n  const [ guestOptions, setGuestOptions ] = useState<OptionsType[]>([])\n\n  const [ form ] = Form.useForm()\n\n  const initialValues: Store & { type?: ReservationTypeKey } = reservation !== undefined ? {\n    dates: [ reservation.fromDate, reservation.toDate ],\n    guest: reservation.guest === undefined ? null : reservation.guest.id,\n    meal: reservation.meal,\n    notes: reservation.notes,\n    purpose: reservation.purpose,\n    roommates: Array.from(reservation.roommates, roommate => {\n      return { id: roommate.id }\n    }),\n    type: reservation.type\n  } : { type: \"NONBINDING\" }\n\n  const getGuestOption = (guest: Guests_guests) => {\n    return {\n      label: `${ guest.name } ${ guest.surname }`,\n      value: guest.id\n    }\n  }\n\n  const addGuestOption = (guest: Guests_guests) => {\n    setGuestOptions(guestOptions.concat(getGuestOption(guest)))\n  }\n\n  const submitForm = (): void => {\n    const formData = form.getFieldsValue(true)\n    const [ from, to ]: Array<Moment> = form.getFieldValue(\"dates\")\n    const roommates = formData.roommates === undefined ? [] :\n      Array.from(formData.roommates, (data: { id: number }) => data.id)\n\n    const variables: ReservationInput = {\n      fromDate: from.format(dateFormat),\n      guest: formData.guest,\n      meal: formData.meal,\n      notes: formData.notes,\n      purpose: formData.purpose,\n      roommates: roommates,\n      suite: reservation !== undefined ? +reservation.suite.id : null,\n      toDate: to.format(dateFormat),\n      type: formData.type\n    }\n    if (reservation !== undefined && reservation.id !== undefined) {\n      updateReservation({ variables: { data: { id: String(reservation.id), ...variables } } })\n    } else {\n      createReservation({ variables: { data: { ...variables } } })\n    }\n  }\n\n  const guestValidator = [\n    {\n      message: t(\"forms.guest-duplicate\"),\n      validator: (_rule: any, value: number): Promise<void | Error> => {\n        const roommates: Array<{ id: number }> = form.getFieldValue(\"roommates\")\n        if (roommates === undefined || roommates.length === 0) {\n          return Promise.resolve()\n        }\n        const duplicate = roommates.filter((id: { id: number } | undefined) => {\n          return id !== undefined && id.id === value\n        })\n        if (duplicate === undefined || duplicate.length === 0) {\n          return Promise.resolve()\n        }\n        return Promise.reject(new Error(\"Fail guest validation, equals to roommate\"))\n      }\n    },\n    {\n      message: t(\"forms.choose-guest\"),\n      required: true\n    }\n  ]\n\n  const roommateValidator = [\n    {\n      message: t(\"forms.guest-selected\"),\n      validator: (_rule: any, value: number): Promise<void | Error> => {\n        const duplicates: Array<{ id: number }> = form.getFieldValue(\"roommates\").filter((id: { id: number } | undefined) => {\n          return id !== undefined && id.id === value\n        })\n        if (duplicates === undefined || duplicates.length <= 1) {\n          return Promise.resolve()\n        }\n        return Promise.reject(new Error(\"Fail roommate validation, duplicate value\"))\n      }\n    },\n    {\n      message: t(\"forms.guest-equals-roommate\"),\n      validator: (_rule: any, value: number): Promise<void | Error> => {\n        if (form.getFieldValue(\"guest\") !== value) {\n          return Promise.resolve()\n        }\n        return Promise.reject(new Error(\"Fail roommate validation, equals to guest\"))\n      }\n    }\n  ]\n\n  const getRemoveButton = () => {\n    return reservation !== undefined && reservation.id !== undefined ? (\n      <Popconfirm\n        cancelText={ t(\"no\") }\n        key=\"remove\"\n        okText={ t(\"yes\") }\n        onConfirm={ () => {\n          if (reservation.id !== undefined) {\n            deleteReservation({ variables: { reservationId: String(reservation.id) } })\n          }\n        } }\n        title={ `${ t(\"reservations.remove\") }?` }>\n        <Button\n          className=\"cancel-button\"\n          danger\n          icon={ <CloseCircleOutlined /> }>\n          { t(\"forms.delete\") }\n        </Button>\n      </Popconfirm>\n    ) : null\n  }\n\n  const footerButtons = [\n    getRemoveButton(),\n    <Button\n      key=\"guest\"\n      onClick={ () => setGuestDrawerOpen(true) }>\n      { t(\"guests.add\") }\n    </Button>,\n    <Button\n      key=\"create\"\n      icon={ reservation === undefined ? <PlusCircleOutlined /> : <EditOutlined /> }\n      onClick={ () => {\n        form.validateFields()\n          .then(submitForm)\n      } }\n      type=\"primary\">\n      { (reservation !== undefined && reservation.id !== undefined) ? t(\"forms.update\") : t(\"forms.save\") }\n    </Button>\n  ]\n\n  useEffect(() => {\n    // Form instance is created on page load (before modal is open),\n    // but the component is rendered only when modal is opened\n    if (isOpen === true) {\n      form.resetFields()\n      getGuests()\n    }\n  }, [ form, getGuests, isOpen, reservation ])\n\n  useEffect(() => {\n    if (guestsData !== undefined && guestsData.guests !== null) {\n      const options: OptionsType[] = []\n      guestsData.guests.forEach((guest: Guests_guests | null) => {\n        if (guest !== null) {\n          options.push(getGuestOption(guest))\n        }\n      })\n      setGuestOptions(options)\n    }\n  }, [ guestsData ])\n\n  return (\n    <>\n      <Modal\n        closeIcon={ (\n          <Popconfirm\n            onCancel={ () => setDeleteConfirmVisible(false) }\n            onConfirm={ close }\n            title={ t(\"forms.close-dirty\") }\n            visible={ deleteConfirmVisible }>\n            <CloseOutlined onClick={ () => {\n              if (form.isFieldsTouched()) {\n                setDeleteConfirmVisible(true)\n              } else {\n                setDeleteConfirmVisible(false)\n                close()\n              }\n            } } />\n          </Popconfirm>\n        ) }\n        footer={ footerButtons }\n        title={ t(\"reservations.form\") }\n        visible={ isOpen }>\n        <Spin\n          spinning={ guestsLoading || createLoading || deleteLoading || updateLoading }\n          tip={ `${ t(\"loading\") }...` }>\n          <Form\n            form={ form }\n            initialValues={ initialValues }\n            layout=\"vertical\">\n            <Form.Item\n              label={ t(\"reservations.date\") }\n              name=\"dates\"\n              required>\n              <DatePicker.RangePicker\n                format={ dateFormat }\n                showTime />\n            </Form.Item>\n            <Form.Item\n              hasFeedback\n              label={ t(\"guests.name\") }\n              name=\"guest\"\n              required\n              rules={ guestValidator }>\n              <Select\n                filterOption={ (input, option): boolean => {\n                  const match = option?.label?.toString().toLowerCase().indexOf(input.toLowerCase())\n                  return match !== undefined && match >= 0\n                } }\n                options={ guestOptions }\n                showSearch />\n            </Form.Item>\n            <Form.List name=\"roommates\">\n              { (fields, { add, remove }) => (\n                <>\n                  { fields.map(({ key, name, fieldKey, ...restField }) => (\n                    <Space\n                      align=\"baseline\"\n                      className=\"roommate-list\"\n                      key={ key }>\n                      <Form.Item\n                        hasFeedback\n                        { ...restField }\n                        fieldKey={ [ fieldKey, 'first' ] }\n                        name={ [ name, \"id\" ] }\n                        rules={ roommateValidator }>\n                        <Select\n                          options={ guestOptions }\n                          showSearch />\n                      </Form.Item>\n                      <MinusCircleOutlined onClick={ () => {\n                        remove(name)\n                        form.validateFields()\n                      } } />\n                    </Space>\n                  )) }\n                  <Form.Item>\n                    <Button\n                      disabled={ fields.length >= guestOptions.length }\n                      type=\"dashed\"\n                      onClick={ () => add() }\n                      block\n                      icon={ <PlusOutlined /> }>\n                      { t(\"reservations.add-roommate\") }\n                    </Button>\n                  </Form.Item>\n                </>\n              ) }\n            </Form.List>\n            <Form.Item\n              hasFeedback\n              label={ t(\"reservations.type\") }\n              name=\"type\"\n              required\n              rules={ [ ReservationFormHelper.getRequiredRule(t(\"reservations.choose-type\")) ] }>\n              <Select\n                options={ ReservationFormHelper.reservationOptions } />\n            </Form.Item>\n            <Form.Item\n              hasFeedback\n              label={ t(\"reservations.meal\") }\n              name=\"meal\"\n              required\n              rules={ [ FormHelper.requiredRule(t(\"forms.field-required\")) ] }>\n              <Select\n                options={ ReservationFormHelper.mealOptions } />\n            </Form.Item>\n            <Form.Item\n              label={ t(\"reservations.purpose\") }\n              name=\"purpose\">\n              <Input placeholder={ t(\"reservations.purpose\") } />\n            </Form.Item>\n            <Form.Item\n              label={ t(\"reservations.notes\") }\n              name=\"notes\">\n              <Input.TextArea\n                placeholder={ t(\"forms.enter-text\") }\n                allowClear />\n            </Form.Item>\n          </Form>\n        </Spin>\n      </Modal>\n      <GuestDrawer\n        close={ () => setGuestDrawerOpen(false) }\n        addGuest={ addGuestOption }\n        visible={ guestDrawerOpen } />\n    </>\n  )\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const SUITES = gql`\r\n  query Suites {\r\n    suites {\r\n      id\r\n      title\r\n      number\r\n    }\r\n  }\r\n`\r\n\r\nexport const SUITES_WITH_RESERVATIONS = gql`\r\n  query SuitesWithReservations {\r\n    guests {\r\n      id\r\n      name\r\n      surname\r\n    }\r\n    suites {\r\n      id\r\n      number\r\n      title\r\n    }\r\n    reservations {\r\n      fromDate\r\n      id\r\n      guest {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      meal\r\n      notes\r\n      purpose\r\n      roommates {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      suite {\r\n        id\r\n      }\r\n      toDate\r\n      type\r\n    }\r\n  }\r\n`","import { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport Title from \"antd/lib/typography/Title\"\nimport Timeline, { CursorMarker, DateHeader, SidebarHeader, TimelineGroup, TimelineHeaders, TimelineItem } from \"react-calendar-timeline\"\nimport { useEffect, useState } from \"react\"\nimport \"react-calendar-timeline/lib/Timeline.css\"\nimport \"./styles.css\"\nimport moment, { Moment } from \"moment\"\nimport { CustomGroupFields, CustomItemFields, IReservation } from \"../../lib/Types\"\nimport { Colors } from \"../../lib/components/Colors\"\nimport { ReservationItem } from \"./components/ReservationItem\"\nimport { ReservationModal } from \"./components/ReservationModal\"\nimport { ApolloError, useQuery } from \"@apollo/client\"\nimport { Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport { SUITES_WITH_RESERVATIONS } from \"../../lib/graphql/queries/Suites\"\nimport { SuitesWithReservations, SuitesWithReservations_reservations } from \"../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations\"\nimport { message, Skeleton } from \"antd\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  setPageTitle: (title: string) => void\n}\n\n// https://github.com/namespace-ee/react-calendar-timeline\nexport const Reservations = withRouter(({\n  setPageTitle\n}: RouteComponentProps & Props) => {\n\n  const { t } = useTranslation()\n\n  const [ groups, setGroups ] = useState<TimelineGroup<CustomGroupFields>[]>([])\n  const [ items, setItems ] = useState<TimelineItem<CustomItemFields, Moment>[]>([])\n  const [ reservation, setReservation ] = useState<IReservation>()\n  const [ reservationModalOpen, setReservationModalOpen ] = useState<boolean>(false)\n  const [ dataLoading, setDataLoading ] = useState<boolean>(true)\n\n  const { data: reservationsData } = useQuery<SuitesWithReservations>(SUITES_WITH_RESERVATIONS, {\n    onCompleted: () => {\n      setDataLoading(false)\n    },\n    onError: (reason: ApolloError) => message.error(reason.message)\n  })\n\n  const getTimelineReservationItem = (reservation: SuitesWithReservations_reservations): TimelineItem<CustomItemFields, Moment> => {\n    return {\n      color: Colors.getReservationColor(reservation.type),\n      end_time: moment(reservation.toDate),\n      group: reservation.suite.id,\n      guest: reservation.guest,\n      id: reservation.id,\n      itemProps: {\n        className: 'reservation-item',\n        style: {\n          background: Colors.getReservationColor(reservation.type),\n          border: \"none\"\n        }\n      },\n      meal: reservation.meal,\n      notes: reservation.notes,\n      purpose: reservation.purpose,\n      roommates: reservation.roommates,\n      start_time: moment(reservation.fromDate),\n      suite: reservation.suite,\n      title: `${ reservation.guest.name } ${ reservation.guest.surname }`,\n      type: reservation.type\n    }\n  }\n\n  const addOrUpdateReservation = (reservation?: SuitesWithReservations_reservations | null) => {\n    if (reservation !== undefined && reservation !== null) {\n      const existingReservations = items.filter(item => item.id !== reservation.id)\n      setItems(existingReservations.concat(getTimelineReservationItem(reservation)))\n    }\n  }\n\n  const clearReservation = (reservationId?: string | null) => {\n    if (reservationId !== undefined && reservationId !== null) {\n      setItems(items.filter(item => item.id !== reservationId))\n    }\n    setReservation(undefined)\n  }\n\n  useEffect(() => {\n    const reservationList: TimelineItem<CustomItemFields, Moment>[] = []\n    const suiteList: TimelineGroup<CustomGroupFields>[] = []\n    reservationsData?.suites?.forEach((suite: Suites_suites | null) => {\n      if (suite !== null) {\n        suiteList.push(suite)\n      }\n    })\n    reservationsData?.reservations?.forEach((reservation: SuitesWithReservations_reservations | null) => {\n      if (reservation !== null) {\n        reservationList.push(getTimelineReservationItem(reservation))\n      }\n    })\n    setItems(reservationList)\n    setGroups(suiteList)\n  }, [ reservationsData ])\n\n  useEffect(() => {\n    setPageTitle(t(\"home-title\"))\n  }, [ setPageTitle, t ])\n\n  // Click on timeline outside of any reservation, \n  // opens modal for new reservation\n  const onCanvasClick = (groupId: number, time: number) => {\n    const selectedGroup = groups.find(group => group.id === groupId)\n    if (selectedGroup !== undefined) {\n      setReservation({\n        fromDate: moment(time),\n        suite: { ...selectedGroup },\n        roommates: [],\n        toDate: moment(time).add(1, \"day\"),\n        type: \"NONBINDING\"\n      })\n      setReservationModalOpen(true)\n    }\n  }\n\n  // Click on item on the timeline opens modal\n  // with existing reservation for editing\n  const onItemClick = (itemId: number) => {\n    const timelineItem = items.find(item => item.id === itemId)\n    if (timelineItem !== undefined) {\n      setReservation({\n        fromDate: moment(timelineItem.start_time),\n        guest: timelineItem.guest,\n        id: timelineItem.id,\n        meal: timelineItem.meal,\n        notes: timelineItem.notes,\n        purpose: timelineItem.purpose,\n        roommates: timelineItem.roommates,\n        suite: timelineItem.suite,\n        toDate: moment(timelineItem.end_time),\n        type: timelineItem.type\n      })\n      setReservationModalOpen(true)\n    }\n  }\n\n  return (\n    <>\n      <Skeleton\n        active\n        loading={ dataLoading }\n        paragraph={ { rows: 5 } }>\n        <Timeline\n          canChangeGroup={ false }\n          canMove={ false }\n          canResize={ false }\n          defaultTimeEnd={ moment().add(12, \"day\") }\n          defaultTimeStart={ moment().add(-12, \"day\") }\n          groupRenderer={ ({ group }) => {\n            return (\n              <>\n                <Title level={ 5 }>{ group.title }</Title>\n              </>\n            )\n          } }\n          groups={ groups }\n          itemRenderer={ props => <ReservationItem { ...props } /> }\n          items={ items }\n          lineHeight={ 60 }\n          onCanvasClick={ onCanvasClick }\n          onItemClick={ onItemClick }>\n          <TimelineHeaders>\n            <SidebarHeader>\n              { ({ getRootProps }) => {\n                return (\n                  <div\n                    { ...getRootProps() }\n                    className=\"side-header\" />\n                )\n              } }\n            </SidebarHeader>\n            <DateHeader unit=\"primaryHeader\" />\n            <DateHeader\n              className=\"days\"\n              unit=\"day\" />\n          </TimelineHeaders>\n          <CursorMarker>\n            {\n              ({ styles, date }) => {\n                return (\n                  <div style={ { ...styles, backgroundColor: \"rgba(136, 136, 136, 0.5)\", color: \"#888\" } }>\n                    <div className=\"rt-marker__label\">\n                      <div className=\"rt-marker__content\">\n                        { moment(date).format(\"DD MMM HH:mm\") }\n                      </div>\n                    </div>\n                  </div>\n                )\n              }\n            }\n          </CursorMarker>\n        </Timeline>\n      </Skeleton>\n      <ReservationModal\n        addOrUpdateReservation={ addOrUpdateReservation }\n        close={ () => {\n          setReservation(undefined)\n          setReservationModalOpen(false)\n        } }\n        isOpen={ reservationModalOpen }\n        clearReservation={ clearReservation }\n        reservation={ reservation } />\n    </>\n  )\n})","import { Avatar, Button, List } from \"antd\"\r\nimport { Colors } from \"../../../lib/components/Colors\"\r\nimport { Guests_guests } from \"../../../lib/graphql/queries/Guests/__generated__/Guests\"\r\n\r\ninterface Props {\r\n  guest: Guests_guests\r\n  openGuestDrawer: () => void\r\n  selectGuest: (guest: Guests_guests) => void\r\n}\r\n\r\nexport const GuestItem = ({\r\n  guest,\r\n  openGuestDrawer,\r\n  selectGuest\r\n}: Props) => {\r\n  return (\r\n    <List.Item\r\n      actions={ [\r\n        <Button\r\n          key=\"edit\"\r\n          onClick={ () => {\r\n            selectGuest(guest)\r\n            openGuestDrawer()\r\n          } }\r\n          type=\"link\">\r\n          upravit\r\n        </Button>,\r\n      ] }>\r\n      <List.Item.Meta\r\n        avatar={\r\n          <Avatar\r\n            gap={ 4 }\r\n            size=\"large\"\r\n            style={ {\r\n              backgroundColor: Colors.getRandomColor()\r\n            } }>\r\n            { guest.name.substring(0, 1).toUpperCase() }\r\n          </Avatar>\r\n        }\r\n        description={ guest.email }\r\n        title={ `${ guest.name } ${ guest.surname }` } />\r\n    </List.Item>\r\n  )\r\n}","import { useState } from \"react\"\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport { Button, List, message, Skeleton } from \"antd\"\nimport { GUESTS } from \"../../lib/graphql/queries/Guests\"\nimport { Guests as GuestsData, Guests_guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\nimport { PlusCircleOutlined } from \"@ant-design/icons\"\nimport { ApolloError, useQuery } from \"@apollo/client\"\nimport { useEffect } from \"react\"\nimport { GuestDrawer } from \"../GuestDrawer\"\nimport \"./styles.css\"\nimport { GuestItem } from \"./components/GuestItem\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  setPageTitle: (title: string) => void\n}\n\nexport const Guests = withRouter(({\n  setPageTitle\n}: RouteComponentProps & Props) => {\n\n  const { t } = useTranslation()\n\n  const [ dataLoading, setDataLoading ] = useState<boolean>(true)\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\n  const [ guests, setGuests ] = useState<Guests_guests[]>([])\n  const [ selectedGuest, setSelectedGuest ] = useState<Guests_guests | null>(null)\n\n  const { data: guestsData } = useQuery<GuestsData>(GUESTS, {\n    onCompleted: () => {\n      setDataLoading(false)\n    },\n    onError: (reason: ApolloError) => message.error(reason.message)\n  })\n\n  const addOrRemoveGuest = (guest: Guests_guests) => {\n    const existingGuests = guests.filter(cachedGuest => cachedGuest.id !== guest.id)\n    setGuests(existingGuests.concat(guest))\n  }\n\n  const removeGuest = (guestId: string) =>\n    setGuests(guests.filter(cachedGuest => cachedGuest.id !== guestId))\n\n  useEffect(() => {\n    const guestsList: Guests_guests[] = []\n    if (guestsData !== undefined && guestsData?.guests !== null) {\n      guestsData.guests.forEach((guest: Guests_guests | null) => {\n        if (guest !== null) {\n          guestsList.push(guest)\n        }\n      })\n      setGuests(guestsList)\n    }\n  }, [ guestsData ])\n\n  useEffect(() => {\n    setPageTitle(t(\"guests.page-title\"))\n  }, [ setPageTitle, t ])\n\n  return (\n    <>\n      <Skeleton\n        active\n        loading={ dataLoading }\n        paragraph={ { rows: 5 } }>\n        <List\n          bordered={ true }\n          className=\"guests-list\"\n          dataSource={ guests }\n          footer={\n            <Button\n              icon={ <PlusCircleOutlined /> }\n              onClick={ () => {\n                setSelectedGuest(null)\n                setDrawerVisible(true)\n              } }\n              type=\"primary\">\n              { t(\"guests.add\") }\n            </Button>\n          }\n          header={ <h4>{ t(\"guests.list\") }</h4> }\n          itemLayout=\"horizontal\"\n          renderItem={ (guest: Guests_guests) => (\n            <GuestItem\n              guest={ guest }\n              openGuestDrawer={ () => setDrawerVisible(true) }\n              selectGuest={ setSelectedGuest } />\n          ) } />\n      </Skeleton>\n      <GuestDrawer\n        addGuest={ addOrRemoveGuest }\n        close={ () => setDrawerVisible(false) }\n        guest={ selectedGuest }\n        removeGuest={ removeGuest }\n        visible={ drawerVisible } />\n    </>\n  )\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_SUITE = gql`\r\n  mutation CreateSuite($data: SuiteInput!) {\r\n    createSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_SUITE = gql`\r\n  mutation UpdateSuite($data: SuiteInput!) {\r\n    updateSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_SUITE = gql`\r\n  mutation DeleteSuite($suiteId: ID!) {\r\n    deleteSuite(suiteId: $suiteId) {\r\n      suite {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\nimport { Button, Drawer, Form, Input, message, Popconfirm, Spin } from \"antd\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { CloseOutlined, WarningOutlined } from \"@ant-design/icons\"\nimport { Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport { Store } from \"antd/lib/form/interface\"\nimport { SuiteForm } from \"../../lib/Types\"\nimport { ApolloError, FetchResult, useMutation } from \"@apollo/client\"\nimport { CreateSuite, CreateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/CreateSuite\"\nimport { CREATE_SUITE, DELETE_SUITE, UPDATE_SUITE } from \"../../lib/graphql/mutations/Suite\"\nimport { UpdateSuite, UpdateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/UpdateSuite\"\nimport { DeleteSuite, DeleteSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/DeleteSuite\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  addOrUpdateSuite: (suite: Suites_suites) => void\n  clearSuite: (suiteId: string) => void\n  close: () => void\n  suite?: Suites_suites\n  visible: boolean\n}\n\nexport const SuiteDrawer = ({\n  addOrUpdateSuite,\n  clearSuite,\n  close,\n  suite,\n  visible\n}: Props) => {\n\n  const { t } = useTranslation()\n\n  const networkErrorHandler = (reason: ApolloError) => message.error(reason.message)\n\n  const [ createSuite, { loading: createLoading } ] = useMutation<CreateSuite, CreateSuiteVariables>(CREATE_SUITE, {\n    onError: networkErrorHandler\n  })\n  const [ deleteSuite, { loading: deleteLoading } ] = useMutation<DeleteSuite, DeleteSuiteVariables>(DELETE_SUITE, {\n    onError: networkErrorHandler\n  })\n  const [ updateSuite, { loading: updateLoading } ] = useMutation<UpdateSuite, UpdateSuiteVariables>(UPDATE_SUITE, {\n    onError: networkErrorHandler\n  })\n\n  const [ form ] = Form.useForm()\n\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\n\n  const initialValues: Store = {\n    number: suite?.number,\n    title: suite?.title\n  }\n\n  const submitForm = () => {\n    form.validateFields()\n      .then(() => {\n        const formData: SuiteForm = form.getFieldsValue(true)\n        const variables = {\n          number: formData.number,\n          title: formData.title\n        }\n        if (suite === undefined) {\n          createSuite({ variables: { data: { ...variables } } })\n            .then((value: FetchResult<CreateSuite>) => {\n              const suite = value.data?.createSuite?.suite\n              if (suite !== undefined && suite !== null) {\n                addOrUpdateSuite(suite)\n                message.success(\"Apartmá byla vytvořena\")\n                close()\n              }\n            })\n        } else {\n          updateSuite({ variables: { data: { id: suite.id, ...variables } } })\n            .then((value: FetchResult<UpdateSuite>) => {\n              const suite = value.data?.updateSuite?.suite\n              if (suite !== undefined && suite !== null) {\n                addOrUpdateSuite(suite)\n                message.success(\"Apartmá byla aktualizována\")\n                close()\n              }\n            })\n        }\n      })\n      .catch(() => {\n        console.error(\"Form validation failed\");\n      })\n  }\n\n  const closeDrawer = (): void => {\n    if (form.isFieldsTouched()) {\n      setConfirmClose(true)\n    } else {\n      close()\n    }\n  }\n\n  useEffect(() => {\n    if (visible === true) {\n      form.resetFields()\n    }\n  }, [ form, visible ])\n\n  return (\n    <Drawer\n      closeIcon={ (\n        <Popconfirm\n          onCancel={ () => setConfirmClose(false) }\n          onConfirm={ () => {\n            setConfirmClose(false)\n            close()\n          } }\n          placement=\"rightTop\"\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n          visible={ confirmClose }>\n          <CloseOutlined onClick={ closeDrawer } />\n        </Popconfirm>\n      ) }\n      footer={\n        <>\n          { suite !== undefined &&\n            <Popconfirm\n              cancelText=\"Ne\"\n              icon={ <WarningOutlined /> }\n              okText=\"Ano\"\n              onConfirm={ () => {\n                deleteSuite({ variables: { suiteId: suite.id } })\n                  .then((value: FetchResult<DeleteSuite>) => {\n                    const suiteId = value.data?.deleteSuite?.suite?.id\n                    if (suiteId !== undefined) {\n                      clearSuite(suiteId)\n                      message.success(\"Apartmá byla odstraněna\")\n                      close()\n                    }\n                  })\n              } }\n              title=\"opravdu odstranit?\">\n              <Button\n                danger\n                style={ {\n                  float: \"left\"\n                } }\n                type=\"primary\">\n                Odstranit\n              </Button>\n            </Popconfirm>\n          }\n          <Button\n            onClick={ submitForm }\n            type=\"primary\">\n            { suite === undefined ? \"Vytvořit\" : \"Upravit\" }\n          </Button>\n        </>\n      }\n      footerStyle={ {\n        textAlign: \"right\"\n      } }\n      placement=\"left\"\n      title=\"Nové apartmá\"\n      visible={ visible }\n      width={ 500 }>\n      <Spin\n        size=\"large\"\n        spinning={\n          createLoading\n          || deleteLoading\n          || updateLoading\n        }\n        tip=\"Načítám...\">\n        <Form\n          form={ form }\n          initialValues={ initialValues }\n          layout=\"vertical\"\n          name=\"suite\">\n          <Form.Item\n            hasFeedback\n            label=\"Název\"\n            name=\"title\"\n            required\n            rules={ [ FormHelper.requiredRule(t(\"forms.field-required\")) ] }>\n            <Input placeholder=\"název apartmá\" />\n          </Form.Item>\n          <Form.Item\n            hasFeedback\n            label=\"Číslo\"\n            name=\"number\"\n            required\n            rules={ [\n              FormHelper.requiredRule(t(\"forms.field-required\")),\n              {\n                message: \"zadejte číslo\",\n                pattern: /^[0-9]+$/\n              }\n            ] }>\n            <Input placeholder=\"číslo apartmá\" type=\"number\" />\n          </Form.Item>\n        </Form>\n      </Spin>\n    </Drawer>\n  )\n}","import { PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\n\r\ninterface Props {\r\n  hasAccess: boolean\r\n  onAdd: () => void\r\n}\r\n\r\nexport const AddSuite = ({\r\n  hasAccess,\r\n  onAdd\r\n}: Props) => {\r\n  return hasAccess === true ? (\r\n    <Button\r\n      icon={ <PlusCircleOutlined /> }\r\n      onClick={ onAdd }\r\n      type=\"primary\">\r\n      Přidat apartmá\r\n    </Button>\r\n  ) : null\r\n}","import { useEffect, useState } from \"react\"\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport { HomeOutlined } from \"@ant-design/icons\"\nimport { Avatar, Button, List, message, Skeleton } from \"antd\"\nimport { SuiteDrawer } from \"../SuiteDrawer\"\nimport { Suites as SuitesData, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport \"./styles.css\"\nimport { AddSuite } from \"./components/AddSuite\"\nimport { ApolloError, useQuery } from \"@apollo/client\"\nimport { SUITES } from \"../../lib/graphql/queries/Suites\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  setPageTitle: (title: string) => void\n}\n\nexport const Suites = withRouter(({\n  setPageTitle\n}: RouteComponentProps & Props) => {\n\n  const { t } = useTranslation()\n\n  const [ dataLoading, setDataLoading ] = useState<boolean>(true)\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\n  const [ activeSuite, setActiveSuite ] = useState<Suites_suites>()\n  const [ suites, setSuites ] = useState<Suites_suites[]>([])\n  const [ hasAccess, setHasAccess ] = useState<boolean>(false)\n\n  const { data: suitesData } = useQuery<SuitesData>(SUITES, {\n    onCompleted: () => {\n      setHasAccess(true)\n      setDataLoading(false)\n    },\n    onError: (reason: ApolloError) => {\n      message.error(reason.message)\n      setHasAccess(false)\n      setDataLoading(false)\n    }\n  })\n\n  const addOrUpdateSuite = (suite: Suites_suites) => {\n    setSuites(suites.filter(cachedSuite => cachedSuite.id !== suite.id).concat(suite))\n  }\n\n  const clearSuite = (suiteId: string) => {\n    setSuites(suites.filter(suite => suite.id !== suiteId))\n  }\n\n  useEffect(() => {\n    const suitesList: Suites_suites[] = []\n    suitesData?.suites?.forEach((suite: Suites_suites | null) => {\n      if (suite !== null) {\n        suitesList.push(suite)\n      }\n    })\n    setSuites(suitesList)\n  }, [ suitesData ])\n\n  useEffect(() => {\n    setPageTitle(t(\"suites-title\"))\n  }, [ setPageTitle, t ])\n\n  return (\n    <>\n      <Skeleton\n        active\n        loading={ dataLoading }\n        paragraph={ { rows: 5 } }>\n        <List\n          bordered={ true }\n          className=\"suites-list\"\n          dataSource={ suites }\n          footer={\n            <AddSuite\n              hasAccess={ hasAccess }\n              onAdd={ () => {\n                setActiveSuite(undefined)\n                setDrawerVisible(true)\n              } } />\n          }\n          header={ <h4>Seznam apartmá</h4> }\n          itemLayout=\"horizontal\"\n          renderItem={ suite => (\n            <List.Item\n              actions={ [\n                <Button\n                  key=\"edit\"\n                  onClick={ () => {\n                    setActiveSuite(suite)\n                    setDrawerVisible(true)\n                  } }\n                  type=\"link\">\n                  upravit\n                </Button>\n              ] }>\n              <List.Item.Meta\n                avatar={\n                  <Avatar gap={ 4 } size=\"large\">\n                    <HomeOutlined />\n                  </Avatar>\n                }\n                description={ `číslo pokoje - ${ suite.number }` }\n                title={ suite.title } />\n            </List.Item>\n          ) } />\n      </Skeleton>\n      <SuiteDrawer\n        addOrUpdateSuite={ addOrUpdateSuite }\n        clearSuite={ clearSuite }\n        close={ () => setDrawerVisible(false) }\n        suite={ activeSuite }\n        visible={ drawerVisible } />\n    </>\n  )\n})","import { ApolloError, useMutation } from \"@apollo/client\"\r\nimport { Button, Form, FormProps, Input, Layout, message, Spin } from \"antd\"\r\nimport { useEffect } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\nimport { UrlHelper } from \"../../lib/components/UrlHelper\"\r\nimport { errorMessages, refreshTokenName, tokenName, usernameKey } from \"../../lib/Constants\"\r\nimport { TOKEN_AUTH } from \"../../lib/graphql/mutations/Token\"\r\nimport { TokenAuth, TokenAuthVariables } from \"../../lib/graphql/mutations/Token/__generated__/TokenAuth\"\r\nimport \"./styles.css\"\r\n\r\ninterface Props {\r\n  setPageTitle: (title: string) => void\r\n}\r\n\r\nconst layout: FormProps = {\r\n  labelCol: {\r\n    lg: 8,\r\n    md: 8,\r\n    sm: 8\r\n  },\r\n  wrapperCol: {\r\n    lg: 16,\r\n    md: 16,\r\n    sm: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    lg: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n    xs: {\r\n      offset: 0,\r\n      span: 24\r\n    }\r\n  },\r\n};\r\n\r\nexport const Login = withRouter(({\r\n  history,\r\n  setPageTitle\r\n}: RouteComponentProps & Props) => {\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [ getToken, { loading: loginLoading } ] = useMutation<TokenAuth, TokenAuthVariables>(TOKEN_AUTH, {\r\n    onCompleted: (token: TokenAuth) => {\r\n      if (token.tokenAuth !== null) {\r\n        localStorage.setItem(tokenName, token.tokenAuth.token)\r\n        localStorage.setItem(refreshTokenName, token.tokenAuth.refreshToken)\r\n        localStorage.setItem(usernameKey, token.tokenAuth.payload.username)\r\n        history.push(UrlHelper.getReferrer())\r\n      }\r\n    },\r\n    onError: (reason: ApolloError) => {\r\n      switch (reason.message) {\r\n        case errorMessages.invalidCredentials:\r\n          message.error(t(\"login.invalid-login\"))\r\n          break\r\n        default:\r\n          message.error(t(\"generic-error\"))\r\n      }\r\n    }\r\n  })\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const login = (data: { password: string, username: string }): void => {\r\n    getToken({\r\n      variables: {\r\n        password: data.password.trim(),\r\n        username: data.username.trim()\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPageTitle(t(\"pages.login\"))\r\n  }, [ setPageTitle, t ])\r\n\r\n  return (\r\n    <Layout.Content>\r\n      <Spin\r\n        spinning={ loginLoading }\r\n        tip={ `${ t(\"login.in-progress\") }...` }>\r\n        <Form\r\n          { ...layout }\r\n          className=\"login\"\r\n          form={ form }\r\n          name=\"login\"\r\n          onFinish={ login }>\r\n          <Form.Item\r\n            label={ t(\"name\") }\r\n            name=\"username\"\r\n            rules={ [ {\r\n              required: true,\r\n              message: t(\"forms.field-required\")\r\n            } ] }>\r\n            <Input type=\"text\" placeholder={ t(\"forms.user-name\") } />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Heslo\"\r\n            name=\"password\"\r\n            rules={ [ {\r\n              required: true,\r\n              message: t(\"forms.field-required\")\r\n            } ] }>\r\n            <Input type=\"password\" placeholder={ t(\"forms.password\") } />\r\n          </Form.Item>\r\n          <Form.Item { ...tailLayout }>\r\n            <Button type=\"default\" htmlType=\"button\" onClick={ () => form.resetFields() }>\r\n              { t(\"forms.reset\") }\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              { t(\"forms.login\") }\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Spin>\r\n    </Layout.Content>\r\n  )\r\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const RESERVATION_GUESTS = gql`\r\n  query ReservationGuests($reservationHash: String!) {\r\n    reservationGuests(reservationHash: $reservationHash) {\r\n      guest {\r\n        addressMunicipality\r\n        addressPsc\r\n        addressStreet\r\n        age\r\n        citizenship\r\n        email\r\n        gender\r\n        identity\r\n        id\r\n        name\r\n        phoneNumber\r\n        surname\r\n        visaNumber\r\n      }\r\n      roommates {\r\n        addressMunicipality\r\n        addressPsc\r\n        addressStreet\r\n        age\r\n        citizenship\r\n        email\r\n        gender\r\n        identity\r\n        id\r\n        name\r\n        phoneNumber\r\n        surname\r\n        visaNumber\r\n      }\r\n    }\r\n  }\r\n`","import { gql } from \"@apollo/client\";\r\n\r\nexport const CONTACT_MESSAGE = gql`\r\n  mutation CreateContactMessage($data: ContactInput!) {\r\n    createContactMessage(data: $data) {\r\n      contact {\r\n        message\r\n      }\r\n    }\r\n  }\r\n`","import { useMutation } from \"@apollo/client\"\r\nimport { Button, Form, Input, message, Result, Spin } from \"antd\"\r\nimport { CONTACT_MESSAGE } from \"../../../../lib/graphql/mutations/Contact\"\r\nimport { CreateContactMessage, CreateContactMessageVariables } from \"../../../../lib/graphql/mutations/Contact/__generated__/CreateContactMessage\"\r\n\r\ninterface Props {\r\n  show: boolean\r\n}\r\n\r\nexport const Error = ({\r\n  show\r\n}: Props) => {\r\n\r\n  const [ createContactMessage, { loading: creatingMessage } ] = useMutation<CreateContactMessage, CreateContactMessageVariables>(CONTACT_MESSAGE)\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const submitForm = () => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        createContactMessage({ variables: { data: { message: form.getFieldValue(\"message\") } } })\r\n        .then(() => {\r\n          message.success(\"Vaše zpráva byla odeslána, děkujeme!\")\r\n          form.resetFields()\r\n        })\r\n      })\r\n      .catch(() => message.error(\"Formulář nelze odeslat, opravte prosím chyby\"))\r\n  }\r\n\r\n  return show === true ? (\r\n    <Spin\r\n      spinning={ creatingMessage }\r\n      tip=\"Posílám zprávu\">\r\n      <Result\r\n        status=\"error\"\r\n        title=\"Rezervace nenalezena\"\r\n        subTitle=\"Zanechte nám prosím zprávu, nebo nám zavolejte na +420 XXX XXX XXX\"\r\n        extra={\r\n          <Form\r\n            form={ form }\r\n            name=\"contact\"\r\n            onFinish={ submitForm }\r\n            wrapperCol={ {\r\n              offset: 6,\r\n              span: 12\r\n            } }>\r\n            <Form.Item\r\n              name=\"message\"\r\n              rules={ [\r\n                {\r\n                  required: true,\r\n                  message: \"Zadejte text zprávy\"\r\n                }\r\n              ] }>\r\n              <Input.TextArea rows={ 4 } />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Odeslat\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        } />\r\n    </Spin>\r\n  ) : null\r\n}","import { Avatar, Button, List } from \"antd\"\r\nimport { Colors } from \"../../../../lib/components/Colors\"\r\nimport { ReservationGuest } from \"../../../../lib/Types\"\r\n\r\ninterface Props {\r\n  guest?: ReservationGuest[]\r\n  loading: boolean\r\n  openDrawer: (guest: ReservationGuest) => void\r\n}\r\n\r\nexport const Host = ({\r\n  guest,\r\n  loading,\r\n  openDrawer\r\n}: Props) => {\r\n  return guest === undefined ? null : (\r\n    <List\r\n      bordered={ true }\r\n      className=\"guests-list\"\r\n      dataSource={ guest }\r\n      header={ <h4>Host</h4> }\r\n      itemLayout=\"horizontal\"\r\n      renderItem={ (guest: ReservationGuest) => (\r\n        <List.Item\r\n          key={ guest.id }\r\n          actions={\r\n            loading ? [] : [\r\n              <Button\r\n                key=\"edit\"\r\n                onClick={ () => {\r\n                  openDrawer(guest)\r\n                  // setSelectedGuest(guest)\r\n                  // setDrawerVisible(true)\r\n                } }\r\n                type=\"link\">\r\n                upravit\r\n              </Button>,\r\n            ]\r\n          }>\r\n          <List.Item.Meta\r\n            avatar={\r\n              <Avatar\r\n                gap={ 4 }\r\n                size=\"large\"\r\n                style={ {\r\n                  backgroundColor: Colors.getRandomColor()\r\n                } }>\r\n                { guest.name.substring(0, 1).toUpperCase() }\r\n              </Avatar>\r\n            }\r\n            description={ guest.email }\r\n            title={ `${ guest.name } ${ guest.surname }` } />\r\n        </List.Item>\r\n      ) } />\r\n  )\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const UPDATE_RESERVATON_GUEST = gql`\r\n  mutation UpdateReservationGuest($data: ReservationGuestInput!) {\r\n    updateReservationGuest(data: $data) {\r\n      guest {\r\n        addressMunicipality\r\n        addressPsc\r\n        addressStreet\r\n        age\r\n        citizenship\r\n        email\r\n        gender\r\n        identity\r\n        id\r\n        name\r\n        phoneNumber\r\n        surname\r\n        visaNumber\r\n      }\r\n    }\r\n  }\r\n`","import { CloseOutlined, MailOutlined } from \"@ant-design/icons\"\r\nimport { ApolloError, FetchResult, useMutation } from \"@apollo/client\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm, Select, Skeleton } from \"antd\"\r\nimport { Store } from \"antd/lib/form/interface\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { FormHelper } from \"../../../../lib/components/FormHelper\"\r\nimport { GuestFormHelper } from \"../../../../lib/components/GuestFormHelper\"\r\nimport { UPDATE_RESERVATON_GUEST } from \"../../../../lib/graphql/mutations/ReservationGuest\"\r\nimport { UpdateReservationGuest, UpdateReservationGuestVariables } from \"../../../../lib/graphql/mutations/ReservationGuest/__generated__/UpdateReservationGuest\"\r\nimport { GuestForm, ReservationGuest } from \"../../../../lib/Types\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  guest?: ReservationGuest\r\n  reservationHash: string\r\n  visible: boolean\r\n}\r\n\r\nexport const ReservationGuestDrawer = ({\r\n  close,\r\n  guest,\r\n  reservationHash,\r\n  visible\r\n}: Props) => {\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [ updateGuest, { loading: updateLoading } ] = useMutation<UpdateReservationGuest, UpdateReservationGuestVariables>(UPDATE_RESERVATON_GUEST)\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const initialValues: Store = {\r\n    age: guest?.age,\r\n    address: {\r\n      municipality: guest?.addressMunicipality,\r\n      psc: guest?.addressPsc,\r\n      street: guest?.addressStreet\r\n    },\r\n    citizenship: {\r\n      selected: guest?.citizenship\r\n    },\r\n    email: guest?.email,\r\n    gender: guest?.gender,\r\n    identity: guest?.identity,\r\n    name: guest?.name,\r\n    phone: guest?.phoneNumber,\r\n    surname: guest?.surname,\r\n    visa: guest?.visaNumber\r\n  }\r\n  const emailPrefixIcon = (\r\n    <Form.Item name=\"email-prefix\" noStyle>\r\n      <MailOutlined />\r\n    </Form.Item>\r\n  )\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          age: formData.age,\r\n          addressMunicipality: formData.address?.municipality,\r\n          addressPsc: formData.address?.psc,\r\n          addressStreet: formData.address?.street,\r\n          citizenship: formData.citizenship?.selected === undefined ? formData.citizenship?.new : formData.citizenship.selected,\r\n          email: formData.email,\r\n          gender: formData.gender,\r\n          identity: formData.identity,\r\n          name: formData.name,\r\n          phoneNumber: formData.phone,\r\n          surname: formData.surname,\r\n          visaNumber: formData.visa\r\n        }\r\n        updateGuest({ variables: { data: { id: String(guest?.id), hash: reservationHash, ...variables } } })\r\n          .then((value: FetchResult<UpdateReservationGuest>) => {\r\n            const guest = value.data?.updateReservationGuest?.guest\r\n            if (guest !== undefined && guest !== null) {\r\n              message.success(`Host ${ guest.name } ${ guest.surname } aktualizován!`)\r\n            }\r\n            close()\r\n          })\r\n          .catch((reason: ApolloError) => message.error(reason.message))\r\n      })\r\n      .catch(() => message.error(\"Formulář nelze odeslat, opravte prosím chyby\"))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true) {\r\n      form.resetFields()\r\n    }\r\n  }, [ form, visible ])\r\n\r\n  return guest === undefined ? null : (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ () => {\r\n            if (form.isFieldsTouched()) {\r\n              setConfirmClose(true)\r\n            } else {\r\n              close()\r\n            }\r\n          } } />\r\n        </Popconfirm>\r\n      ) }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      width={ 500 }\r\n      visible={ visible }\r\n      footer={\r\n        <Button\r\n          onClick={ submitForm }\r\n          type=\"primary\">\r\n          Uložit\r\n        </Button>\r\n      }\r\n      footerStyle={ {\r\n        padding: \"16px 20px\",\r\n        textAlign: \"right\"\r\n      } }>\r\n      <Skeleton\r\n        active\r\n        loading={ updateLoading }\r\n        paragraph={ { rows: 15 } }>\r\n        <Form\r\n          form={ form }\r\n          initialValues={ initialValues }\r\n          layout=\"vertical\"\r\n          name=\"guest\">\r\n          <Title level={ 5 }>Osobní údaje</Title>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Jméno\"\r\n            name=\"name\"\r\n            required\r\n            rules={ [\r\n              FormHelper.requiredRule(t(\"forms.field-required\")),\r\n              GuestFormHelper.requiredAlphaRule(t(\"forms.enter-text\"))\r\n            ] }>\r\n            <Input placeholder=\"Vaše Jméno\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Příjmení\"\r\n            name=\"surname\"\r\n            required\r\n            rules={ [\r\n              FormHelper.requiredRule(t(\"forms.field-required\")),\r\n              GuestFormHelper.requiredAlphaRule(t(\"forms.enter-text\"))\r\n            ] }>\r\n            <Input placeholder=\"Vaše Příjmení\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"E-Mail\"\r\n            name=\"email\"\r\n            required\r\n            rules={ [ FormHelper.requiredRule(t(\"forms.field-required\")) ] }>\r\n            <Input\r\n              addonBefore={ emailPrefixIcon }\r\n              placeholder=\"e-mail\"\r\n              type=\"email\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Číslo OP\"\r\n            name=\"identity\">\r\n            <Input placeholder=\"číslo občanského průkazu\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Telefonní Číslo\"\r\n            name=\"phone\">\r\n            <Input placeholder=\"číslo\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Věk\"\r\n            name=\"age\">\r\n            <Select\r\n              options={ GuestFormHelper.ageOptions }\r\n              placeholder=\"vyberte ze seznamu\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Pohlaví\"\r\n            name=\"gender\">\r\n            <Select\r\n              placeholder=\"vyberte ze seznamu\">\r\n              <Select.Option value=\"M\">Muž</Select.Option>\r\n              <Select.Option value=\"F\">Žena</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Číslo viza\"\r\n            name=\"visa\">\r\n            <Input placeholder=\"číslo visa\" />\r\n          </Form.Item>\r\n          <Title level={ 5 }>Trvalé bydliště</Title>\r\n          <Form.Item\r\n            label=\"Ulice\"\r\n            name={ [ \"address\", \"street\" ] }>\r\n            <Input placeholder=\"ulice\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"PSČ/Obec\">\r\n            <Input.Group compact>\r\n              <Form.Item\r\n                style={ { marginBottom: 0, width: \"50%\" } }\r\n                name={ [ \"address\", \"psc\" ] }>\r\n                <Input placeholder=\"PSČ\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                style={ { marginBottom: 0, width: \"50%\" } }\r\n                name={ [ \"address\", \"municipality\" ] }>\r\n                <Input placeholder=\"Obec\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Občanství\">\r\n            <Input.Group compact>\r\n              <Form.Item\r\n                style={ { width: \"50%\" } }\r\n                name={ [ \"citizenship\", \"selected\" ] }>\r\n                <Select style={ { width: \"100%\" } } placeholder=\"ze seznamu\">\r\n                  <Select.Option value=\"cze\">CZE</Select.Option>\r\n                  <Select.Option value=\"sk\">SK</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                style={ { width: \"50%\" } }\r\n                name={ [ \"citizenship\", \"new\" ] }>\r\n                <Input placeholder=\"ručně\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n        </Form>\r\n      </Skeleton>\r\n    </Drawer>\r\n  )\r\n}","import { Avatar, Button, List } from \"antd\"\r\nimport { Colors } from \"../../../../lib/components/Colors\"\r\nimport { ReservationGuest } from \"../../../../lib/Types\"\r\n\r\ninterface Props {\r\n  loading: boolean\r\n  openDrawer: (guest: ReservationGuest) => void\r\n  roommates?: ReservationGuest[]\r\n}\r\n\r\nexport const Roommates = ({\r\n  loading,\r\n  openDrawer,\r\n  roommates\r\n}: Props) => {\r\n  return roommates === undefined ? null : (\r\n    <List\r\n      bordered={ true }\r\n      className=\"guests-list\"\r\n      dataSource={ roommates }\r\n      header={ <h4>Spolubydlící</h4> }\r\n      itemLayout=\"horizontal\"\r\n      renderItem={ (roommate: ReservationGuest) => (\r\n        <List.Item\r\n          key={ roommate.id }\r\n          actions={\r\n            loading ? [] : [\r\n              <Button\r\n                key=\"edit\"\r\n                onClick={ () => {\r\n                  openDrawer(roommate)\r\n                  // setSelectedGuest(roommate)\r\n                  // setDrawerVisible(true)\r\n                } }\r\n                type=\"link\">\r\n                upravit\r\n              </Button>,\r\n            ]\r\n          }>\r\n          <List.Item.Meta\r\n            avatar={\r\n              <Avatar\r\n                gap={ 4 }\r\n                size=\"large\"\r\n                style={ {\r\n                  backgroundColor: Colors.getRandomColor()\r\n                } }>\r\n                { roommate.name.substring(0, 1).toUpperCase() }\r\n              </Avatar>\r\n            }\r\n            description={ roommate.email }\r\n            title={ `${ roommate.name } ${ roommate.surname }` } />\r\n        </List.Item>\r\n      ) } />\r\n  )\r\n}","import { useQuery } from \"@apollo/client\"\r\nimport { Spin } from \"antd\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Guests_guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { RESERVATION_GUESTS } from \"../../lib/graphql/queries/ReservationGuests\"\r\nimport { ReservationGuests as ReservationGuestsData, ReservationGuestsVariables, ReservationGuests_reservationGuests_roommates } from \"../../lib/graphql/queries/ReservationGuests/__generated__/ReservationGuests\"\r\nimport { ReservationGuest } from \"../../lib/Types\"\r\nimport { Error } from \"./components/Error\"\r\nimport { Host } from \"./components/Host\"\r\nimport { ReservationGuestDrawer } from \"./components/ReservationGuestDrawer\"\r\nimport { Roommates } from \"./components/Roommates\"\r\n\r\ninterface Props {\r\n  setPageTitle: (title: string | null) => void\r\n}\r\n\r\nexport const ReservationGuests = ({ setPageTitle }: Props) => {\r\n\r\n  let { hash }: { hash: string } = useParams()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [ guest, setGuest ] = useState<ReservationGuest[]>()\r\n  const [ roommates, setRoommates ] = useState<ReservationGuest[]>()\r\n  const [ selectedGuest, setSelectedGuest ] = useState<ReservationGuest>()\r\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\r\n  const [ showError, setShowError ] = useState<boolean>(false)\r\n\r\n  const { loading: dataLoading, data } = useQuery<ReservationGuestsData, ReservationGuestsVariables>(RESERVATION_GUESTS, {\r\n    variables: { reservationHash: hash },\r\n    onCompleted: () => {\r\n      setPageTitle(t(\"guest-view-title\"))\r\n      setShowError(false)\r\n    },\r\n    onError: () => {\r\n      setPageTitle(null)\r\n      setShowError(true)\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const roommateList: Guests_guests[] = []\r\n    const guest = data?.reservationGuests?.guest\r\n    const roommates = data?.reservationGuests?.roommates\r\n    if (guest !== undefined && guest !== null) {\r\n      setGuest([ guest ])\r\n    }\r\n    if (roommates !== undefined && roommates !== null) {\r\n      roommates.forEach((roommate: ReservationGuests_reservationGuests_roommates | null) => {\r\n        if (roommate !== null) {\r\n          roommateList.push(roommate)\r\n        }\r\n      })\r\n      setRoommates(roommateList)\r\n    }\r\n  }, [ data ])\r\n\r\n  return (\r\n    <>\r\n      <Spin\r\n        spinning={ dataLoading }>\r\n        <Host\r\n          guest={ guest }\r\n          loading={ dataLoading }\r\n          openDrawer={ (reservationGuest: ReservationGuest) => {\r\n            setSelectedGuest(reservationGuest)\r\n            setDrawerVisible(true)\r\n          } } />\r\n        <Roommates\r\n          loading={ dataLoading }\r\n          openDrawer={ (roommate: ReservationGuest) => {\r\n            setSelectedGuest(roommate)\r\n            setDrawerVisible(true)\r\n          } }\r\n          roommates={ roommates } />\r\n        <Error show={ showError } />\r\n      </Spin>\r\n      <ReservationGuestDrawer\r\n        close={ () => setDrawerVisible(false) }\r\n        guest={ selectedGuest }\r\n        reservationHash={ hash }\r\n        visible={ drawerVisible } />\r\n    </>\r\n  )\r\n}","import Title from \"antd/lib/typography/Title\"\r\n\r\ninterface Props {\r\n  title: string | null\r\n}\r\n\r\nexport const PageTitle = ({\r\n  title\r\n}: Props) => {\r\n  return title === null ? null : (\r\n    <Title\r\n      level={ 3 }\r\n      style={ {\r\n        borderBottom: \"1px solid #e1e1e1\",\r\n        paddingBottom: \".3em\"\r\n      } }>\r\n      { title }\r\n    </Title>\r\n  )\r\n}","import { Affix, Layout } from \"antd\"\nimport { useState } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport { Header } from \"./components/Header\"\nimport { NotFound } from \"../NotFound\"\nimport { Reservations } from \"../Reservations\"\nimport { Guests } from \"../Guests\"\nimport { Suites } from \"../Suites\"\nimport { Login } from \"../Login\"\nimport { paths, usernameKey } from \"../../lib/Constants\"\nimport { ReservationGuests } from \"../ReservationGuests\"\nimport { PageTitle } from \"./components/PageTitle\"\nimport { useTranslation } from \"react-i18next\"\nimport { User } from \"../../lib/Types\"\n\nexport const App = () => {\n\n  const { t } = useTranslation()\n\n  const [ pageTitle, setPageTitle ] = useState<string | null>(`${ t(\"loading\") }...`)\n\n  const getUser = (): User | null => {\n    const username = localStorage.getItem(usernameKey)\n    return username !== null ? {\n      username\n    } : null\n  }\n\n  return (\n    <Layout id=\"app\">\n      <Affix offsetTop={ 0 } className=\"app__affix-header\">\n        <Header user={ getUser() } />\n      </Affix>\n      <Layout.Header>\n        <PageTitle title={ pageTitle } />\n      </Layout.Header>\n      <Layout.Content className=\"app-content\">\n        <Switch>\n          <Route exact path={ paths.root }>\n            <Reservations\n              setPageTitle={ setPageTitle } />\n          </Route>\n          <Route exact path={ paths.suites }>\n            <Suites\n              setPageTitle={ setPageTitle } />\n          </Route>\n          <Route exact path={ paths.guests }>\n            <Guests\n              setPageTitle={ setPageTitle } />\n          </Route>\n          <Route exact path={ paths.login }>\n            <Login\n              setPageTitle={ setPageTitle } />\n          </Route>\n          <Route exact path={ paths.reservation_guests }>\n            <ReservationGuests\n              setPageTitle={ setPageTitle } />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Layout.Content>\n    </Layout >\n  )\n}","import i18next from \"i18next\";\r\n\r\nimport Backend from \"i18next-http-backend\"\r\nimport LanguageDetector from \"i18next-browser-languagedetector\"\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\ni18next\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    fallbackLng: \"cs\",\r\n    debug: false\r\n  })\r\n\r\nexport default i18next\r\n","import ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport './index.css'\nimport { getCookie } from \"./lib/Cookie\"\nimport moment from 'moment'\nimport 'moment/locale/cs'\nimport { ApolloClient, ApolloError, ApolloLink, ApolloProvider, FetchResult, from, fromPromise, HttpLink, InMemoryCache } from '@apollo/client'\nimport { onError } from '@apollo/client/link/error'\nimport { App } from './sections/App'\nimport { ConfigProvider } from 'antd'\nimport csCZ from \"antd/lib/locale/cs_CZ\"\nimport { csrfTokenName, errorMessages, paths, refreshTokenName, tokenName, usernameKey } from './lib/Constants'\nimport { RefreshToken, RefreshToken_refreshToken } from './lib/graphql/mutations/Token/__generated__/RefreshToken'\nimport { TOKEN_REFRESH } from './lib/graphql/mutations/Token'\nimport \"./i18n\"\nimport { Suspense } from 'react'\nimport { Splash } from './sections/Splash'\n\nmoment.locale(\"cs\")\n\nlet apolloClient: any\n\nconst httpLink = new HttpLink({\n  uri: '/api'\n});\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  const token = localStorage.getItem(tokenName)\n  const csrftoken = getCookie(csrfTokenName)\n  operation.setContext(({ headers = {} }) => ({\n    headers: {\n      ...headers,\n      \"Authorization\": token === null ? \"\" : `JWT ${ token }`,\n      \"X-CSRFToken\": csrftoken === null ? \"\" : csrftoken\n    }\n  }));\n  return forward(operation);\n})\n\nconst refreshToken = () => {\n  return apolloClient\n    .mutate({ mutation: TOKEN_REFRESH, variables: { refreshToken: localStorage.getItem(refreshTokenName) } })\n    .then((value: FetchResult<RefreshToken>) => {\n      return value.data?.refreshToken\n    })\n}\n\nconst errorLink = onError(\n  ({ graphQLErrors, networkError, operation, forward }) => {\n    if (graphQLErrors) {\n      for (let reason of graphQLErrors) {\n        switch (reason.message) {\n          case errorMessages.signatureExpired:\n            return fromPromise(\n              refreshToken()\n                .catch((reason: ApolloError) => console.error(reason))\n            )\n              .flatMap(authToken => {\n                const token = authToken as RefreshToken_refreshToken\n                localStorage.setItem(tokenName, token.token)\n                localStorage.setItem(refreshTokenName, token.refreshToken)\n                localStorage.setItem(usernameKey, token.payload.username)\n                // for debugging only\n                localStorage.setItem(\"tokenExpiresIn\", token.payload.exp.toString())\n                localStorage.setItem(\"refreshTokenExpiresIn\", token.refreshExpiresIn.toString())\n                // --- / ---\n                return forward(operation)\n              })\n          case errorMessages.refreshTokenExpired:\n          case errorMessages.unauthorized:\n            localStorage.removeItem(tokenName)\n            localStorage.removeItem(refreshTokenName)\n            localStorage.removeItem(usernameKey)\n            window.location.replace(paths.login)\n        }\n      }\n    }\n    if (networkError) {\n      console.error(networkError);\n    }\n  }\n)\n\napolloClient = new ApolloClient({\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          guests: {\n            merge: false\n          },\n          reservations: {\n            merge: false\n          },\n          suiteReservations: {\n            merge: false\n          },\n          suites: {\n            merge: false\n          }\n        }\n      },\n      Reservation: {\n        fields: {\n          roommates: { merge: false }\n        }\n      }\n    }\n  }),\n  link: from([\n    errorLink,\n    authMiddleware,\n    httpLink\n  ]),\n})\n\nReactDOM.render(\n  <Suspense fallback={ <Splash /> }>\n    <ApolloProvider client={ apolloClient }>\n      <ConfigProvider locale={ csCZ }>\n        <Router>\n          <App />\n        </Router>\n      </ConfigProvider>\n    </ApolloProvider>\n  </Suspense>,\n  document.getElementById('root')\n);\n","import { Layout, Skeleton } from \"antd\"\r\nimport \"./index.css\"\r\n\r\nexport const Splash = () => {\r\n  return (\r\n    <Layout\r\n      className=\"splash-layout\">\r\n      <Layout.Content>\r\n        <Skeleton\r\n          active\r\n          avatar\r\n          paragraph={ { rows: 3 } }\r\n          className=\"splash-skeleton\" />\r\n        <Skeleton\r\n          active\r\n          avatar\r\n          paragraph={ { rows: 3 } }\r\n          className=\"splash-skeleton\" />\r\n        <Skeleton\r\n          active\r\n          avatar\r\n          paragraph={ { rows: 3 } }\r\n          className=\"splash-skeleton\" />\r\n      </Layout.Content>\r\n    </Layout>\r\n  )\r\n}"],"sourceRoot":""}