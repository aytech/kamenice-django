{"version":3,"sources":["sections/AppHeader/assets/mill.svg","sections/AppHeader/index.tsx","lib/components/CsCalendarLocale.ts","lib/components/Reservation.ts","sections/ReservationModal/index.tsx","sections/ReserveCalendar/index.tsx","index.tsx","sections/Home/index.tsx","sections/Overview/index.tsx"],"names":["AppHeader","withRouter","location","history","useState","search","setSearch","className","to","src","logo","alt","placeholder","enterButton","onChange","event","target","value","onSearch","CsCalendarLocale","months","weekDays","name","short","isWeekend","weekStartingIndex","getToday","gregorainTodayObject","toNativeDate","date","Date","year","month","day","getMonthLength","getDate","transformDigit","digit","nextMonth","previousMonth","openMonthSelector","openYearSelector","closeMonthSelector","closeYearSelector","defaultPlaceholder","from","digitSeparator","yearLetterSkip","isRtl","getDaysWithinMonth","days","index","push","getDaysWithinOverlappingMonths","utils","forEach","length","TransformDate","undefined","years","fromMonth","toMonth","idx","Array","keys","shift","getDaysWithinOverlappingYears","defaultValue","Reservation","key","ReservationModal","close","isOpen","range","updateRange","selectedFromDay","setSelectedFromDay","selectedToDay","setSelectedToDay","selectedType","setSelectedType","useEffect","type","reservationTypeMenu","Item","onClick","onCancel","title","visible","width","footer","disabled","layout","label","dayValue","inputPlaceholder","shouldHighlightWeekends","locale","fromDate","message","error","overlay","trigger","DownOutlined","ReserveCalendar","room","reservedRange","setReservedRange","modalOpen","setModalOpen","reservedDays","setReservedDays","getDayClassName","reservedRanges","rangeId","id","span","level","rangeDay","find","customDaysClassName","newRange","otherRanges","filter","console","log","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","offsetTop","exact","path","component","gutter","map","series","setSeries","getColor","reservationType","getTimePadded","hours","minutes","time","options","chart","height","locales","shortMonths","toolbar","download","pan","reset","selectionZoom","zoomIn","zoomOut","plotOptions","bar","horizontal","barHeight","rangeBarGroupRows","colors","seriesIndex","w","config","fill","xaxis","legend","customLegendItems","markers","strokeWidth","strokeColor","fillColors","radius","customHTML","offsetX","offsetY","position","tooltip","custom","tooltipValues","ctx","rangeBar","getTooltipValues","seriesName","trim","substring","reservationName","ylabel","start","end","startVal","getHours","getMinutes","endVal","data","x","y","getTime","document","getElementById"],"mappings":"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","file":"static/js/main.062b9193.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mill.1f872c17.svg\";","import React, { useState } from 'react'\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport Search from 'antd/lib/input/Search'\r\nimport { Header } from 'antd/lib/layout/layout'\r\nimport './styles.css'\r\nimport logo from './assets/mill.svg'\r\n\r\nexport const AppHeader = withRouter(({ location, history }: RouteComponentProps) => {\r\n\r\n  const [ search, setSearch ] = useState(\"\")\r\n\r\n  return (\r\n    <Header className=\"app-header\">\r\n      <div className=\"app-header__logo-search-section\">\r\n        <div className=\"app-header__logo\">\r\n          <Link to=\"/\">\r\n            {/* <img src=\"https://via.placeholder.com/32\" alt=\"Kamenice logo\" /> */ }\r\n            <img src={ logo } alt=\"Kamenice logo\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"app-header__search-input\">\r\n          <Search\r\n            placeholder=\"\"\r\n            enterButton\r\n            onChange={ (event) => setSearch(event.target.value) }\r\n            onSearch={ () => { } }\r\n            value={ search }\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__menu-section\">\r\n        {/* <MenuItems viewer={ viewer } setViewer={ setViewer } /> */ }\r\n      </div>\r\n    </Header>\r\n  )\r\n})","import { Day, DayValue, Locale, utils } from \"react-modern-calendar-datepicker\";\r\n\r\nexport const CsCalendarLocale: Locale = {\r\n  months: [\r\n    'Leden',\r\n    'Únor',\r\n    'Březen',\r\n    'Duben',\r\n    'Květen',\r\n    'Červen',\r\n    'Červenec',\r\n    'Srpen',\r\n    'Září',\r\n    'Říjen',\r\n    'Listopad',\r\n    'Prosinec'\r\n  ],\r\n  weekDays: [\r\n    {\r\n      name: 'Neděle', // used for accessibility \r\n      short: 'Ned', // displayed at the top of days' rows\r\n      isWeekend: true, // is it a formal weekend or not?\r\n    },\r\n    {\r\n      name: 'Pondělí',\r\n      short: 'Pon',\r\n    },\r\n    {\r\n      name: 'Úterý',\r\n      short: 'Út',\r\n    },\r\n    {\r\n      name: 'Středa',\r\n      short: 'St',\r\n    },\r\n    {\r\n      name: 'Čtvrtek',\r\n      short: 'Čt',\r\n    },\r\n    {\r\n      name: 'Pátek',\r\n      short: 'Pá',\r\n    },\r\n    {\r\n      name: 'Sobota',\r\n      short: 'Sob',\r\n      isWeekend: true,\r\n    }\r\n  ],\r\n  weekStartingIndex: 0,\r\n  // return a { year: number, month: number, day: number } object\r\n  getToday(gregorainTodayObject) {\r\n    return gregorainTodayObject;\r\n  },\r\n  // return a native JavaScript date here\r\n  toNativeDate(date) {\r\n    return new Date(date.year, date.month - 1, date.day);\r\n  },\r\n  // return a number for date's month length\r\n  getMonthLength(date) {\r\n    return new Date(date.year, date.month, 0).getDate();\r\n  },\r\n  // return a transformed digit to your locale\r\n  transformDigit(digit) {\r\n    return digit;\r\n  },\r\n  // texts in the date picker\r\n  nextMonth: 'Příští Měsíc',\r\n  previousMonth: 'Předchozí Měsíc',\r\n  openMonthSelector: 'Otevřít Výběr Měsíce',\r\n  openYearSelector: 'Otevřít Výběr Roku',\r\n  closeMonthSelector: 'Zavřít Výběr Měsíce',\r\n  closeYearSelector: 'Zavřít Výběr Roku',\r\n  defaultPlaceholder: 'Vybrat...',\r\n  // for input range value\r\n  from: 'od',\r\n  to: 'do',\r\n  // used for input value when multi dates are selected\r\n  digitSeparator: ',',\r\n  // if your provide -2 for example, year will be 2 digited\r\n  yearLetterSkip: 0,\r\n  // is your language rtl or ltr?\r\n  isRtl: false\r\n}\r\n\r\nconst getDaysWithinMonth = (from: number, to: number, month: number, year: number): Day[] => {\r\n  const days: Day[] = []\r\n  for (let index = from; index <= to; index++) {\r\n    days.push({ year: year, month: month, day: index })\r\n  }\r\n  return days\r\n}\r\n\r\nconst getDaysWithinOverlappingMonths = (from: number, to: number, months: number[], year: number): Day[] => {\r\n  const { getMonthLength } = utils(\"en\")\r\n  const days: Day[] = []\r\n  months.forEach((month: number, index: number) => {\r\n    if (index === 0) { // first month, get days till the end of the month\r\n      getDaysWithinMonth(from, getMonthLength({ day: from, month, year }), month, year).forEach((day: Day) => days.push(day))\r\n    } else if (index === months.length - 1) { // get days of te last month\r\n      getDaysWithinMonth(1, to, month, year).forEach((day: Day) => days.push(day))\r\n    } else { // get days of the intermediary month\r\n      getDaysWithinMonth(1, getMonthLength({ day: 1, month, year }), month, year).forEach((day: Day) => days.push(day))\r\n    }\r\n  })\r\n  return days\r\n}\r\n\r\nconst getDaysWithinOverlappingYears = (from: number, to: number, fromMonth: number, toMonth: number, years: number[]) => {\r\n  const { getMonthLength } = utils(\"en\")\r\n  const days: Day[] = []\r\n  years.forEach((year: number, index: number) => {\r\n    const months: number[] = []\r\n    if (index === 0) { // get days from first year\r\n      for (let idx = fromMonth; idx <= 12; idx++) {\r\n        months.push(idx)\r\n      }\r\n      getDaysWithinOverlappingMonths(from, getMonthLength({ day: 1, month: 12, year }), months, year).forEach((day: Day) => days.push(day))\r\n    } else if (index === years.length - 1) { // get days from last year\r\n      for (let idx = 1; idx <= toMonth; idx++) {\r\n        months.push(idx)\r\n      }\r\n      if (months.length > 1) {\r\n        getDaysWithinOverlappingMonths(1, to, months, year).forEach((day: Day) => days.push(day))\r\n      } else {\r\n        getDaysWithinMonth(1, to, months[ 0 ], year).forEach((day: Day) => days.push(day))\r\n      }\r\n    } else { // get days from intermediary year\r\n      const months = Array.from(Array(13).keys())\r\n      months.shift()\r\n      getDaysWithinOverlappingMonths(1, getMonthLength({ day: 1, month: 12, year }), months, year).forEach((day: Day) => days.push(day))\r\n    }\r\n  })\r\n  return days\r\n}\r\n\r\nexport const TransformDate = {\r\n  getDaysFromRange: (from: DayValue, to: DayValue): Day[] => {\r\n    if (from === undefined || from === null || to === undefined || to === null) {\r\n      return []\r\n    }\r\n    if (to.year === from.year) {\r\n      // processing within same year\r\n      if (to.month === from.month) {\r\n        // processing within same month\r\n        return getDaysWithinMonth(from.day, to.day, from.month, from.year)\r\n      } else {\r\n        // processing within overlapping months\r\n        const months = []\r\n        for (let index = from.month; index <= to.month; index++) {\r\n          months.push(index)\r\n        }\r\n        return getDaysWithinOverlappingMonths(from.day, to.day, months, from.year)\r\n      }\r\n    } else {\r\n      // processing within overlapping years\r\n      const years = []\r\n      for (let index = from.year; index <= to.year; index++) {\r\n        years.push(index)\r\n      }\r\n      return getDaysWithinOverlappingYears(from.day, to.day, from.month, to.month, years)\r\n    }\r\n  },\r\n  toLocaleString: (day: DayValue, defaultValue: string) => {\r\n    if (day === undefined || day === null) {\r\n      return defaultValue\r\n    }\r\n    return `${ day?.day } ${ CsCalendarLocale.months[ day.month - 1 ] } ${ day.year }`\r\n  }\r\n}\r\n","export type ReservationType = \"Závazná Rezervace\" | \"Nezávazná Rezervace\" | \"Aktuálně Ubytování\" | \"Obydlený Termín\"\r\nexport type ReservationTypeKey = \"binding\" | \"nonbinding\" | \"accommodated\" | \"inhabited\"\r\n\r\nexport const Reservation = {\r\n  getType: (key: ReservationTypeKey): ReservationType => {\r\n    switch (key) {\r\n      case \"nonbinding\":\r\n        return \"Nezávazná Rezervace\"\r\n      case \"accommodated\":\r\n        return \"Aktuálně Ubytování\"\r\n      case \"inhabited\":\r\n        return \"Obydlený Termín\"\r\n      case \"binding\":\r\n      default: return \"Závazná Rezervace\"\r\n    }\r\n  }\r\n}","import React, { useState } from \"react\"\r\nimport { Button, Dropdown, Form, Menu, message, Modal } from \"antd\"\r\nimport DatePicker, { Day, DayValue } from \"react-modern-calendar-datepicker\"\r\nimport { CsCalendarLocale, TransformDate } from \"../../lib/components/CsCalendarLocale\"\r\nimport { Reservation, ReservationTypeKey } from \"../../lib/components/Reservation\"\r\nimport { DownOutlined } from \"@ant-design/icons\"\r\nimport { useEffect } from \"react\"\r\nimport { ReservedRange } from \"../../lib/components/Room\"\r\n\r\ninterface Props {\r\n  close: () => void,\r\n  isOpen: boolean,\r\n  range: ReservedRange | undefined,\r\n  updateRange: (range: ReservedRange) => void\r\n}\r\n\r\nexport const ReservationModal = ({\r\n  close,\r\n  isOpen,\r\n  range,\r\n  updateRange\r\n}: Props) => {\r\n\r\n  const [ selectedFromDay, setSelectedFromDay ] = useState<Day>()\r\n  const [ selectedToDay, setSelectedToDay ] = useState<Day>()\r\n  const [ selectedType, setSelectedType ] = useState<ReservationTypeKey>(\"binding\")\r\n\r\n  useEffect(() => {\r\n    if (range !== undefined) {\r\n      setSelectedFromDay(range.from)\r\n      setSelectedToDay(range.to)\r\n      setSelectedType(range.type)\r\n    }\r\n  }, [ range ])\r\n\r\n  const selectReservationEndDate = (dayValue: DayValue) => {\r\n    if (dayValue === undefined || dayValue === null) {\r\n      message.error(\"vyberte datum\")\r\n      return\r\n    }\r\n    if (selectedFromDay === undefined || selectedFromDay === null) {\r\n      message.error(\"nejdřív vyberte začátek rezervace\")\r\n      return\r\n    }\r\n    const fromDate = CsCalendarLocale.toNativeDate(selectedFromDay)\r\n    const toDate = CsCalendarLocale.toNativeDate(dayValue)\r\n    if (toDate < fromDate) {\r\n      message.error(\"konec rezervace nesmí být dříve než začátek\")\r\n      return\r\n    }\r\n    setSelectedToDay(dayValue)\r\n  }\r\n\r\n  const reservationTypeMenu = (\r\n    <Menu>\r\n      <Menu.Item key={ Reservation.getType(\"binding\") } onClick={ () => { setSelectedType(\"binding\") } }>\r\n        { Reservation.getType(\"binding\") }\r\n      </Menu.Item>\r\n      <Menu.Item key={ Reservation.getType(\"nonbinding\") } onClick={ () => { setSelectedType(\"nonbinding\") } }>\r\n        { Reservation.getType(\"nonbinding\") }\r\n      </Menu.Item>\r\n      <Menu.Item key={ Reservation.getType(\"accommodated\") } onClick={ () => { setSelectedType(\"accommodated\") } }>\r\n        { Reservation.getType(\"accommodated\") }\r\n      </Menu.Item>\r\n      <Menu.Item key={ Reservation.getType(\"inhabited\") } onClick={ () => { setSelectedType(\"inhabited\") } }>\r\n        { Reservation.getType(\"inhabited\") }\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <Modal\r\n      onCancel={ close }\r\n      title=\"Rezervační formulář\"\r\n      visible={ isOpen }\r\n      width=\"80%\"\r\n      footer={ [\r\n        <Button\r\n          key=\"cancel\"\r\n          onClick={ close }>\r\n          Zrušit\r\n        </Button>,\r\n        <Button\r\n          disabled={ selectedFromDay === null || selectedToDay === null }\r\n          key=\"ok\"\r\n          onClick={ () => {\r\n            // Update range in parent, if the range is valid\r\n          } }>\r\n          OK\r\n        </Button>\r\n      ] }>\r\n      <Form\r\n        layout=\"inline\">\r\n        <Form.Item\r\n          label=\"Začátek Rezervace\"\r\n          name=\"from\">\r\n          <DatePicker\r\n            value={ selectedFromDay }\r\n            onChange={ (dayValue: DayValue) => {\r\n              if (dayValue !== undefined && dayValue !== null) {\r\n                setSelectedFromDay(dayValue)\r\n              }\r\n            } }\r\n            inputPlaceholder={ TransformDate.toLocaleString(selectedFromDay, \"vyberte datum\") }\r\n            shouldHighlightWeekends\r\n            locale={ CsCalendarLocale }\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Konec Rezervace\"\r\n          name=\"to\">\r\n          <DatePicker\r\n            value={ selectedToDay }\r\n            onChange={ (selectReservationEndDate) }\r\n            inputPlaceholder={ TransformDate.toLocaleString(selectedToDay, \"vyberte datum\") }\r\n            shouldHighlightWeekends\r\n            locale={ CsCalendarLocale } />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Typ Rezervace\"\r\n          name=\"type\">\r\n          <Dropdown\r\n            overlay={ reservationTypeMenu }\r\n            trigger={ [ 'click' ] }>\r\n            <Button type=\"link\">\r\n              { Reservation.getType(selectedType) } <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Col } from 'antd'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport { Calendar, Day, DayValue } from 'react-modern-calendar-datepicker'\r\nimport { CsCalendarLocale, TransformDate } from '../../lib/components/CsCalendarLocale'\r\nimport './styles.css'\r\nimport { ReservationTypeKey } from '../../lib/components/Reservation'\r\nimport { ReservedRange, Room } from '../../lib/components/Room'\r\nimport { ReservationModal } from '../ReservationModal'\r\n\r\ninterface Props {\r\n  room: Room\r\n}\r\ntype CustomDayClassNameItem = Day & { className: string, rangeId: number };\r\n\r\nexport const ReserveCalendar = ({ room }: Props) => {\r\n  const [ reservedRange, setReservedRange ] = useState<ReservedRange | undefined>()\r\n  const [ modalOpen, setModalOpen ] = useState<boolean>(false)\r\n  const [ reservedDays, setReservedDays ] = useState<CustomDayClassNameItem[]>([])\r\n\r\n  const getDayClassName = (type: ReservationTypeKey) => {\r\n    switch (type) {\r\n      case \"binding\":\r\n        return \"greenDay\"\r\n      case \"nonbinding\":\r\n        return \"yellowDay\"\r\n      case \"accommodated\":\r\n        return \"purpleDay\"\r\n      case \"inhabited\":\r\n        return \"orangeDay\"\r\n      default: return \"greenDay\"\r\n    }\r\n  }\r\n  const updateReservedRange = (newRange: ReservedRange): void => {\r\n    // TODO:\r\n    // 1. Filter ranges that are not the input range\r\n    // 2. Update state with other + new range\r\n    // 3. Save room with new ranges into the data store (figure out the logic)\r\n    const otherRanges = room.reservedRanges.filter(range => range.id !== newRange.id)\r\n    console.log('Ranges not specified in input: ', otherRanges)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const reservedDays: CustomDayClassNameItem[] = []\r\n    room.reservedRanges.forEach((range: ReservedRange) => {\r\n      TransformDate.getDaysFromRange(range.from, range.to).forEach((day: Day) => {\r\n        reservedDays.push({ className: getDayClassName(range.type), rangeId: range.id, ...day })\r\n      })\r\n    })\r\n    setReservedDays(reservedDays)\r\n  }, [ room.reservedRanges ])\r\n\r\n  return (\r\n    <>\r\n      <Col\r\n        span={ 12 }\r\n        className=\"home__listing\">\r\n        <Title level={ 4 } className=\"home__listings-title\"> { room.name }</Title>\r\n        <div className=\"home__calendar\">\r\n          <Calendar\r\n            onChange={ (dayValue: DayValue) => {\r\n              const rangeDay = reservedDays.find((day: CustomDayClassNameItem) => {\r\n                return day.year === dayValue?.year\r\n                  && day.month === dayValue.month\r\n                  && day.day === dayValue.day\r\n              })\r\n              if (rangeDay !== undefined) {\r\n                setReservedRange(room.reservedRanges.find(range => range.id === rangeDay.rangeId))\r\n              }\r\n              setModalOpen(true)\r\n            } }\r\n            locale={ CsCalendarLocale }\r\n            customDaysClassName={ reservedDays }\r\n            shouldHighlightWeekends />\r\n        </div>\r\n      </Col>\r\n      <ReservationModal\r\n        close={ () => { setModalOpen(false) } }\r\n        isOpen={ modalOpen }\r\n        range={ reservedRange }\r\n        updateRange={ updateReservedRange } />\r\n    </>\r\n  )\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport './index.css'\nimport { Affix, Layout } from 'antd'\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\nimport { AppHeader, Home, Overview } from './sections'\n\nconst client = new ApolloClient({\n  uri: \"/api\",\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={ client }>\n    <Router>\n      <Layout id=\"app\">\n        <Affix offsetTop={ 0 } className=\"app__affix-header\">\n          <AppHeader />\n        </Affix>\n        <Switch>\n          <Route exact path=\"/\" component={ Home } />\n          <Route exact path=\"/prehled\" component={ Overview } />\n        </Switch>\n      </Layout>\n    </Router>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n","import { Content } from 'antd/lib/layout/layout'\nimport Title from 'antd/lib/typography/Title'\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\"\nimport './styles.css'\nimport { ReserveCalendar } from '../ReserveCalendar'\nimport { Row } from 'antd'\nimport { Link } from 'react-router-dom'\nimport { Room } from '../../lib/components/Room'\n\n\nexport const Home = () => {\n  const rooms: Room[] = [\n    {\n      id: 1,\n      name: \"Apartman 2 + 2\",\n      reservedRanges: [\n        {\n          id: 1,\n          from: {\n            year: 2021,\n            month: 6,\n            day: 1\n          },\n          to: {\n            year: 2021,\n            month: 6,\n            day: 5\n          },\n          type: \"inhabited\"\n        },\n        {\n          id: 2,\n          from: {\n            year: 2021,\n            month: 6,\n            day: 14\n          },\n          to: {\n            year: 2021,\n            month: 6,\n            day: 18\n          },\n          type: \"accommodated\"\n        },\n        {\n          id: 3,\n          from: {\n            year: 2021,\n            month: 6,\n            day: 28,\n          },\n          to: {\n            year: 2021,\n            month: 6,\n            day: 30,\n          },\n          type: \"binding\"\n        },\n      ]\n    },\n    {\n      id: 2,\n      name: \"Apartman 2 + 4\",\n      reservedRanges: [\n        {\n          id: 4,\n          from: {\n            year: 2021,\n            month: 6,\n            day: 7,\n          },\n          to: {\n            year: 2021,\n            month: 6,\n            day: 11,\n          },\n          type: \"binding\"\n        },\n        {\n          id: 5,\n          from: {\n            year: 2021,\n            month: 6,\n            day: 23,\n          },\n          to: {\n            year: 2021,\n            month: 6,\n            day: 25,\n          },\n          type: \"nonbinding\"\n        }\n      ]\n    }\n  ]\n  return (\n    <Content className=\"home\">\n      <div className=\"home__listings\">\n        <Title level={ 3 } className=\"home__listings-title\">\n          Rezervace / Obsazenost\n        </Title>\n        <Row gutter={ 12 }>\n          {\n            rooms.map((room, index) => {\n              return (\n                <ReserveCalendar room={ room } key={ index } />\n              )\n            })\n          }\n        </Row>\n      </div>\n      <Title level={ 3 }>\n        <Link to=\"/prehled\">Přehled</Link>\n      </Title>\n    </Content >\n  );\n}","import { ApexOptions } from \"apexcharts\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\n// https://apexcharts.com/react-chart-demos/timeline-charts/multiple-series-group-rows/\r\nexport const Overview = () => {\r\n\r\n  const [ series, setSeries ] = useState<any[]>([])\r\n  const getColor = (reservationType: string): string => {\r\n    switch (reservationType) {\r\n      case \"Nezávazná Rezervace\":\r\n        return \"#e4e724\"\r\n      case \"Aktuálně Ubytování\":\r\n        return \"#9c88ff\"\r\n      case \"Obydlený Termín\":\r\n        return \"#db913c\"\r\n      case \"Závazná Rezervace\":\r\n      default: return \"#0eca2d\"\r\n    }\r\n  }\r\n  const getTimePadded = (hours: number, minutes: number) => {\r\n    let time = ''\r\n    time += (hours < 10 ? '0' : '') + hours\r\n    time += ':'\r\n    time += (minutes < 10 ? '0' : '') + minutes\r\n    return time\r\n  }\r\n  const options: ApexOptions = {\r\n    chart: {\r\n      height: 350,\r\n      locales: [ {\r\n        name: \"en\",\r\n        options: {\r\n          months: [ \"Leden\", \"Únor\", \"Březen\", \"Duben\", \"Květen\", \"Červen\", \"Červenec\", \"Srpen\", \"Září\", \"Říjen\", \"Listopad\", \"Prosinec\" ],\r\n          shortMonths: [ \"Leden\", \"Únor\", \"Březen\", \"Duben\", \"Květen\", \"Červen\", \"Červenec\", \"Srpen\", \"Září\", \"Říjen\", \"Listopad\", \"Prosinec\" ],\r\n          toolbar: {\r\n            download: \"Stáhnout\",\r\n            pan: \"Panoráma\",\r\n            reset: \"Resetovat Přiblížení\",\r\n            selectionZoom: \"Zvětšení Výběru\",\r\n            zoomIn: \"Přiblížit\",\r\n            zoomOut: \"Oddálit\"\r\n          }\r\n        }\r\n      } ],\r\n      type: \"rangeBar\" as const\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        barHeight: '50%',\r\n        rangeBarGroupRows: true\r\n      }\r\n    },\r\n    colors: [ ({ seriesIndex, w }: { seriesIndex: any, w: any }) => {\r\n      return getColor(w.config.series[ seriesIndex ].name)\r\n    }\r\n    ],\r\n    fill: {\r\n      type: 'solid'\r\n    },\r\n    xaxis: {\r\n      type: 'datetime' as const\r\n    },\r\n    legend: {\r\n      customLegendItems: [\r\n        \"Závazná Rezervace\",\r\n        \"Nezávazná Rezervace\",\r\n        \"Aktuálně Ubytování\",\r\n        \"Obydlený Termín\"\r\n      ],\r\n      markers: {\r\n        width: 12,\r\n        height: 12,\r\n        strokeWidth: 0,\r\n        strokeColor: '#fff',\r\n        fillColors: [\r\n          \"#0eca2d\",\r\n          \"#e4e724\",\r\n          \"#9c88ff\",\r\n          \"#db913c\"\r\n        ],\r\n        radius: 12,\r\n        customHTML: undefined,\r\n        onClick: undefined,\r\n        offsetX: 0,\r\n        offsetY: 0\r\n      },\r\n      position: 'top' as const\r\n    },\r\n    tooltip: {\r\n      custom: (options) => {\r\n        const tooltipValues = options.ctx.rangeBar.getTooltipValues(options)\r\n        const seriesName = tooltipValues.seriesName.trim().substring(0, tooltipValues.seriesName.trim().length - 1)\r\n        const reservationName = tooltipValues.ylabel.trim().substring(0, tooltipValues.ylabel.trim().length - 1)\r\n        const from = new Date(tooltipValues.start)\r\n        const to = new Date(tooltipValues.end)\r\n        return '<div class=\"apexcharts-tooltip-rangebar\"><div>' +\r\n          `<span class=\"series-name\" style=\"font-weight: bold\">${ reservationName }</span>` +\r\n          '</div><div>' +\r\n          `<span class=\"category\" style=\"color:${ getColor(seriesName) }\">${ tooltipValues.seriesName }</span>` +\r\n          `<span class=\"value start-value\" style=\"font-weight: bold\">${ tooltipValues.startVal } ${ getTimePadded(from.getHours(), from.getMinutes()) }</span>` +\r\n          '<span class=\"separator\"> - </span>' +\r\n          `<span class=\"value end-value\" style=\"font-weight: bold\">${ tooltipValues.endVal } ${ getTimePadded(to.getHours(), to.getMinutes()) }</span>` +\r\n          '</div></div></div>'\r\n      }\r\n    }\r\n  }\r\n\r\n  // For DEV only\r\n  useEffect(() => {\r\n    setSeries([\r\n      {\r\n        name: 'Závazná Rezervace',\r\n        data: [\r\n          {\r\n            x: 'Apartman 2 + 2',\r\n            y: [\r\n              new Date(2021, 5, 1, 14, 0).getTime(),\r\n              new Date(2021, 5, 5, 10, 0).getTime()\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        name: 'Závazná Rezervace',\r\n        data: [\r\n          {\r\n            x: 'Apartman 2 + 2',\r\n            y: [\r\n              new Date(2021, 5, 7, 14, 0).getTime(),\r\n              new Date(2021, 5, 12, 10, 0).getTime()\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Aktuálně Ubytování',\r\n        data: [\r\n          {\r\n            x: 'Apartman 2 + 4',\r\n            y: [\r\n              new Date(2021, 5, 3, 14, 0).getTime(),\r\n              new Date(2021, 5, 6, 10, 0).getTime()\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Obydlený Termín',\r\n        data: [\r\n          {\r\n            x: 'Apartman 2 + 4',\r\n            y: [\r\n              new Date(2021, 5, 11, 14, 0).getTime(),\r\n              new Date(2021, 5, 15, 10, 0).getTime()\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Nezávazná Rezervace',\r\n        data: [\r\n          {\r\n            x: 'Apartman 4 + 4',\r\n            y: [\r\n              new Date(2021, 5, 5, 14, 0).getTime(),\r\n              new Date(2021, 5, 10, 10, 0).getTime()\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n    ])\r\n  }, [])\r\n  // -- ! -- //\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <ReactApexChart series={ series } options={ options } type=\"rangeBar\" height={ 350 }></ReactApexChart>\r\n    </div>\r\n  )\r\n}"],"sourceRoot":""}