{"version":3,"sources":["lib/Cookie.ts","sections/Header/assets/mill.svg","lib/components/Colors.ts","sections/Header/components/MenuItems.tsx","sections/Header/index.tsx","lib/components/FormHelper.ts","lib/components/GuestFormHelper.ts","lib/graphql/mutations/Guest/index.ts","lib/Constants.ts","sections/GuestDrawer/index.tsx","sections/Guests/components/GuestItem.tsx","sections/Guests/index.tsx","lib/components/UrlHelper.ts","lib/graphql/mutations/User/index.ts","sections/Login/index.tsx","sections/NotFound/index.tsx","sections/Reservations/components/ReservationItem/index.tsx","lib/Types.ts","lib/components/ReservationFormHelper.ts","sections/ReservationModal/index.tsx","lib/graphql/mutations/Reservation/index.ts","sections/Reservations/index.tsx","sections/SuiteDrawer/index.tsx","sections/Suites/components/AddSuite/index.tsx","lib/graphql/mutations/Suite/index.ts","sections/Suites/index.tsx","lib/graphql/queries/App/index.ts","sections/App/index.tsx","index.tsx"],"names":["getCookie","name","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","Colors","colors","getRandomColor","Math","floor","random","getReservationColor","reservationType","MenuItems","logout","user","userAvatar","size","style","backgroundColor","username","toUpperCase","mode","Item","icon","BookOutlined","to","IdcardOutlined","HomeOutlined","className","SubMenu","title","LogoutOutlined","onClick","Header","withRouter","history","location","src","logo","alt","undefined","push","pathname","FormHelper","requiredRule","required","message","value","GuestFormHelper","ageOptions","label","getGuestResponseErrorList","errorString","Array","from","Object","values","JSON","parse","replaceAll","list","error","phoneCodeRequiredRules","pattern","transform","requiredAlphaRules","requiredNumericRules","CREATE_GUEST","gql","UPDATE_GUEST","DELETE_GUEST","dateFormat","errorMessages","refreshTokenName","tokenName","GuestDrawer","addGuest","close","guest","reauthenticate","removeGuest","updateGuestCache","visible","Form","useForm","form","useMutation","createGuest","createLoading","loading","updateGuest","updateLoading","deleteGuest","deleteLoading","useState","confirmClose","setConfirmClose","initialValues","age","address","municipality","addressMunicipality","psc","addressPsc","street","addressStreet","citizenship","selected","email","gender","identity","phone","phoneNumber","surname","visa","visaNumber","emailPrefixIcon","noStyle","MailOutlined","useEffect","resetFields","closeIcon","onCancel","onConfirm","placement","CloseOutlined","isFieldsTouched","width","footer","cancelText","WarningOutlined","okText","guestId","handler","variables","then","data","success","catch","reason","deleteGuestAction","id","danger","float","type","validateFields","formData","getFieldsValue","new","createGuestAction","updateGuestAction","footerStyle","padding","textAlign","active","paragraph","rows","layout","level","hasFeedback","rules","placeholder","addonBefore","options","Option","Group","compact","marginBottom","GuestItem","openGuestDrawer","selectGuest","actions","Meta","avatar","gap","description","Guests","guestsData","setPageTitle","drawerVisible","setDrawerVisible","guests","setGuests","selectedGuest","setSelectedGuest","guestsList","forEach","bordered","dataSource","PlusCircleOutlined","header","itemLayout","renderItem","concat","filter","cachedGuest","UrlHelper","urlParts","window","search","TOKEN_AUTH","TOKEN_REFRESH","TOKEN_REVOKE","labelCol","lg","md","sm","wrapperCol","tailLayout","offset","span","xs","Login","refetch","setUser","onCompleted","token","tokenAuth","localStorage","setItem","refreshToken","payload","exp","refreshExpiresIn","toString","onError","getToken","loginLoading","Content","spinning","tip","onFinish","password","htmlType","NotFound","status","subTitle","extra","ReservationItem","item","itemContext","getItemProps","getResizeProps","leftResizeProps","left","rightResizeProps","right","itemProps","useResizeHandle","content","color","fontWeight","start_time","format","end_time","maxHeight","dimensions","height","strong","Reservation","key","ReservationFormHelper","mealOptions","reservationOptions","getRequiredRule","guestValidators","validator","_rule","roommates","getFieldValue","Promise","resolve","duplicate","reject","Error","roommateValidators","duplicates","ReservationModal","createReservation","isOpen","removeReservation","reservation","updateReservation","deleteConfirmVisible","setDeleteConfirmVisible","guestDrawerOpen","setGuestDrawerOpen","guestOptions","setGuestOptions","dates","fromDate","toDate","meal","notes","purpose","roommate","closeModal","setTimeout","getGuestOption","submitForm","suite","String","footerButtons","CloseCircleOutlined","EditOutlined","RangePicker","showTime","filterOption","input","option","match","toLowerCase","indexOf","showSearch","List","fields","add","remove","map","fieldKey","restField","align","MinusCircleOutlined","disabled","block","PlusOutlined","TextArea","allowClear","CREATE_RESERVATION","DELETE_RESERVATION","UPDATE_RESERVATION","Reservations","reservationsData","suitesData","deleteReservation","groups","setGroups","items","setItems","setReservation","reservationModalOpen","setReservationModalOpen","getTimelineReservationItem","moment","group","background","border","errorHandler","callback","reservationList","suiteList","stackItems","canChangeGroup","canMove","canResize","defaultTimeEnd","defaultTimeStart","groupRenderer","itemRenderer","props","lineHeight","onCanvasClick","groupId","time","selectedGroup","find","onItemClick","itemId","timelineItem","getRootProps","unit","styles","date","submitNewReservation","addReservation","reservationId","submitUpdatedReservation","reservations","updateReservationState","SuiteDrawer","createSuite","deleteSuite","updateSuite","number","console","AddSuite","onAdd","CREATE_SUITE","UPDATE_SUITE","DELETE_SUITE","Suites","refetchData","activeSuite","setActiveSuite","suites","setSuites","suitesList","suiteId","HOME_PAGE","App","pageTitle","initialLoading","setInitialLoading","tokenLoading","redirectToLogin","useCallback","getItem","onDataFetch","whoami","onDataRefetch","useQuery","revokeToken","revokeLoading","offsetTop","removeItem","finally","exact","path","locale","httpLink","HttpLink","uri","authMiddleware","ApolloLink","operation","forward","csrftoken","setContext","headers","client","ApolloClient","cache","InMemoryCache","typePolicies","Query","merge","suiteReservations","link","ReactDOM","render","ApolloProvider","csCZ","getElementById"],"mappings":"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","file":"static/js/main.6ad334f0.chunk.js","sourcesContent":["export const getCookie = (name: string): string | null => {\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[ i ].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        return decodeURIComponent(cookie.substring(name.length + 1));\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport const setCookie = (name: string, value: string): void => {\r\n  if (document.cookie && document.cookie !== '') {\r\n    document.cookie = `${ name }=${ value };path=/`\r\n  }\r\n}\r\n\r\nexport const deleteCookie = (name: string): void => {\r\n  const cookie = getCookie(name)\r\n  if (cookie !== null) {\r\n    setCookie(name, `${ cookie };expires=Thu, 01 Jan 1970 00:00:01 GMT`)\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/mill.1f872c17.svg\";","import { ReservationTypeKey } from \"../Types\"\r\n\r\ninterface Props {\r\n  colors: string[]\r\n  getRandomColor: () => string\r\n  getReservationColor: (reservationType: ReservationTypeKey) => string\r\n}\r\n\r\nexport const Colors: Props = {\r\n  colors: [\r\n    \"#f5222d\", // red\r\n    \"#fa541c\", // volcano\r\n    \"#fa8c16\", // orange\r\n    \"#faad14\", // gold\r\n    \"#fadb14\", // yellow\r\n    \"#a0d911\", // lime\r\n    \"#52c41a\", // green\r\n    \"#13c2c2\", // cyan\r\n    \"#1890ff\", // blue\r\n    \"#2f54eb\", // geekblue\r\n    \"#722ed1\", // purple\r\n    \"#eb2f96\", // magenta\r\n  ],\r\n  getRandomColor: () => {\r\n    return Colors.colors[ Math.floor(Math.random() * Colors.colors.length) ]\r\n  },\r\n  getReservationColor: (reservationType: ReservationTypeKey): string => {\r\n    switch (reservationType) {\r\n      case \"NONBINDING\":\r\n        return \"rgb(254, 223, 3)\"\r\n      case \"ACCOMMODATED\":\r\n        return \"rgb(0, 133, 182)\"\r\n      case \"INHABITED\":\r\n        return \"rgb(254, 127, 45)\"\r\n      case \"BINDING\":\r\n      default: return \"rgb(0, 212, 157)\"\r\n    }\r\n  }\r\n}","import { BookOutlined, HomeOutlined, IdcardOutlined, LogoutOutlined } from \"@ant-design/icons\"\r\nimport { Avatar, Menu } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Colors } from \"../../../lib/components/Colors\"\r\nimport { User } from \"../../../lib/Types\"\r\n\r\ninterface Props {\r\n  logout: () => void,\r\n  user: User\r\n}\r\n\r\nexport const MenuItems = ({ logout, user }: Props) => {\r\n\r\n  const userAvatar = (\r\n    <Avatar\r\n      size={ 32 }\r\n      style={ {\r\n        backgroundColor: Colors.getRandomColor()\r\n      } }>\r\n      { user.username.substring(0, 1).toUpperCase() }\r\n    </Avatar>\r\n  )\r\n  return (\r\n    <>\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"reservation\" icon={ <BookOutlined /> }>\r\n          <Link to=\"/\">Rezervace</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"guests\" icon={ <IdcardOutlined /> }>\r\n          <Link to=\"/guests\">Hosté</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"suites\" icon={ <HomeOutlined /> }>\r\n          <Link to=\"/apartma\">Apartmá</Link>\r\n        </Menu.Item>\r\n      </Menu >\r\n      <Menu className=\"user\" mode=\"horizontal\">\r\n        <Menu.SubMenu\r\n          key=\"user-sub\"\r\n          title={ userAvatar }>\r\n          <Menu.Item\r\n            key=\"logout\"\r\n            icon={ <LogoutOutlined /> }\r\n            onClick={ logout }>\r\n            Odhlásit\r\n          </Menu.Item>\r\n        </Menu.SubMenu>\r\n      </Menu>\r\n    </>\r\n  )\r\n}","import { Link, RouteComponentProps, withRouter } from 'react-router-dom'\nimport './styles.css'\nimport logo from './assets/mill.svg'\nimport { MenuItems } from './components/MenuItems'\nimport { PageHeader } from 'antd'\nimport { User } from '../../lib/Types'\n\ninterface Props {\n  logout: () => void\n  user: User | undefined\n}\n\nexport const Header = withRouter(({\n  history,\n  location,\n  logout,\n  user\n}: RouteComponentProps & Props) => {\n\n  return (\n    <PageHeader>\n      <Link to=\"/\">\n        <img className=\"logo\" src={ logo } alt=\"Kamenice logo\" />\n      </Link>\n      {\n        user !== undefined &&\n        <MenuItems\n          logout={ () => {\n            logout()\n            history.push(`/login?next=${ location.pathname }`)\n          } }\n          user={ user } />\n      }\n    </PageHeader>\n  )\n})","import { Rule } from \"antd/lib/form\"\r\n\r\ninterface IFormHelper {\r\n  requiredRule: Rule\r\n  trim: (value: string | undefined) => string | undefined\r\n}\r\nexport const FormHelper: IFormHelper = {\r\n  requiredRule: {\r\n    required: true,\r\n    message: \"pole je povinné\"\r\n  },\r\n  trim: (value: string | undefined): string | undefined => {\r\n    return value === undefined ? value : value.trim()\r\n  }\r\n}","import { Rule } from \"antd/lib/form\";\nimport { OptionsType } from \"../Types\";\nimport { FormHelper } from \"./FormHelper\";\n\ninterface IGuestFormHelper {\n  ageOptions: OptionsType[]\n  getGuestResponseErrorList: (errorString: string) => Array<string>\n  phoneCodeRequiredRules: Rule[]\n  requiredAlphaRules: Rule[]\n  requiredNumericRules: Rule[]\n}\n\nexport const GuestFormHelper: IGuestFormHelper = {\n  ageOptions: [\n    {\n      label: \"12+\",\n      value: \"YOUNG\"\n    },\n    {\n      label: \"3-12 let\",\n      value: \"CHILD\"\n    },\n    {\n      label: \"Do 3 let\",\n      value: \"INFANT\"\n    },\n    {\n      label: \"Dospělý\",\n      value: \"ADULT\"\n    }\n  ],\n  getGuestResponseErrorList: (errorString: string) => {\n    try {\n      return Array.from(\n        Object.values(\n          JSON.parse(errorString.replaceAll(\"'\", \"\\\"\"))\n        ), ((list: any) => list[ 0 ])\n      )\n    } catch (error) {\n      return [ \"Chyba serveru, kontaktujte správce\" ]\n    }\n  },\n  phoneCodeRequiredRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte kód ve formátu 420, +420 nebo (420)\",\n      pattern: /^\\+?\\(?[0-9]*\\)?$/,\n      transform: FormHelper.trim\n    }\n  ],\n  requiredAlphaRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte pouze text\",\n      pattern: /^([A-Za-z\\sáÁčČďĎéÉěĚíÍňŇřŘšŠťŤúÚůŮýÝžŽóÓ])+$/,\n      transform: FormHelper.trim\n    }\n  ],\n  requiredNumericRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte pouze čísla\",\n      pattern: /^[\\d\\s]+$/,\n      transform: FormHelper.trim\n    }\n  ]\n}","import { gql } from \"@apollo/client\"\n\nexport const CREATE_GUEST = gql`\n  mutation CreateGuest($data: GuestInput!) {\n    createGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const CREATE_GUEST_BASIC = gql`\n  mutation CreateGuestBasic($data: GuestInput!) {\n    createGuest(data: $data) {\n      guest {\n        email\n        name\n        surname\n      }\n    }\n  }\n`\n\nexport const UPDATE_GUEST = gql`\n  mutation UpdateGuest($data: GuestInput!) {\n    updateGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        age\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const DELETE_GUEST = gql`\n  mutation DeleteGuest($guestId: ID!) {\n    deleteGuest(guestId: $guestId) {\n      guest {\n        id\n      }\n    }\n  }\n`","export const apolloErrorUnauthorized: string = \"Unauthorized\"\nexport const defaultArrivalHour: number = 14\nexport const defaultDepartureHour: number = 10\nexport const dateFormat = \"YYYY-MM-DD HH:mm\"\nexport const errorMessages = {\n  invalidCredentials: \"Please enter valid credentials\",\n  refreshTokenExpired: \"Refresh token is expired\",\n  signatureExpired: \"Signature has expired\",\n  unauthorized: \"Unauthorized\"\n}\nexport const refreshTokenName: string = \"refreshToken\"\nexport const tokenName: string = \"token\"","import { useState } from \"react\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm, Select, Skeleton } from \"antd\"\r\nimport { CloseOutlined, MailOutlined, WarningOutlined } from \"@ant-design/icons\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { Store } from \"rc-field-form/lib/interface\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport \"./styles.css\"\r\nimport { ApolloError, FetchResult, useMutation } from \"@apollo/client\"\r\nimport { CREATE_GUEST, DELETE_GUEST, UPDATE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuest, CreateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuest\"\r\nimport { GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { Guests_guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { UpdateGuest, UpdateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/UpdateGuest\"\r\nimport { useEffect } from \"react\"\r\nimport { errorMessages } from \"../../lib/Constants\"\r\nimport { DeleteGuest, DeleteGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/DeleteGuest\"\r\n\r\ninterface Props {\r\n  addGuest?: (guest: Guests_guests) => void\r\n  close: () => void\r\n  guest?: GuestsFull_guests | null\r\n  reauthenticate: (callback: () => void, errorHandler?: (reason: ApolloError) => void) => void\r\n  removeGuest?: (guest: GuestsFull_guests) => void\r\n  updateGuestCache?: (guest: Guests_guests) => void\r\n  visible: boolean\r\n}\r\n\r\nexport const GuestDrawer = ({\r\n  addGuest,\r\n  close,\r\n  guest,\r\n  reauthenticate,\r\n  removeGuest,\r\n  updateGuestCache,\r\n  visible\r\n}: Props) => {\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ createGuest, { loading: createLoading } ] = useMutation<CreateGuest, CreateGuestVariables>(CREATE_GUEST)\r\n  const [ updateGuest, { loading: updateLoading } ] = useMutation<UpdateGuest, UpdateGuestVariables>(UPDATE_GUEST)\r\n  const [ deleteGuest, { loading: deleteLoading } ] = useMutation<DeleteGuest, DeleteGuestVariables>(DELETE_GUEST)\r\n\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n  const initialValues: Store = {\r\n    age: guest?.age,\r\n    address: {\r\n      municipality: guest?.addressMunicipality,\r\n      psc: guest?.addressPsc,\r\n      street: guest?.addressStreet\r\n    },\r\n    citizenship: {\r\n      selected: guest?.citizenship\r\n    },\r\n    email: guest?.email,\r\n    gender: guest?.gender,\r\n    identity: guest?.identity,\r\n    name: guest?.name,\r\n    phone: guest?.phoneNumber,\r\n    surname: guest?.surname,\r\n    visa: guest?.visaNumber\r\n  }\r\n  const emailPrefixIcon = (\r\n    <Form.Item name=\"email-prefix\" noStyle>\r\n      <MailOutlined />\r\n    </Form.Item>\r\n  )\r\n\r\n  const closeDrawer = (): void => {\r\n    if (form.isFieldsTouched()) {\r\n      setConfirmClose(true)\r\n    } else {\r\n      close()\r\n    }\r\n  }\r\n\r\n  const updateGuestAction = (guestId: string, variables: any) => {\r\n    const handler =\r\n      () => updateGuest({ variables: { data: { id: guestId, ...variables } } })\r\n        .then((value: FetchResult<UpdateGuest>) => {\r\n          if (value.data?.updateGuest !== undefined && value.data.updateGuest !== null) {\r\n            form.resetFields()\r\n            message.success(\"Hotovo!\")\r\n            if (updateGuestCache !== undefined) {\r\n              updateGuestCache(value.data.updateGuest?.guest as Guests_guests)\r\n            }\r\n            close()\r\n          }\r\n        })\r\n    handler().catch((reason: ApolloError) => {\r\n      if (reason.message === errorMessages.signatureExpired) {\r\n        reauthenticate(handler, (reason: ApolloError) => message.error(reason.message))\r\n      } else {\r\n        message.error(reason.message)\r\n      }\r\n    })\r\n  }\r\n\r\n  const createGuestAction = (variables: any) => {\r\n    const handler =\r\n      () => createGuest({ variables: { data: { ...variables } } })\r\n        .then((value: FetchResult<CreateGuest>) => {\r\n          if (value.data?.createGuest !== undefined && value.data.createGuest !== null) {\r\n            form.resetFields()\r\n            message.success(\"Hotovo!\")\r\n            if (addGuest !== undefined) {\r\n              addGuest(value.data.createGuest?.guest as Guests_guests)\r\n            }\r\n            close()\r\n          }\r\n        })\r\n    handler().catch((reason: ApolloError) => {\r\n      if (reason.message === errorMessages.signatureExpired) {\r\n        reauthenticate(handler, (reason: ApolloError) => message.error(reason.message))\r\n      } else {\r\n        message.error(reason.message)\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteGuestAction = (guestId: string) => {\r\n    const handler =\r\n      () => deleteGuest({ variables: { guestId } })\r\n        .then((value: FetchResult<DeleteGuest>) => {\r\n          if (value.data?.deleteGuest !== undefined && value.data?.deleteGuest !== null) {\r\n            message.success(\"Hotovo!\")\r\n            if (removeGuest !== undefined) {\r\n              removeGuest(value.data.deleteGuest?.guest as Guests_guests)\r\n            }\r\n            close()\r\n          }\r\n        })\r\n    handler().catch((reason: ApolloError) => {\r\n      if (reason.message === errorMessages.signatureExpired) {\r\n        reauthenticate(handler, (reason: ApolloError) => message.error(reason.message))\r\n      } else {\r\n        message.error(reason.message)\r\n      }\r\n    })\r\n  }\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          age: formData.age,\r\n          addressMunicipality: formData.address?.municipality,\r\n          addressPsc: formData.address?.psc,\r\n          addressStreet: formData.address?.street,\r\n          citizenship: formData.citizenship?.selected === undefined ? formData.citizenship?.new : formData.citizenship.selected,\r\n          email: formData.email,\r\n          gender: formData.gender,\r\n          identity: formData.identity,\r\n          name: formData.name,\r\n          phoneNumber: formData.phone,\r\n          surname: formData.surname,\r\n          visaNumber: formData.visa\r\n        }\r\n        if (guest === undefined || guest === null) {\r\n          createGuestAction(variables)\r\n        } else {\r\n          updateGuestAction(guest.id, variables)\r\n        }\r\n      })\r\n      .catch(() => message.error(\"Formulář nelze odeslat, opravte prosím chyby\"))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true) {\r\n      form.resetFields()\r\n    }\r\n  }, [ form, visible ])\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ closeDrawer } />\r\n        </Popconfirm>\r\n      ) }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      width={ 500 }\r\n      visible={ visible }\r\n      footer={\r\n        <>\r\n          { guest !== undefined && guest !== null &&\r\n            <Popconfirm\r\n              cancelText=\"Ne\"\r\n              icon={ <WarningOutlined /> }\r\n              okText=\"Ano\"\r\n              onConfirm={ () => deleteGuestAction(guest.id) }\r\n              title=\"opravdu odstranit?\">\r\n              <Button\r\n                danger\r\n                style={ {\r\n                  float: \"left\"\r\n                } }\r\n                type=\"primary\">\r\n                Odstranit\r\n              </Button>\r\n            </Popconfirm>\r\n          }\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            { guest === null ? \"Vytvořit\" : \"Upravit\" }\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        padding: \"16px 20px\",\r\n        textAlign: \"right\"\r\n      } }>\r\n      <Skeleton\r\n        active\r\n        loading={ createLoading || updateLoading || deleteLoading }\r\n        paragraph={ { rows: 15 } }>\r\n        <Form\r\n          form={ form }\r\n          initialValues={ initialValues }\r\n          layout=\"vertical\"\r\n          name=\"guest\">\r\n          <Title level={ 5 }>Osobní údaje</Title>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Jméno\"\r\n            name=\"name\"\r\n            required\r\n            rules={ GuestFormHelper.requiredAlphaRules }>\r\n            <Input placeholder=\"Vaše Jméno\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Příjmení\"\r\n            name=\"surname\"\r\n            required\r\n            rules={ GuestFormHelper.requiredAlphaRules }>\r\n            <Input placeholder=\"Vaše Příjmení\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"E-Mail\"\r\n            name=\"email\"\r\n            required\r\n            rules={ [ FormHelper.requiredRule ] }>\r\n            <Input\r\n              addonBefore={ emailPrefixIcon }\r\n              placeholder=\"e-mail\"\r\n              type=\"email\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Číslo OP\"\r\n            name=\"identity\">\r\n            <Input placeholder=\"číslo občanského průkazu\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Telefonní Číslo\"\r\n            name=\"phone\">\r\n            <Input placeholder=\"číslo\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Věk\"\r\n            name=\"age\">\r\n            <Select\r\n              options={ GuestFormHelper.ageOptions }\r\n              placeholder=\"vyberte ze seznamu\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Pohlaví\"\r\n            name=\"gender\">\r\n            <Select\r\n              placeholder=\"vyberte ze seznamu\">\r\n              <Select.Option value=\"M\">Muž</Select.Option>\r\n              <Select.Option value=\"F\">Žena</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Číslo viza\"\r\n            name=\"visa\">\r\n            <Input placeholder=\"číslo visa\" />\r\n          </Form.Item>\r\n          <Title level={ 5 }>Trvalé bydliště</Title>\r\n          <Form.Item\r\n            label=\"Ulice\"\r\n            name={ [ \"address\", \"street\" ] }>\r\n            <Input placeholder=\"ulice\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"PSČ/Obec\">\r\n            <Input.Group compact>\r\n              <Form.Item\r\n                style={ { marginBottom: 0, width: \"50%\" } }\r\n                name={ [ \"address\", \"psc\" ] }>\r\n                <Input placeholder=\"PSČ\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                style={ { marginBottom: 0, width: \"50%\" } }\r\n                name={ [ \"address\", \"municipality\" ] }>\r\n                <Input placeholder=\"Obec\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Občanství\">\r\n            <Input.Group compact>\r\n              <Form.Item\r\n                style={ { width: \"50%\" } }\r\n                name={ [ \"citizenship\", \"selected\" ] }>\r\n                <Select style={ { width: \"100%\" } } placeholder=\"ze seznamu\">\r\n                  <Select.Option value=\"cze\">CZE</Select.Option>\r\n                  <Select.Option value=\"sk\">SK</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                style={ { width: \"50%\" } }\r\n                name={ [ \"citizenship\", \"new\" ] }>\r\n                <Input placeholder=\"ručně\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n        </Form>\r\n      </Skeleton>\r\n    </Drawer>\r\n  )\r\n}","import { Avatar, Button, List } from \"antd\"\r\nimport { Colors } from \"../../../lib/components/Colors\"\r\nimport { GuestsFull_guests } from \"../../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\n\r\ninterface Props {\r\n  guest: GuestsFull_guests\r\n  openGuestDrawer: () => void\r\n  selectGuest: (guest: GuestsFull_guests) => void\r\n}\r\n\r\nexport const GuestItem = ({\r\n  guest,\r\n  openGuestDrawer,\r\n  selectGuest\r\n}: Props) => {\r\n  return (\r\n    <List.Item\r\n      actions={ [\r\n        <Button\r\n          key=\"edit\"\r\n          onClick={ () => {\r\n            selectGuest(guest)\r\n            openGuestDrawer()\r\n          } }\r\n          type=\"link\">\r\n          upravit\r\n        </Button>,\r\n      ] }>\r\n      <List.Item.Meta\r\n        avatar={\r\n          <Avatar\r\n            gap={ 4 }\r\n            size=\"large\"\r\n            style={ {\r\n              backgroundColor: Colors.getRandomColor()\r\n            } }>\r\n            { guest.name.substring(0, 1).toUpperCase() }\r\n          </Avatar>\r\n        }\r\n        description={ guest.email }\r\n        title={ `${ guest.name } ${ guest.surname }` } />\r\n    </List.Item>\r\n  )\r\n}","import { useState } from \"react\"\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport { Button, List } from \"antd\"\nimport { Guests_guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\nimport { PlusCircleOutlined } from \"@ant-design/icons\"\nimport { ApolloError } from \"@apollo/client\"\nimport { useEffect } from \"react\"\nimport { GuestDrawer } from \"../GuestDrawer\"\nimport \"./styles.css\"\nimport { GuestItem } from \"./components/GuestItem\"\nimport { Whoami_whoami } from \"../../lib/graphql/queries/User/__generated__/Whoami\"\nimport { User } from \"../../lib/Types\"\nimport { HomePage_guests } from \"../../lib/graphql/queries/App/__generated__/HomePage\"\n\ninterface Props {\n  guestsData?: (HomePage_guests | null)[] | null\n  reauthenticate: (callback: () => void, errorHandler?: (reason: ApolloError) => void) => void\n  setPageTitle: (title: string) => void\n  setUser: (user: Whoami_whoami | undefined) => void\n  user?: User\n}\n\nexport const Guests = withRouter(({\n  guestsData,\n  reauthenticate,\n  setPageTitle\n}: RouteComponentProps & Props) => {\n\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\n  const [ guests, setGuests ] = useState<(Guests_guests)[]>([])\n  const [ selectedGuest, setSelectedGuest ] = useState<Guests_guests | null>(null)\n\n  useEffect(() => {\n    setPageTitle(\"Hosté\")\n  }, [ setPageTitle ])\n\n  useEffect(() => {\n    const guestsList: Guests_guests[] = []\n    guestsData?.forEach((guest: HomePage_guests | null) => {\n      if (guest !== null) {\n        guestsList.push(guest)\n      }\n    })\n    setGuests(guestsList)\n  }, [ guestsData ])\n\n  const addGuest = (guest: Guests_guests) => setGuests(guests.concat(guest))\n\n  const updateGuestState = (guest: Guests_guests) => {\n    setGuests(\n      Array.from(guests, (cachedGuest: Guests_guests) => {\n        if (cachedGuest.id === guest.id) {\n          return guest\n        }\n        return cachedGuest\n      })\n    )\n  }\n\n  const removeGuest = (guest: Guests_guests) =>\n    setGuests(guests.filter(cachedGuest => cachedGuest.id !== guest.id))\n\n  return (\n    <>\n      <List\n        bordered={ true }\n        className=\"guests-list\"\n        dataSource={ guests }\n        footer={\n          <Button\n            icon={ <PlusCircleOutlined /> }\n            onClick={ () => {\n              setSelectedGuest(null)\n              setDrawerVisible(true)\n            } }\n            type=\"primary\">\n            Přidat hosta\n          </Button>\n        }\n        header={ <h4>Seznam hostů</h4> }\n        itemLayout=\"horizontal\"\n        renderItem={ (guest: Guests_guests) => (\n          <GuestItem\n            guest={ guest }\n            openGuestDrawer={ () => setDrawerVisible(true) }\n            selectGuest={ setSelectedGuest } />\n        ) } />\n      <GuestDrawer\n        addGuest={ addGuest }\n        close={ () => setDrawerVisible(false) }\n        guest={ selectedGuest }\n        reauthenticate={ reauthenticate }\n        removeGuest={ removeGuest }\n        updateGuestCache={ updateGuestState }\n        visible={ drawerVisible } />\n    </>\n  )\n})","import { AppReferrer } from \"../Types\";\r\n\r\ninterface IUrlHelper {\r\n  getReferrer: () => AppReferrer\r\n}\r\n\r\nexport const UrlHelper: IUrlHelper = {\r\n  getReferrer: (): AppReferrer => {\r\n    const urlParts = window.location.search.substring(1).split(\"=\")\r\n    if (urlParts.length >= 2 && urlParts[ 1 ] !== undefined) {\r\n      return urlParts[ 1 ] as AppReferrer\r\n    }\r\n    return \"/\"\r\n  }\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const TOKEN_AUTH = gql`\r\n  mutation TokenAuth($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      payload\r\n      refreshExpiresIn\r\n      refreshToken\r\n      token\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOKEN_VERIFY = gql`\r\n  mutation VerifyToken($token: String!) {\r\n    verifyToken(token: $token) {\r\n      payload\r\n    }\r\n  } \r\n`\r\n\r\nexport const TOKEN_REFRESH = gql`\r\n  mutation RefreshToken($refreshToken: String!) {\r\n    refreshToken(refreshToken: $refreshToken) {\r\n      payload\r\n      refreshExpiresIn\r\n      refreshToken\r\n      token\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOKEN_REVOKE = gql`\r\n  mutation RevokeToken($refreshToken: String!) {\r\n    revokeToken(refreshToken: $refreshToken) {\r\n      revoked\r\n    }\r\n  }\r\n`","import { ApolloError, useMutation } from \"@apollo/client\"\r\nimport { Button, Form, FormProps, Input, Layout, message, Spin } from \"antd\"\r\nimport { useEffect } from \"react\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport { UrlHelper } from \"../../lib/components/UrlHelper\"\r\nimport { errorMessages, refreshTokenName, tokenName } from \"../../lib/Constants\"\r\nimport { TOKEN_AUTH } from \"../../lib/graphql/mutations/User\"\r\nimport { TokenAuth, TokenAuthVariables } from \"../../lib/graphql/mutations/User/__generated__/TokenAuth\"\r\nimport { User } from \"../../lib/Types\"\r\nimport \"./styles.css\"\r\n\r\ninterface Props {\r\n  refetch: () => void\r\n  setPageTitle: (title: string) => void\r\n  setUser: (user: User) => void\r\n}\r\n\r\nconst layout: FormProps = {\r\n  labelCol: {\r\n    lg: 8,\r\n    md: 8,\r\n    sm: 8\r\n  },\r\n  wrapperCol: {\r\n    lg: 16,\r\n    md: 16,\r\n    sm: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    lg: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n    xs: {\r\n      offset: 0,\r\n      span: 24\r\n    }\r\n  },\r\n};\r\n\r\nexport const Login = withRouter(({\r\n  history,\r\n  refetch,\r\n  setPageTitle,\r\n  setUser\r\n}: RouteComponentProps & Props) => {\r\n\r\n  const [ getToken, { loading: loginLoading } ] = useMutation<TokenAuth, TokenAuthVariables>(TOKEN_AUTH, {\r\n    onCompleted: (token: TokenAuth) => {\r\n      if (token.tokenAuth !== null) {\r\n        localStorage.setItem(tokenName, token.tokenAuth.token)\r\n        localStorage.setItem(refreshTokenName, token.tokenAuth.refreshToken)\r\n        setUser({ username: token.tokenAuth.payload.username })\r\n        refetch()\r\n        // for debugging only\r\n        localStorage.setItem(\"tokenExpiresIn\", token.tokenAuth.payload.exp)\r\n        localStorage.setItem(\"refreshTokenExpiresIn\", token.tokenAuth.refreshExpiresIn.toString())\r\n        // --- / ---\r\n        history.push(UrlHelper.getReferrer())\r\n      }\r\n    },\r\n    onError: (reason: ApolloError) => {\r\n      switch (reason.message) {\r\n        case errorMessages.invalidCredentials:\r\n          message.error(\"Prosím zadejte platné přihlašovací údaje\")\r\n          break\r\n        default:\r\n          message.error(\"Chyba serveru, kontaktujte správce\")\r\n      }\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    setPageTitle(\"Přihlášení\")\r\n  }, [ history, setPageTitle ])\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const login = (data: { password: string, username: string }): void => {\r\n    getToken({\r\n      variables: {\r\n        password: data.password.trim(),\r\n        username: data.username.trim()\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Layout.Content>\r\n      <Spin spinning={ loginLoading } tip=\"Přihlašování...\">\r\n        <Form\r\n          { ...layout }\r\n          className=\"login\"\r\n          form={ form }\r\n          name=\"login\"\r\n          onFinish={ login }>\r\n          <Form.Item\r\n            label=\"Jméno\"\r\n            name=\"username\"\r\n            rules={ [ FormHelper.requiredRule ] }>\r\n            <Input type=\"text\" placeholder=\"uživatelské jméno\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Heslo\"\r\n            name=\"password\"\r\n            rules={ [ FormHelper.requiredRule ] }>\r\n            <Input type=\"password\" placeholder=\"heslo\" />\r\n          </Form.Item>\r\n          <Form.Item { ...tailLayout }>\r\n            <Button type=\"default\" htmlType=\"button\" onClick={ () => form.resetFields() }>\r\n              Reset\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Přihlásit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Spin>\r\n    </Layout.Content>\r\n  )\r\n})","import { Button, Layout, Result } from \"antd\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\n\r\nexport const NotFound = withRouter(({ history }: RouteComponentProps) => {\r\n  return (\r\n    <Layout>\r\n      <Layout.Content>\r\n        <Result\r\n          status=\"404\"\r\n          title=\"Jejda!\"\r\n          subTitle=\"hledáme vaší stránku... ale nemůžeme ji najít...\"\r\n          extra={\r\n            <Button\r\n              onClick={ () => history.push(\"/\") }\r\n              type=\"primary\">\r\n              Přejít na úvod\r\n            </Button>\r\n          } />\r\n      </Layout.Content>\r\n    </Layout>\r\n  )\r\n})","import { Popover } from \"antd\"\r\nimport { Moment } from \"moment\"\r\nimport { ReactCalendarItemRendererProps, TimelineItem } from \"react-calendar-timeline\"\r\nimport Text from \"antd/lib/typography/Text\"\r\nimport { CustomItemFields } from \"../../../../lib/Types\"\r\n\r\nexport const ReservationItem = ({ item, itemContext, getItemProps, getResizeProps }: ReactCalendarItemRendererProps<TimelineItem<CustomItemFields, Moment>>) => {\r\n  const { left: leftResizeProps, right: rightResizeProps } = getResizeProps()\r\n  return item.itemProps !== undefined ? (\r\n    <div { ...getItemProps(item.itemProps) }>\r\n      { itemContext.useResizeHandle ? <div { ...leftResizeProps } /> : '' }\r\n      <Popover title={ item.title } content={ (\r\n        <>\r\n          <div style={ { color: item.color, fontWeight: 700 } }>\r\n            { item.type }\r\n          </div>\r\n          <div>\r\n            Od: <strong>{ item.start_time.format(\"DD MMM HH:mm\") }</strong>\r\n          </div>\r\n          <div>\r\n            Do: <strong>{ item.end_time.format(\"DD MMM HH:mm\") }</strong>\r\n          </div>\r\n        </>\r\n      ) }>\r\n        <div\r\n          className=\"rct-item-content\"\r\n          style={ { maxHeight: `${ itemContext.dimensions.height }` } }>\r\n          <Text strong>{ item.title }</Text>\r\n        </div>\r\n      </Popover>\r\n      { itemContext.useResizeHandle ? <div { ...rightResizeProps } /> : '' }\r\n    </div>\r\n  ) : null\r\n}","import { Moment } from \"moment\"\n\nexport type AppReferrer = \"/\" | \"/apartma\" | \"/guests\"\nexport type ReservationType = \"Závazná Rezervace\" | \"Nezávazná Rezervace\" | \"Aktuálně Ubytování\" | \"Obydlený Termín\"\nexport type ReservationTypeKey = \"BINDING\" | \"NONBINDING\" | \"ACCOMMODATED\" | \"INHABITED\"\n\nexport const Reservation = {\n  getType: (key: ReservationTypeKey): ReservationType => {\n    switch (key) {\n      case \"NONBINDING\":\n        return \"Nezávazná Rezervace\"\n      case \"ACCOMMODATED\":\n        return \"Aktuálně Ubytování\"\n      case \"INHABITED\":\n        return \"Obydlený Termín\"\n      case \"BINDING\":\n      default: return \"Závazná Rezervace\"\n    }\n  }\n}\n\nexport type DrawerType = \"guest\" | \"suite\"\nexport type ReservationMeal = \"BREAKFAST\" | \"HALFBOARD\" | \"NOMEAL\"\n\nexport interface ReservationRange {\n  from: Moment\n  to: Moment\n}\n\ninterface Address {\n  municipality?: string\n  psc?: number\n  street?: string\n}\n\ninterface Citizenship {\n  new?: string\n  selected?: string\n}\n\nexport interface GuestForm {\n  age: string,\n  address?: Address\n  citizenship?: Citizenship\n  email: string\n  gender?: string\n  id?: number\n  name: string\n  identity: string\n  phone: string\n  surname: string\n  visa?: string\n}\n\nexport interface GuestErrorResponse {\n  email: Array<string>\n  gender: Array<string>\n  identity: Array<string>\n  name: Array<string>\n  phone_number: Array<string>\n  surname: Array<string>\n}\n\nexport interface Guest {\n  id?: number | string\n  name: string\n  surname: string\n}\n\nexport interface Suite {\n  id: number | string\n  number?: number | null\n  title?: string\n}\n\nexport interface IReservation {\n  fromDate: Moment\n  guest?: Guest\n  meal?: ReservationMeal\n  id?: number | string\n  notes?: string | null\n  purpose?: string | null\n  roommates: Array<Guest>\n  suite: Suite\n  toDate: Moment\n  type?: ReservationTypeKey\n}\n\nexport interface SuiteForm {\n  number: number,\n  title: string\n}\n\nexport interface OptionsType {\n  label: string,\n  value: string | number\n}\n\nexport interface CustomGroupFields {\n  number: number | null\n  title: string\n}\n\nexport interface CustomItemFields {\n  color?: string\n  guest: Guest\n  meal: ReservationMeal\n  notes: string | null\n  purpose: string | null\n  roommates: Guest[]\n  suite: Suite\n  type?: ReservationTypeKey\n}\n\nexport interface User {\n  username: string\n}","import { FormInstance, Rule } from \"antd/lib/form\";\r\nimport { OptionsType, Reservation, ReservationTypeKey } from \"../Types\";\r\n\r\ninterface OID {\r\n  id: number\r\n}\r\n\r\ninterface IReservationFormHelper {\r\n  getRequiredRule: (message: string) => Rule\r\n  guestValidators: (form: FormInstance) => Rule[]\r\n  mealOptions: OptionsType[]\r\n  reservationOptions: (OptionsType & { value: ReservationTypeKey })[]\r\n  roommateValidators: (form: FormInstance) => Rule[]\r\n}\r\n\r\nexport const ReservationFormHelper: IReservationFormHelper = {\r\n  mealOptions: [\r\n    {\r\n      label: \"Bez Stravy\",\r\n      value: \"NOMEAL\"\r\n    },\r\n    {\r\n      label: \"Jen Snídaně\",\r\n      value: \"BREAKFAST\"\r\n    },\r\n    {\r\n      label: \"Polopenze\",\r\n      value: \"HALFBOARD\"\r\n    }\r\n  ],\r\n  reservationOptions: [\r\n    {\r\n      label: Reservation.getType(\"BINDING\"),\r\n      value: \"BINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"NONBINDING\"),\r\n      value: \"NONBINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"ACCOMMODATED\"),\r\n      value: \"ACCOMMODATED\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"INHABITED\"),\r\n      value: \"INHABITED\"\r\n    }\r\n  ],\r\n  getRequiredRule: (message: string): Rule => {\r\n    return { required: true, message }\r\n  },\r\n  guestValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"host nemůže být stejný jako spolubydlící\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const roommates: Array<OID> = form.getFieldValue(\"roommates\")\r\n          if (roommates === undefined || roommates.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          const duplicate = roommates.filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicate === undefined || duplicate.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail guest validation, equals to roommate\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"vyberte hosta\",\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  roommateValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"spolubydlící je již vybrán\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const duplicates: Array<OID> = form.getFieldValue(\"roommates\").filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicates === undefined || duplicates.length <= 1) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, duplicate value\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"spolubydlící nemůže být stejný jako host\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          if (form.getFieldValue(\"guest\") !== value) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, equals to guest\"))\r\n        }\r\n      }\r\n    ]\r\n  },\r\n}","import { useEffect, useState } from \"react\"\nimport { Button, DatePicker, Form, Input, Modal, Popconfirm, Select, Space } from \"antd\"\nimport { Moment } from \"moment\"\nimport { ApolloError } from \"@apollo/client\"\nimport { Store } from \"rc-field-form/lib/interface\"\nimport { CloseCircleOutlined, CloseOutlined, EditOutlined, MinusCircleOutlined, PlusCircleOutlined, PlusOutlined } from \"@ant-design/icons\"\nimport \"./styles.css\"\nimport { IReservation, OptionsType, ReservationTypeKey } from \"../../lib/Types\"\nimport { ReservationFormHelper } from \"../../lib/components/ReservationFormHelper\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { ReservationInput } from \"../../lib/graphql/globalTypes\"\nimport { dateFormat } from \"../../lib/Constants\"\nimport { GuestDrawer } from \"../GuestDrawer\"\nimport { Guests_guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\n\ninterface Props {\n  close: () => void\n  createReservation: (variables: any) => void\n  guests?: (Guests_guests | null)[] | null\n  isOpen: boolean\n  reauthenticate: (callback: () => void, errorHandler?: (reason: ApolloError) => void) => void\n  removeReservation: (reservationId: string | number) => void\n  reservation?: IReservation\n  updateReservation: (reservationId: string, variables: any) => void\n}\n\nexport const ReservationModal = ({\n  close,\n  createReservation,\n  guests,\n  isOpen,\n  reauthenticate,\n  removeReservation,\n  reservation,\n  updateReservation\n}: Props) => {\n\n  const [ deleteConfirmVisible, setDeleteConfirmVisible ] = useState<boolean>(false)\n  const [ guestDrawerOpen, setGuestDrawerOpen ] = useState<boolean>(false)\n  const [ guestOptions, setGuestOptions ] = useState<OptionsType[]>([])\n\n  const [ form ] = Form.useForm()\n\n  const initialValues: Store & { type?: ReservationTypeKey } = reservation !== undefined ? {\n    dates: [ reservation.fromDate, reservation.toDate ],\n    guest: reservation.guest === undefined ? null : reservation.guest.id,\n    meal: reservation.meal,\n    notes: reservation.notes,\n    purpose: reservation.purpose,\n    roommates: Array.from(reservation.roommates, roommate => {\n      return { id: roommate.id }\n    }),\n    type: reservation.type\n  } : { type: \"NONBINDING\" }\n\n  const closeModal = () => {\n    form.resetFields()\n    setDeleteConfirmVisible(false)\n    setTimeout(() => { close() })\n  }\n\n  const getGuestOption = (guest: Guests_guests) => {\n    return {\n      label: `${ guest.name } ${ guest.surname }`,\n      value: guest.id\n    }\n  }\n\n  const addGuestOption = (guest: Guests_guests) => {\n    setGuestOptions(guestOptions.concat(getGuestOption(guest)))\n  }\n\n  const submitForm = (): void => {\n    const formData = form.getFieldsValue(true)\n    const [ from, to ]: Array<Moment> = form.getFieldValue(\"dates\")\n    const roommates = formData.roommates === undefined ? [] :\n      Array.from(formData.roommates, (data: { id: number }) => data.id)\n\n    const variables: ReservationInput = {\n      fromDate: from.format(dateFormat),\n      guest: formData.guest,\n      meal: formData.meal,\n      notes: formData.notes,\n      purpose: formData.purpose,\n      roommates: roommates,\n      suite: reservation !== undefined ? +reservation.suite.id : null,\n      toDate: to.format(dateFormat),\n      type: formData.type\n    }\n    if (reservation !== undefined && reservation.id !== undefined) {\n      updateReservation(String(reservation.id), variables)\n    } else {\n      createReservation(variables)\n    }\n  }\n\n  const getRemoveButton = () => {\n    return reservation !== undefined && reservation.id !== undefined ? (\n      <Popconfirm\n        cancelText=\"Ne\"\n        key=\"remove\"\n        okText=\"Ano\"\n        onConfirm={ () => {\n          if (reservation.id !== undefined) {\n            removeReservation(reservation.id)\n          }\n        } }\n        title=\"Odstranit rezervaci?\">\n        <Button\n          className=\"cancel-button\"\n          danger\n          icon={ <CloseCircleOutlined /> }>\n          Odstranit\n        </Button>\n      </Popconfirm>\n    ) : null\n  }\n\n  const footerButtons = [\n    getRemoveButton(),\n    <Button\n      key=\"guest\"\n      onClick={ () => setGuestDrawerOpen(true) }>\n      Přidat hosta\n    </Button>,\n    <Button\n      key=\"create\"\n      icon={ reservation === undefined ? <PlusCircleOutlined /> : <EditOutlined /> }\n      onClick={ () => {\n        form.validateFields()\n          .then(submitForm)\n      } }\n      type=\"primary\">\n      { (reservation !== undefined && reservation.id !== undefined) ? \"Upravit\" : \"Uložit\" }\n    </Button>\n  ]\n\n  useEffect(() => {\n    // Form instance is created on page load (before modal is open),\n    // but the component is rendered only when modal is opened\n    if (isOpen === true) {\n      form.resetFields()\n    }\n  }, [ form, isOpen, reservation ])\n\n  useEffect(() => {\n    if (guests !== undefined && guests !== null) {\n      const options: OptionsType[] = []\n      guests.forEach((guest: Guests_guests | null) => {\n        if (guest !== null) {\n          options.push(getGuestOption(guest))\n        }\n      })\n      setGuestOptions(options)\n    }\n  }, [ guests ])\n\n  return (\n    <>\n      <Modal\n        closeIcon={ (\n          <Popconfirm\n            onCancel={ () => setDeleteConfirmVisible(false) }\n            onConfirm={ closeModal }\n            title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n            visible={ deleteConfirmVisible }>\n            <CloseOutlined onClick={ () => {\n              if (form.isFieldsTouched()) {\n                setDeleteConfirmVisible(true)\n              } else {\n                closeModal()\n              }\n            } } />\n          </Popconfirm>\n        ) }\n        footer={ footerButtons }\n        title=\"Rezervační formulář\"\n        visible={ isOpen }>\n        <Form\n          form={ form }\n          initialValues={ initialValues }\n          layout=\"vertical\">\n          <Form.Item\n            label=\"Datum Rezervace\"\n            name=\"dates\"\n            required>\n            <DatePicker.RangePicker\n              format={ dateFormat }\n              showTime />\n          </Form.Item>\n          <Form.Item\n            hasFeedback\n            label=\"Host\"\n            name=\"guest\"\n            required\n            rules={ ReservationFormHelper.guestValidators(form) }>\n            <Select\n              filterOption={ (input, option): boolean => {\n                const match = option?.label?.toString().toLowerCase().indexOf(input.toLowerCase())\n                return match !== undefined && match >= 0\n              } }\n              options={ guestOptions }\n              showSearch />\n          </Form.Item>\n          <Form.List name=\"roommates\">\n            { (fields, { add, remove }) => (\n              <>\n                { fields.map(({ key, name, fieldKey, ...restField }) => (\n                  <Space\n                    align=\"baseline\"\n                    className=\"roommate-list\"\n                    key={ key }>\n                    <Form.Item\n                      hasFeedback\n                      { ...restField }\n                      fieldKey={ [ fieldKey, 'first' ] }\n                      name={ [ name, \"id\" ] }\n                      rules={ ReservationFormHelper.roommateValidators(form) }>\n                      <Select\n                        options={ guestOptions }\n                        showSearch />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={ () => {\n                      remove(name)\n                      form.validateFields()\n                    } } />\n                  </Space>\n                )) }\n                <Form.Item>\n                  <Button\n                    disabled={ fields.length >= guestOptions.length }\n                    type=\"dashed\"\n                    onClick={ () => add() }\n                    block\n                    icon={ <PlusOutlined /> }>\n                    Přidat spolubydlícího\n                  </Button>\n                </Form.Item>\n              </>\n            ) }\n          </Form.List>\n          <Form.Item\n            hasFeedback\n            label=\"Typ Rezervace\"\n            name=\"type\"\n            required\n            rules={ [ ReservationFormHelper.getRequiredRule(\"vyberte typ rezervace\") ] }>\n            <Select\n              options={ ReservationFormHelper.reservationOptions } />\n          </Form.Item>\n          <Form.Item\n            hasFeedback\n            label=\"Strava\"\n            name=\"meal\"\n            required\n            rules={ [ FormHelper.requiredRule ] }>\n            <Select\n              options={ ReservationFormHelper.mealOptions } />\n          </Form.Item>\n          <Form.Item\n            label=\"Účel pobytu\"\n            name=\"purpose\">\n            <Input placeholder=\"účel pobytu\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Poznámky\"\n            name=\"notes\">\n            <Input.TextArea\n              placeholder=\"zadejte text\"\n              allowClear />\n          </Form.Item>\n        </Form>\n      </Modal>\n      <GuestDrawer\n        close={ () => setGuestDrawerOpen(false) }\n        reauthenticate={ reauthenticate }\n        addGuest={ addGuestOption }\n        visible={ guestDrawerOpen } />\n    </>\n  )\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_RESERVATION = gql`\r\n  mutation CreateReservation($data: ReservationInput!) {\r\n    createReservation(data: $data) {\r\n      reservation {\r\n        fromDate\r\n        id\r\n        guest {\r\n          id\r\n          name\r\n          surname\r\n        }\r\n        meal\r\n        notes\r\n        purpose\r\n        roommates {\r\n          id\r\n          name\r\n          surname\r\n        }\r\n        suite {\r\n          id\r\n          number\r\n          title\r\n        }\r\n        toDate\r\n        type\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_RESERVATION = gql`\r\n  mutation DeleteReservation($reservationId: ID!) {\r\n    deleteReservation(reservationId: $reservationId) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_RESERVATION = gql`\r\n  mutation UpdateReservation($data: ReservationInput!) {\r\n    updateReservation(data: $data) {\r\n      reservation {\r\n        fromDate\r\n        id\r\n        guest {\r\n          id\r\n          name\r\n          surname\r\n        }\r\n        meal\r\n        notes\r\n        purpose\r\n        roommates {\r\n          id\r\n          name\r\n          surname\r\n        }\r\n        suite {\r\n          id\r\n          number\r\n          title\r\n        }\r\n        toDate\r\n        type\r\n      }\r\n    }\r\n  }\r\n`","import { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport Title from \"antd/lib/typography/Title\"\nimport Timeline, { CursorMarker, DateHeader, SidebarHeader, TimelineGroup, TimelineHeaders, TimelineItem } from \"react-calendar-timeline\"\nimport { useEffect, useState } from \"react\"\nimport { Empty, message } from \"antd\"\nimport \"react-calendar-timeline/lib/Timeline.css\"\nimport \"./styles.css\"\nimport moment, { Moment } from \"moment\"\nimport { CustomGroupFields, CustomItemFields, IReservation } from \"../../lib/Types\"\nimport { Reservations_reservations } from \"../../lib/graphql/queries/Reservations/__generated__/Reservations\"\nimport { Colors } from \"../../lib/components/Colors\"\nimport { ReservationItem } from \"./components/ReservationItem\"\nimport { ReservationModal } from \"../ReservationModal\"\nimport { ApolloError, FetchResult, useMutation } from \"@apollo/client\"\nimport { HomePage_guests } from \"../../lib/graphql/queries/App/__generated__/HomePage\"\nimport { Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport { CreateReservation, CreateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/CreateReservation\"\nimport { UpdateReservation, UpdateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/UpdateReservation\"\nimport { DeleteReservation, DeleteReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/DeleteReservation\"\nimport { CREATE_RESERVATION, DELETE_RESERVATION, UPDATE_RESERVATION } from \"../../lib/graphql/mutations/Reservation\"\nimport { errorMessages } from \"../../lib/Constants\"\n\ninterface Props {\n  guests?: (HomePage_guests | null)[] | null\n  reauthenticate: (callback: () => void, errorHandler?: (reason: ApolloError) => void) => void\n  reservationsData?: (Reservations_reservations | null)[] | null\n  setPageTitle: (title: string) => void\n  suitesData?: (Suites_suites | null)[] | null\n}\n\n// https://github.com/namespace-ee/react-calendar-timeline\nexport const Reservations = withRouter(({\n  guests,\n  reauthenticate,\n  reservationsData,\n  setPageTitle,\n  suitesData\n}: RouteComponentProps & Props) => {\n\n  const [ createReservation ] = useMutation<CreateReservation, CreateReservationVariables>(CREATE_RESERVATION)\n  const [ updateReservation ] = useMutation<UpdateReservation, UpdateReservationVariables>(UPDATE_RESERVATION)\n  const [ deleteReservation ] = useMutation<DeleteReservation, DeleteReservationVariables>(DELETE_RESERVATION)\n\n  const [ groups, setGroups ] = useState<TimelineGroup<CustomGroupFields>[]>([])\n  const [ items, setItems ] = useState<TimelineItem<CustomItemFields, Moment>[]>([])\n\n  const [ reservation, setReservation ] = useState<IReservation>()\n  const [ reservationModalOpen, setReservationModalOpen ] = useState<boolean>(false)\n\n  const getTimelineReservationItem = (reservation: Reservations_reservations): TimelineItem<CustomItemFields, Moment> => {\n    return {\n      color: Colors.getReservationColor(reservation.type),\n      end_time: moment(reservation.toDate),\n      group: reservation.suite.id,\n      guest: reservation.guest,\n      id: reservation.id,\n      itemProps: {\n        className: 'reservation-item',\n        style: {\n          background: Colors.getReservationColor(reservation.type),\n          border: \"none\"\n        }\n      },\n      meal: reservation.meal,\n      notes: reservation.notes,\n      purpose: reservation.purpose,\n      roommates: reservation.roommates,\n      start_time: moment(reservation.fromDate),\n      suite: reservation.suite,\n      title: `${ reservation.guest.name } ${ reservation.guest.surname }`,\n      type: reservation.type\n    }\n  }\n\n  const addReservation = (reservation?: Reservations_reservations | null) => {\n    if (reservation !== undefined && reservation !== null) {\n      const existingReservation = items.find(item => item.id === reservation.id)\n      if (existingReservation === undefined) {\n        setItems(items.concat(getTimelineReservationItem(reservation)))\n      }\n    }\n  }\n\n  const removeReservation = (reservationId?: string | null) => {\n    if (reservationId !== undefined && reservationId !== null) {\n      setItems(items.filter(item => item.id !== reservationId))\n    }\n    setReservation(undefined)\n  }\n\n  const updateReservationState = (reservation?: Reservations_reservations | null) => {\n    if (reservation !== undefined && reservation !== null) {\n      const reservations = items.filter(item => item.id !== reservation.id)\n      setItems(reservations.concat(getTimelineReservationItem(reservation)))\n    }\n  }\n\n  const errorHandler = (reason: ApolloError, callback: () => void) => {\n    if (reason.message === errorMessages.signatureExpired) {\n      reauthenticate(callback, (reason: ApolloError) => message.error(reason.message))\n    } else {\n      message.error(reason.message)\n    }\n  }\n\n  const removeReservationAction = (reservationId: string | number) => {\n    const handler = () => deleteReservation({ variables: { reservationId: String(reservationId) } })\n      .then((value: FetchResult<DeleteReservation>) => {\n        setReservationModalOpen(false)\n        removeReservation(value.data?.deleteReservation?.reservation?.id)\n        message.success(\"Rezervace byla odstraněna!\")\n      })\n    handler().catch((reason: ApolloError) => errorHandler(reason, handler))\n  }\n\n  const updateReservationAction = (reservationId: string, variables: any) => {\n    const submitUpdatedReservation =\n      () => updateReservation({ variables: { data: { ...variables, id: reservationId } } })\n        .then((value: FetchResult<UpdateReservation>) => {\n          setReservationModalOpen(false)\n          updateReservationState(value.data?.updateReservation?.reservation)\n          message.success(\"Rezervace byla aktualizována!\")\n        })\n    submitUpdatedReservation()\n      .catch((reason: ApolloError) => errorHandler(reason, submitUpdatedReservation))\n  }\n\n  const newReservationAction = (variables: any) => {\n    const submitNewReservation = () => createReservation({ variables: { data: variables } })\n      .then((value: FetchResult<CreateReservation>) => {\n        setReservationModalOpen(false)\n        addReservation(value.data?.createReservation?.reservation)\n        message.success(\"Rezervace byla vytvořena!\")\n      })\n    submitNewReservation()\n      .catch((reason: ApolloError) => errorHandler(reason, submitNewReservation))\n  }\n\n  useEffect(() => {\n    setPageTitle(\"Rezervace / Obsazenost\")\n  }, [ setPageTitle ])\n\n  useEffect(() => {\n    const reservationList: TimelineItem<CustomItemFields, Moment>[] = []\n    reservationsData?.forEach((reservation: Reservations_reservations | null) => {\n      if (reservation !== null) {\n        reservationList.push(getTimelineReservationItem(reservation))\n      }\n    })\n    setItems(reservationList)\n  }, [ reservationsData ])\n\n  useEffect(() => {\n    const suiteList: TimelineGroup<CustomGroupFields>[] = []\n    suitesData?.forEach((suite: Suites_suites | null) => {\n      if (suite !== null) {\n        suiteList.push({ ...suite, stackItems: true })\n      }\n    })\n    setGroups(suiteList)\n  }, [ suitesData ])\n\n  // Click on timeline outside of any reservation, \n  // opens modal for new reservation\n  const onCanvasClick = (groupId: number, time: number) => {\n    const selectedGroup = groups.find(group => group.id === groupId)\n    if (selectedGroup !== undefined) {\n      setReservation({\n        fromDate: moment(time),\n        suite: { ...selectedGroup },\n        roommates: [],\n        toDate: moment(time).add(1, \"day\"),\n        type: \"NONBINDING\"\n      })\n      setReservationModalOpen(true)\n    }\n  }\n\n  // Click on item on the timeline opens modal\n  // with existing reservation for editing\n  const onItemClick = (itemId: number) => {\n    const timelineItem = items.find(item => item.id === itemId)\n    if (timelineItem !== undefined) {\n      setReservation({\n        fromDate: moment(timelineItem.start_time),\n        guest: timelineItem.guest,\n        id: timelineItem.id,\n        meal: timelineItem.meal,\n        notes: timelineItem.notes,\n        purpose: timelineItem.purpose,\n        roommates: timelineItem.roommates,\n        suite: timelineItem.suite,\n        toDate: moment(timelineItem.end_time),\n        type: timelineItem.type\n      })\n      setReservationModalOpen(true)\n    }\n  }\n\n  return reservationsData !== null ? (\n    <>\n      <Timeline\n        canChangeGroup={ false }\n        canMove={ false }\n        canResize={ false }\n        defaultTimeEnd={ moment().add(12, \"day\") }\n        defaultTimeStart={ moment().add(-12, \"day\") }\n        groupRenderer={ ({ group }) => {\n          return (\n            <>\n              <Title level={ 5 }>{ group.title }</Title>\n            </>\n          )\n        } }\n        groups={ groups }\n        itemRenderer={ props => <ReservationItem { ...props } /> }\n        items={ items }\n        lineHeight={ 60 }\n        onCanvasClick={ onCanvasClick }\n        onItemClick={ onItemClick }>\n        <TimelineHeaders>\n          <SidebarHeader>\n            { ({ getRootProps }) => {\n              return (\n                <div\n                  { ...getRootProps() }\n                  className=\"side-header\" />\n              )\n            } }\n          </SidebarHeader>\n          <DateHeader unit=\"primaryHeader\" />\n          <DateHeader\n            className=\"days\"\n            unit=\"day\" />\n        </TimelineHeaders>\n        <CursorMarker>\n          {\n            ({ styles, date }) => {\n              return (\n                <div style={ { ...styles, backgroundColor: \"rgba(136, 136, 136, 0.5)\", color: \"#888\" } }>\n                  <div className=\"rt-marker__label\">\n                    <div className=\"rt-marker__content\">\n                      { moment(date).format(\"DD MMM HH:mm\") }\n                    </div>\n                  </div>\n                </div>\n              )\n            }\n          }\n        </CursorMarker>\n      </Timeline>\n      <ReservationModal\n        close={ () => {\n          setReservation(undefined)\n          setReservationModalOpen(false)\n        } }\n        createReservation={ newReservationAction }\n        guests={ guests }\n        isOpen={ reservationModalOpen }\n        reauthenticate={ reauthenticate }\n        removeReservation={ removeReservationAction }\n        reservation={ reservation }\n        updateReservation={ updateReservationAction } />\n    </>\n  ) : <Empty />\n})","import { useEffect, useState } from \"react\"\nimport { Button, Drawer, Form, Input, Popconfirm, Spin } from \"antd\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { CloseOutlined, WarningOutlined } from \"@ant-design/icons\"\nimport { Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport { Store } from \"antd/lib/form/interface\"\nimport { SuiteForm } from \"../../lib/Types\"\n\ninterface Props {\n  close: () => void\n  createSuite: (variables: any) => void\n  deleteSuite: (suiteId: string) => void\n  loading: boolean\n  suite?: Suites_suites\n  updateSuite: (suiteId: string, variables: any) => void\n  visible: boolean\n}\n\nexport const SuiteDrawer = ({\n  close,\n  createSuite,\n  deleteSuite,\n  loading,\n  suite,\n  updateSuite,\n  visible\n}: Props) => {\n\n  const [ form ] = Form.useForm()\n\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\n\n  const initialValues: Store = {\n    number: suite?.number,\n    title: suite?.title\n  }\n\n  useEffect(() => {\n    if (visible === true) {\n      form.resetFields()\n    }\n  }, [ form, visible ])\n\n  const submitForm = () => {\n    form.validateFields()\n      .then(() => {\n        const formData: SuiteForm = form.getFieldsValue(true)\n        const variables = {\n          number: formData.number,\n          title: formData.title\n        }\n        if (suite === undefined) {\n          createSuite(variables)\n        } else {\n          updateSuite(suite.id, variables)\n        }\n      })\n      .catch(() => {\n        console.error(\"Form validation failed\");\n      })\n  }\n\n  const closeDrawer = (): void => {\n    if (form.isFieldsTouched()) {\n      setConfirmClose(true)\n    } else {\n      close()\n    }\n  }\n\n  return (\n    <Drawer\n      closeIcon={ (\n        <Popconfirm\n          onCancel={ () => setConfirmClose(false) }\n          onConfirm={ () => {\n            setConfirmClose(false)\n            close()\n          } }\n          placement=\"rightTop\"\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n          visible={ confirmClose }>\n          <CloseOutlined onClick={ closeDrawer } />\n        </Popconfirm>\n      ) }\n      footer={\n        <>\n          { suite !== undefined &&\n            <Popconfirm\n              cancelText=\"Ne\"\n              icon={ <WarningOutlined /> }\n              okText=\"Ano\"\n              onConfirm={ () => deleteSuite(suite.id) }\n              title=\"opravdu odstranit?\">\n              <Button\n                danger\n                style={ {\n                  float: \"left\"\n                } }\n                type=\"primary\">\n                Odstranit\n              </Button>\n            </Popconfirm>\n          }\n          <Button\n            onClick={ submitForm }\n            type=\"primary\">\n            { suite === undefined ? \"Vytvořit\" : \"Upravit\" }\n          </Button>\n        </>\n      }\n      footerStyle={ {\n        textAlign: \"right\"\n      } }\n      placement=\"left\"\n      title=\"Nové apartmá\"\n      visible={ visible }\n      width={ 500 }>\n      <Spin\n        size=\"large\"\n        spinning={ loading }\n        tip=\"Načítám...\">\n        <Form\n          form={ form }\n          initialValues={ initialValues }\n          layout=\"vertical\"\n          name=\"suite\">\n          <Form.Item\n            hasFeedback\n            label=\"Název\"\n            name=\"title\"\n            required\n            rules={ [ FormHelper.requiredRule ] }>\n            <Input placeholder=\"název apartmá\" />\n          </Form.Item>\n          <Form.Item\n            hasFeedback\n            label=\"Číslo\"\n            name=\"number\"\n            required\n            rules={ [\n              FormHelper.requiredRule,\n              {\n                message: \"zadejte číslo\",\n                pattern: /^[0-9]+$/\n              }\n            ] }>\n            <Input placeholder=\"číslo apartmá\" type=\"number\" />\n          </Form.Item>\n        </Form>\n      </Spin>\n    </Drawer>\n  )\n}","import { PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\n\r\ninterface Props {\r\n  onAdd: () => void\r\n}\r\n\r\nexport const AddSuite = ({\r\n  onAdd\r\n}: Props) => {\r\n  return (\r\n    <Button\r\n      icon={ <PlusCircleOutlined /> }\r\n      onClick={ onAdd }\r\n      type=\"primary\">\r\n      Přidat apartmá\r\n    </Button>\r\n  )\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_SUITE = gql`\r\n  mutation CreateSuite($data: SuiteInput!) {\r\n    createSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_SUITE = gql`\r\n  mutation UpdateSuite($data: SuiteInput!) {\r\n    updateSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_SUITE = gql`\r\n  mutation DeleteSuite($suiteId: ID!) {\r\n    deleteSuite(suiteId: $suiteId) {\r\n      suite {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport { HomeOutlined } from \"@ant-design/icons\"\nimport { Avatar, Button, List, message } from \"antd\"\nimport { SuiteDrawer } from \"../SuiteDrawer\"\nimport { Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport \"./styles.css\"\nimport { AddSuite } from \"./components/AddSuite\"\nimport { ApolloError, useMutation } from \"@apollo/client\"\nimport { DeleteSuite, DeleteSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/DeleteSuite\"\nimport { CREATE_SUITE, DELETE_SUITE, UPDATE_SUITE } from \"../../lib/graphql/mutations/Suite\"\nimport { CreateSuite, CreateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/CreateSuite\"\nimport { errorMessages } from \"../../lib/Constants\"\nimport { UpdateSuite, UpdateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/UpdateSuite\"\n\ninterface Props {\n  reauthenticate: (callback: () => void, errorHandler?: (reason: ApolloError) => void) => void\n  refetchData: () => void\n  setPageTitle: (title: string) => void\n  suitesData?: (Suites_suites | null)[] | null\n}\n\nexport const Suites = withRouter(({\n  reauthenticate,\n  refetchData,\n  setPageTitle,\n  suitesData\n}: RouteComponentProps & Props) => {\n\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\n  const [ activeSuite, setActiveSuite ] = useState<Suites_suites>()\n  const [ suites, setSuites ] = useState<Suites_suites[]>([])\n\n  const [ createSuite, { loading: createLoading } ] = useMutation<CreateSuite, CreateSuiteVariables>(CREATE_SUITE)\n  const [ updateSuite, { loading: updateLoading } ] = useMutation<UpdateSuite, UpdateSuiteVariables>(UPDATE_SUITE)\n  const [ deleteSuite, { loading: deleteLoading } ] = useMutation<DeleteSuite, DeleteSuiteVariables>(DELETE_SUITE)\n\n  const errorHandler = (reason: ApolloError, callback: () => void) => {\n    if (reason.message === errorMessages.signatureExpired) {\n      reauthenticate(callback, (reason: ApolloError) => message.error(reason.message))\n    } else {\n      message.error(reason.message)\n    }\n  }\n\n  const createSuiteAction = (variables: any) => {\n    const handler =\n      () => createSuite({ variables: { data: { ...variables } } })\n        .then(() => {\n          setDrawerVisible(false)\n          refetchData()\n          message.success(\"Apartmá byla vytvořena\")\n        })\n    handler().catch((reason: ApolloError) => errorHandler(reason, handler))\n  }\n\n  const updateSuiteAction = (suiteId: string, variables: any) => {\n    const handler =\n      () => updateSuite({ variables: { data: { id: suiteId, ...variables } } })\n        .then(() => {\n          setDrawerVisible(false)\n          refetchData()\n          message.success(\"Apartmá byla aktualizována\")\n        })\n    handler().catch((reason: ApolloError) => errorHandler(reason, handler))\n  }\n\n  const deleteSuiteAction = (suiteId: string) => {\n    const handler =\n      () => deleteSuite({ variables: { suiteId } })\n        .then(() => {\n          setDrawerVisible(false)\n          refetchData()\n          message.success(\"Apartmá byla odstraněna\")\n        })\n    handler().catch((reason: ApolloError) => errorHandler(reason, handler))\n  }\n\n  useEffect(() => {\n    setPageTitle(\"Apartmá\")\n  }, [ setPageTitle ])\n\n  useEffect(() => {\n    const suitesList: Suites_suites[] = []\n    suitesData?.forEach((suite: Suites_suites | null) => {\n      if (suite !== null) {\n        suitesList.push(suite)\n      }\n    })\n    setSuites(suitesList)\n  }, [ suitesData ])\n\n  return (\n    <>\n      <List\n        bordered={ true }\n        className=\"suites-list\"\n        dataSource={ suites }\n        footer={\n          <AddSuite\n            onAdd={ () => {\n              setActiveSuite(undefined)\n              setDrawerVisible(true)\n            } } />\n        }\n        header={ <h4>Seznam apartmá</h4> }\n        itemLayout=\"horizontal\"\n        renderItem={ suite => (\n          <List.Item\n            actions={ [\n              <Button\n                key=\"edit\"\n                onClick={ () => {\n                  setActiveSuite(suite)\n                  setDrawerVisible(true)\n                } }\n                type=\"link\">\n                upravit\n              </Button>\n            ] }>\n            <List.Item.Meta\n              avatar={\n                <Avatar gap={ 4 } size=\"large\">\n                  <HomeOutlined />\n                </Avatar>\n              }\n              description={ `číslo pokoje - ${ suite.number }` }\n              title={ suite.title } />\n          </List.Item>\n        ) } />\n      <SuiteDrawer\n        close={ () => setDrawerVisible(false) }\n        createSuite={ createSuiteAction }\n        deleteSuite={ deleteSuiteAction }\n        loading={ createLoading || updateLoading || deleteLoading }\n        suite={ activeSuite }\n        updateSuite={ updateSuiteAction }\n        visible={ drawerVisible } />\n    </>\n  )\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const HOME_PAGE = gql`\r\n  query HomePage {\r\n    guests {\r\n      age\r\n      addressMunicipality\r\n      addressPsc\r\n      addressStreet\r\n      citizenship\r\n      email\r\n      gender\r\n      identity\r\n      id\r\n      name\r\n      phoneNumber\r\n      surname\r\n      visaNumber\r\n    }\r\n    reservations {\r\n      fromDate\r\n      id\r\n      guest {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      meal\r\n      notes\r\n      purpose\r\n      roommates {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n      toDate\r\n      type\r\n    }\r\n    suites {\r\n      id\r\n      number\r\n      title\r\n    }\r\n    whoami {\r\n      username\r\n    }\r\n  }\r\n`","import { Affix, Layout, message, Skeleton } from \"antd\"\nimport { useState } from \"react\"\nimport { Route, RouteComponentProps, Switch, withRouter } from \"react-router-dom\"\nimport { Header } from \"../Header\"\nimport { Guests } from \"../Guests\"\nimport { Login } from \"../Login\"\nimport { NotFound } from \"../NotFound\"\nimport { Reservations } from \"../Reservations\"\nimport { Suites } from \"../Suites\"\nimport { ApolloError, ApolloQueryResult, useMutation, useQuery } from \"@apollo/client\"\nimport Title from \"antd/lib/typography/Title\"\nimport { RefreshToken, RefreshTokenVariables } from \"../../lib/graphql/mutations/User/__generated__/RefreshToken\"\nimport { RevokeToken, RevokeTokenVariables } from \"../../lib/graphql/mutations/User/__generated__/RevokeToken\"\nimport { TOKEN_REFRESH, TOKEN_REVOKE } from \"../../lib/graphql/mutations/User\"\nimport { errorMessages, refreshTokenName, tokenName } from \"../../lib/Constants\"\nimport { useCallback } from \"react\"\nimport { UrlHelper } from \"../../lib/components/UrlHelper\"\nimport { User } from \"../../lib/Types\"\nimport { HOME_PAGE } from \"../../lib/graphql/queries/App\"\nimport { HomePage } from \"../../lib/graphql/queries/App/__generated__/HomePage\"\n\nexport const App = withRouter(({ history }: RouteComponentProps) => {\n\n  const [ user, setUser ] = useState<User>()\n  const [ pageTitle, setPageTitle ] = useState<string>(\"Načítám...\")\n  const [ initialLoading, setInitialLoading ] = useState<boolean>(true)\n\n  const [ refreshToken, { loading: tokenLoading } ] = useMutation<RefreshToken, RefreshTokenVariables>(TOKEN_REFRESH, {\n    onCompleted: (token: RefreshToken) => {\n      if (token.refreshToken !== null) {\n        localStorage.setItem(tokenName, token.refreshToken.token)\n        localStorage.setItem(refreshTokenName, token.refreshToken.refreshToken)\n        setUser({ username: token.refreshToken.payload.username })\n        // for debugging only\n        localStorage.setItem(\"tokenExpiresIn\", token.refreshToken.payload.exp.toString())\n        localStorage.setItem(\"refreshTokenExpiresIn\", token.refreshToken.refreshExpiresIn.toString())\n        // --- / ---\n      }\n    }\n  })\n\n  const redirectToLogin = useCallback(() => {\n    setUser(undefined)\n    setInitialLoading(false)\n    history.push(`/login?next=${ UrlHelper.getReferrer() }`)\n  }, [ history ])\n\n  const reauthenticate = (callback: () => void, errorHandler?: (reason: ApolloError) => void) => {\n    const token = localStorage.getItem(refreshTokenName)\n    if (token === null) {\n      redirectToLogin()\n    } else {\n      refreshToken({ variables: { refreshToken: token } })\n        .then(callback)\n        .catch((reason: ApolloError) => {\n          if (reason.message === errorMessages.refreshTokenExpired) {\n            redirectToLogin()\n          } else {\n            if (errorHandler !== undefined) {\n              errorHandler(reason)\n            } else {\n              console.error(reason.message)\n            }\n          }\n        })\n    }\n  }\n\n  const onDataFetch = (data: HomePage) => {\n    if (data.whoami !== null) {\n      setUser({ username: data.whoami.username })\n    }\n    setInitialLoading(false)\n  }\n\n  const onDataRefetch = (value: ApolloQueryResult<HomePage>) => onDataFetch(value.data)\n\n  const { loading, data, refetch } = useQuery<HomePage>(HOME_PAGE, {\n    onCompleted: onDataFetch,\n    onError: (reason: ApolloError) => {\n      if (\n        reason.message.indexOf(errorMessages.signatureExpired) !== -1 // auth token expired\n        || reason.message.indexOf(errorMessages.unauthorized) !== -1 // auth token not sent\n      ) {\n        reauthenticate(() => refetch().then(onDataRefetch), (reason: ApolloError) => message.error(reason.message))\n      } else {\n        message.error(reason.message)\n      }\n    }\n  })\n\n  const [ revokeToken, { loading: revokeLoading } ] = useMutation<RevokeToken, RevokeTokenVariables>(TOKEN_REVOKE)\n\n  const logout = (): void => {\n    const refreshToken = localStorage.getItem(refreshTokenName)\n    if (refreshToken !== null) {\n      revokeToken({ variables: { refreshToken } })\n        .then(() => {\n          setUser(undefined)\n          localStorage.removeItem(tokenName)\n          localStorage.removeItem(refreshTokenName)\n        })\n        .finally(() => redirectToLogin())\n    } else {\n      redirectToLogin()\n    }\n  }\n\n  return (\n    <Layout id=\"app\">\n      <Affix offsetTop={ 0 } className=\"app__affix-header\">\n        <Header logout={ logout } user={ user } />\n      </Affix>\n      <Layout.Header>\n        <Title level={ 3 }>{ pageTitle }</Title>\n      </Layout.Header>\n      <Layout.Content className=\"app-content\">\n        <Skeleton\n          active\n          loading={\n            loading\n            || initialLoading\n            || revokeLoading\n            || tokenLoading\n          }\n          paragraph={ { rows: 5 } }>\n          <Switch>\n            <Route exact path=\"/\">\n              <Reservations\n                guests={ data?.guests }\n                reauthenticate={ reauthenticate }\n                reservationsData={ data?.reservations }\n                setPageTitle={ setPageTitle }\n                suitesData={ data?.suites } />\n            </Route>\n            <Route exact path=\"/apartma\">\n              <Suites\n                reauthenticate={ reauthenticate }\n                refetchData={ refetch }\n                setPageTitle={ setPageTitle }\n                suitesData={ data?.suites } />\n            </Route>\n            <Route exact path=\"/guests\">\n              <Guests\n                guestsData={ data?.guests }\n                reauthenticate={ reauthenticate }\n                setPageTitle={ setPageTitle }\n                setUser={ setUser }\n                user={ user } />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login\n                refetch={ refetch }\n                setPageTitle={ setPageTitle }\n                setUser={ setUser } />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </Skeleton>\n      </Layout.Content>\n    </Layout>\n  )\n})","import ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport './index.css'\nimport { getCookie } from \"./lib/Cookie\"\nimport moment from 'moment'\nimport 'moment/locale/cs'\nimport { ApolloClient, ApolloLink, ApolloProvider, HttpLink, InMemoryCache } from '@apollo/client'\nimport { App } from './sections/App'\nimport { ConfigProvider } from 'antd'\nimport csCZ from \"antd/lib/locale/cs_CZ\"\n\nmoment.locale(\"cs\")\n\nconst httpLink = new HttpLink({\n  uri: '/api'\n});\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  const token = localStorage.getItem(\"token\")\n  const csrftoken = getCookie(\"csrftoken\")\n  operation.setContext(({ headers = {} }) => ({\n    headers: {\n      ...headers,\n      \"Authorization\": token === null ? \"\" : `JWT ${ token }`,\n      \"X-CSRFToken\": csrftoken === null ? \"\" : csrftoken\n    }\n  }));\n  return forward(operation);\n})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          guests: {\n            merge: false\n          },\n          reservations: {\n            merge: false\n          },\n          suiteReservations: {\n            merge: false\n          },\n          suites: {\n            merge: false\n          }\n        }\n      },\n      Reservation: {\n        fields: {\n          roommates: { merge: false }\n        }\n      }\n    }\n  }),\n  link: authMiddleware.concat(httpLink),\n})\n\nReactDOM.render(\n  <ApolloProvider client={ client }>\n    <ConfigProvider locale={ csCZ }>\n      <Router>\n        <App />\n      </Router>\n    </ConfigProvider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}