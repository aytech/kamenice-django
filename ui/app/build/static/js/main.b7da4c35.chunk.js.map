{"version":3,"sources":["lib/Cookie.ts","sections/Header/assets/mill.svg","sections/Header/components/MenuItems.tsx","lib/graphql/mutations/User/index.ts","lib/components/ApolloHelper.ts","sections/Header/index.tsx","lib/graphql/queries/Guests/index.ts","lib/components/FormHelper.ts","lib/components/GuestFormHelper.ts","lib/graphql/mutations/Guest/index.ts","sections/GuestDrawer/index.tsx","lib/components/Colors.ts","sections/Guests/components/GuestItem.tsx","sections/Guests/index.tsx","lib/graphql/queries/User/index.ts","sections/Login/index.tsx","sections/NotFound/index.tsx","lib/Types.ts","sections/GuestDrawerSmall/index.tsx","lib/graphql/queries/Suites/index.ts","lib/components/ReservationFormHelper.ts","lib/graphql/mutations/Reservation/index.ts","lib/Constants.ts","sections/ReservationModal/index.tsx","sections/Reservations/index.tsx","lib/graphql/mutations/Suite/index.ts","sections/SuiteDrawer/index.tsx","sections/Suites/index.tsx","sections/App/index.tsx","index.tsx"],"names":["getCookie","name","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","MenuItems","logout","mode","Item","icon","BookOutlined","to","IdcardOutlined","HomeOutlined","LogoutOutlined","onClick","JWT_TOKEN_LOGIN","gql","JWT_TOKEN_LOGOUT","ApolloHelper","onQueryError","reason","text","console","error","message","undefined","Header","withRouter","history","location","isAuthenticated","setIsAuthenticated","useMutation","onCompleted","setTimeout","push","pathname","onError","loading","spinning","tip","className","src","logo","alt","GUESTS_FULL","FormHelper","requiredRule","required","value","GuestFormHelper","ageOptions","label","getGuestResponseErrorList","errorString","Array","from","Object","values","JSON","parse","replaceAll","list","phoneCodeRequiredRules","pattern","transform","requiredAlphaRules","requiredNumericRules","CREATE_GUEST","CREATE_GUEST_BASIC","UPDATE_GUEST","DELETE_GUEST","GuestDrawer","close","guest","refetch","visible","Form","useForm","form","data","success","createGuest","surname","resetFields","updateGuest","useState","confirmClose","setConfirmClose","initialValues","age","address","municipality","addressMunicipality","psc","addressPsc","street","addressStreet","citizenship","selected","email","gender","identity","phone","phoneNumber","visa","visaNumber","emailPrefixIcon","noStyle","MailOutlined","useEffect","closeIcon","onCancel","onConfirm","placement","title","CloseOutlined","isFieldsTouched","width","footer","validateFields","then","formData","getFieldsValue","variables","new","id","catch","type","footerStyle","padding","textAlign","layout","level","hasFeedback","rules","placeholder","addonBefore","options","Option","Group","compact","style","marginBottom","Colors","colors","getRandomColor","Math","floor","random","GuestItem","deleteGuest","openGuestDrawer","selectGuest","actions","cancelText","WarningOutlined","okText","Meta","avatar","gap","size","backgroundColor","toUpperCase","description","Guests","drawerVisible","setDrawerVisible","guests","setGuests","selectedGuest","setSelectedGuest","useLazyQuery","getData","queryLoading","queryData","deleteLoading","deleteData","guestsData","forEach","Content","bordered","dataSource","PlusCircleOutlined","header","itemLayout","renderItem","guestId","USER","labelCol","lg","md","sm","wrapperCol","tailLayout","offset","span","xs","Login","spinnerTip","setSpinnerTip","referrer","setReferrer","urlParts","search","tokenAuth","getToken","loginLoading","useQuery","whoami","userLoading","userRefetch","onFinish","password","username","htmlType","NotFound","status","subTitle","extra","Reservation","key","GuestDrawerSmall","open","SUITES","SUITES_WITH_RESERVATIONS","ReservationFormHelper","mealOptions","reservationOptions","getRequiredRule","guestValidators","validator","_rule","roommates","getFieldValue","Promise","resolve","duplicate","filter","reject","Error","roommateValidators","duplicates","CREATE_RESERVATION","DELETE_RESERVATION","UPDATE_RESERVATION","dateFormat","ReservationModal","isOpen","reservation","createReservation","updateReservation","deleteReservation","deleteConfirmVisible","setDeleteConfirmVisible","guestOptions","setGuestOptions","dates","fromDate","toDate","meal","notes","purpose","roommate","closeModal","submitForm","format","suite","String","footerButtons","reservationId","danger","CloseCircleOutlined","EditOutlined","RangePicker","showTime","filterOption","input","option","match","toString","toLowerCase","indexOf","showSearch","List","fields","add","remove","map","fieldKey","restField","align","MinusCircleOutlined","disabled","block","PlusOutlined","TextArea","allowClear","Reservations","getReservationColor","reservationType","groups","setGroups","guestDrawerOpen","setGuestDrawerOpen","items","setItems","reservationModalOpen","setReservationModalOpen","selectedReservation","setSelectedReservation","suites","reservations","stackItems","color","end_time","moment","group","itemProps","background","border","start_time","canChangeGroup","canMove","canResize","defaultTimeEnd","defaultTimeStart","groupRenderer","itemRenderer","item","itemContext","getItemProps","getResizeProps","leftResizeProps","left","rightResizeProps","right","useResizeHandle","content","fontWeight","maxHeight","dimensions","height","strong","lineHeight","onCanvasClick","groupId","time","selectedGroup","find","onItemClick","itemId","_e","entry","getRootProps","unit","styles","date","CREATE_SUITE","UPDATE_SUITE","DELETE_SUITE","SuiteDrawer","createSuite","updateSuite","number","Suites","activeSuite","setActiveSuite","setSuites","deleteSuite","removeLoading","removeData","suitesData","editSuite","suiteId","removeSuite","active","App","locale","csCZ","offsetTop","exact","path","httpLink","HttpLink","uri","authMiddleware","ApolloLink","operation","forward","authtoken","csrftoken","setContext","headers","authorization","client","ApolloClient","cache","InMemoryCache","typePolicies","Query","merge","suiteReservations","link","concat","ReactDOM","render","ApolloProvider","getElementById"],"mappings":"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","file":"static/js/main.b7da4c35.chunk.js","sourcesContent":["export const getCookie = (name: string): string | null => {\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[ i ].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        return decodeURIComponent(cookie.substring(name.length + 1));\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport const setCookie = (name: string, value: string): void => {\r\n  if (document.cookie && document.cookie !== '') {\r\n    document.cookie = `${ name }=${ value };path=/`\r\n  }\r\n}\r\n\r\nexport const deleteCookie = (name: string): void => {\r\n  const cookie = getCookie(name)\r\n  if (cookie !== null) {\r\n    setCookie(name, `${ cookie };expires=Thu, 01 Jan 1970 00:00:01 GMT`)\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/mill.1f872c17.svg\";","import { BookOutlined, HomeOutlined, IdcardOutlined, LogoutOutlined } from \"@ant-design/icons\"\r\nimport { Menu } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\ninterface Props {\r\n  logout: () => void\r\n}\r\n\r\nexport const MenuItems = ({ logout }: Props) => {\r\n  return (\r\n    <Menu mode=\"horizontal\">\r\n      <Menu.Item key=\"reservation\" icon={ <BookOutlined /> }>\r\n        <Link to=\"/\">Rezervace</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"guests\" icon={ <IdcardOutlined /> }>\r\n        <Link to=\"/guests\">Hosté</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"suites\" icon={ <HomeOutlined /> }>\r\n        <Link to=\"/apartma\">Apartmá</Link>\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        key=\"logout\"\r\n        icon={ <LogoutOutlined /> }\r\n        onClick={ logout }>\r\n        Odhlásit\r\n      </Menu.Item>\r\n    </Menu >\r\n  )\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const JWT_TOKEN_LOGIN = gql`\r\n  mutation RetrieveToken($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  } \r\n`\r\n\r\nexport const JWT_TOKEN_LOGOUT = gql`\r\n  mutation DeleteToken {\r\n    deleteToken {\r\n      deleted\r\n    }\r\n  } \r\n`","import { ApolloError } from \"@apollo/client\";\r\nimport { message } from \"antd\";\r\n\r\ninterface Props {\r\n  onQueryError: (reason: ApolloError, text?: string) => void\r\n}\r\n\r\nexport const ApolloHelper: Props = {\r\n  onQueryError: (reason, text) => {\r\n    console.error(reason.message);\r\n    if (text === undefined) {\r\n      text = \"Chyba serveru, kontaktujte správce\"\r\n    }\r\n    message.error(text)\r\n  }\r\n}","import { Link, RouteComponentProps, withRouter } from 'react-router-dom'\nimport './styles.css'\nimport logo from './assets/mill.svg'\nimport { MenuItems } from './components/MenuItems'\nimport { PageHeader, Spin } from 'antd'\nimport { useMutation } from '@apollo/client'\nimport { JWT_TOKEN_LOGOUT } from '../../lib/graphql/mutations/User'\nimport { DeleteToken } from '../../lib/graphql/mutations/User/__generated__/DeleteToken'\nimport { ApolloHelper } from '../../lib/components/ApolloHelper'\n\ninterface Props {\n  isAuthenticated: boolean,\n  setIsAuthenticated: (status: boolean) => void\n}\n\nexport const Header = withRouter(({\n  history,\n  location,\n  isAuthenticated,\n  setIsAuthenticated\n}: RouteComponentProps & Props) => {\n\n  const redirectAfterLogout = () => {\n    // Delay to next tick so that cookie is cleared\n    setTimeout(() => {\n      setIsAuthenticated(false)\n      history.push(`/login?next=${ location.pathname }`)\n    })\n  }\n\n  const [ logout, { loading } ] = useMutation<DeleteToken>(JWT_TOKEN_LOGOUT, {\n    onCompleted: redirectAfterLogout,\n    onError: ApolloHelper.onQueryError\n  })\n\n  return (\n    <Spin\n      spinning={ loading }\n      tip=\"Odhlašuji...\">\n      <PageHeader className=\"app-header\">\n        <div className=\"app-header__container\">\n          <div className=\"app-header__logo\">\n            <Link to=\"/\">\n              <img src={ logo } alt=\"Kamenice logo\" />\n            </Link>\n          </div>\n          {\n            isAuthenticated === true &&\n            <div className=\"app-header__menu-section\">\n              <MenuItems logout={ logout } />\n            </div>\n          }\n        </div>\n      </PageHeader>\n    </Spin>\n  )\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const GUESTS = gql`\r\n  query Guests {\r\n    guests {\r\n      id\r\n      name\r\n      surname\r\n    }\r\n  }\r\n`\r\n\r\nexport const GUESTS_FULL = gql`\r\n  query GuestsFull {\r\n    guests {\r\n      age\r\n      addressMunicipality\r\n      addressPsc\r\n      addressStreet\r\n      citizenship\r\n      email\r\n      gender\r\n      identity\r\n      id\r\n      name\r\n      phoneNumber\r\n      surname\r\n      visaNumber\r\n    }\r\n  }\r\n`","import { Rule } from \"antd/lib/form\"\r\n\r\ninterface IFormHelper {\r\n  requiredRule: Rule\r\n  trim: (value: string | undefined) => string | undefined\r\n}\r\nexport const FormHelper: IFormHelper = {\r\n  requiredRule: {\r\n    required: true,\r\n    message: \"pole je povinné\"\r\n  },\r\n  trim: (value: string | undefined): string | undefined => {\r\n    return value === undefined ? value : value.trim()\r\n  }\r\n}","import { Rule } from \"antd/lib/form\";\nimport { OptionsType } from \"../Types\";\nimport { FormHelper } from \"./FormHelper\";\n\ninterface IGuestFormHelper {\n  ageOptions: OptionsType[]\n  getGuestResponseErrorList: (errorString: string) => Array<string>\n  phoneCodeRequiredRules: Rule[]\n  requiredAlphaRules: Rule[]\n  requiredNumericRules: Rule[]\n}\n\nexport const GuestFormHelper: IGuestFormHelper = {\n  ageOptions: [\n    {\n      label: \"12+\",\n      value: \"YOUNG\"\n    },\n    {\n      label: \"3-12 let\",\n      value: \"CHILD\"\n    },\n    {\n      label: \"Do 3 let\",\n      value: \"INFANT\"\n    },\n    {\n      label: \"Dospělý\",\n      value: \"ADULT\"\n    }\n  ],\n  getGuestResponseErrorList: (errorString: string) => {\n    try {\n      return Array.from(\n        Object.values(\n          JSON.parse(errorString.replaceAll(\"'\", \"\\\"\"))\n        ), ((list: any) => list[ 0 ])\n      )\n    } catch (error) {\n      return [ \"Chyba serveru, kontaktujte správce\" ]\n    }\n  },\n  phoneCodeRequiredRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte kód ve formátu 420, +420 nebo (420)\",\n      pattern: /^\\+?\\(?[0-9]*\\)?$/,\n      transform: FormHelper.trim\n    }\n  ],\n  requiredAlphaRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte pouze text\",\n      pattern: /^([A-Za-z\\sáÁčČďĎéÉěĚíÍňŇřŘšŠťŤúÚůŮýÝžŽóÓ])+$/,\n      transform: FormHelper.trim\n    }\n  ],\n  requiredNumericRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte pouze čísla\",\n      pattern: /^[\\d\\s]+$/,\n      transform: FormHelper.trim\n    }\n  ]\n}","import { gql } from \"@apollo/client\"\n\nexport const CREATE_GUEST = gql`\n  mutation CreateGuest($data: GuestInput!) {\n    createGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const CREATE_GUEST_BASIC = gql`\n  mutation CreateGuestBasic($data: GuestInput!) {\n    createGuest(data: $data) {\n      guest {\n        email\n        name\n        surname\n      }\n    }\n  }\n`\n\nexport const UPDATE_GUEST = gql`\n  mutation UpdateGuest($data: GuestInput!) {\n    updateGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const DELETE_GUEST = gql`\n  mutation DeleteGuest($guestId: ID!) {\n    deleteGuest(guestId: $guestId) {\n      guest {\n        id\n      }\n    }\n  }\n`","import { useState } from \"react\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm, Select } from \"antd\"\r\nimport { CloseOutlined, MailOutlined } from \"@ant-design/icons\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { Store } from \"rc-field-form/lib/interface\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport \"./styles.css\"\r\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\r\nimport { CREATE_GUEST, UPDATE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuest, CreateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuest\"\r\nimport { GuestsFull, GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { Guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { UpdateGuest, UpdateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/UpdateGuest\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  guest: GuestsFull_guests | null\r\n  refetch: ((variables?: Partial<OperationVariables>) => Promise<ApolloQueryResult<Guests | GuestsFull>>) | undefined\r\n  visible: boolean\r\n}\r\n\r\nexport const GuestDrawer = ({\r\n  close,\r\n  guest,\r\n  refetch,\r\n  visible\r\n}: Props) => {\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ createGuest ] = useMutation<CreateGuest, CreateGuestVariables>(CREATE_GUEST, {\r\n    onCompleted: (data: CreateGuest) => {\r\n      message.success(`Host ${ data.createGuest?.guest?.name } ${ data.createGuest?.guest?.surname } byl přidán`)\r\n      if (refetch !== undefined) {\r\n        refetch()\r\n      }\r\n      form.resetFields()\r\n      close()\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n  const [ updateGuest ] = useMutation<UpdateGuest, UpdateGuestVariables>(UPDATE_GUEST, {\r\n    onCompleted: (data: UpdateGuest) => {\r\n      message.success(`Host ${ data.updateGuest?.guest?.name } ${ data.updateGuest?.guest?.surname } byl upraven`)\r\n      form.resetFields()\r\n      close()\r\n    },\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n  const initialValues: Store = {\r\n    age: guest?.age,\r\n    address: {\r\n      municipality: guest?.addressMunicipality,\r\n      psc: guest?.addressPsc,\r\n      street: guest?.addressStreet\r\n    },\r\n    citizenship: {\r\n      selected: guest?.citizenship\r\n    },\r\n    email: guest?.email,\r\n    gender: guest?.gender,\r\n    identity: guest?.identity,\r\n    name: guest?.name,\r\n    phone: guest?.phoneNumber,\r\n    surname: guest?.surname,\r\n    visa: guest?.visaNumber\r\n  }\r\n  const emailPrefixIcon = (\r\n    <Form.Item name=\"email-prefix\" noStyle>\r\n      <MailOutlined />\r\n    </Form.Item>\r\n  )\r\n\r\n  const closeDrawer = (): void => {\r\n    if (form.isFieldsTouched()) {\r\n      setConfirmClose(true)\r\n    } else {\r\n      close()\r\n    }\r\n  }\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          age: formData.age,\r\n          addressMunicipality: formData.address?.municipality,\r\n          addressPsc: formData.address?.psc,\r\n          addressStreet: formData.address?.street,\r\n          citizenship: formData.citizenship?.selected === undefined ? formData.citizenship?.new : formData.citizenship.selected,\r\n          email: formData.email,\r\n          gender: formData.gender,\r\n          identity: formData.identity,\r\n          name: formData.name,\r\n          phoneNumber: formData.phone,\r\n          surname: formData.surname,\r\n          visaNumber: formData.visa\r\n        }\r\n        if (guest === null) {\r\n          createGuest({ variables: { data: { ...variables } } })\r\n        } else {\r\n          updateGuest({ variables: { data: { id: guest.id, ...variables } } })\r\n        }\r\n      })\r\n      .catch(() => message.error(\"Formulář nelze odeslat, opravte prosím chyby\"))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true) {\r\n      form.resetFields()\r\n    }\r\n  }, [ form, visible ])\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ closeDrawer } />\r\n        </Popconfirm>\r\n      ) }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      width={ 500 }\r\n      visible={ visible }\r\n      footer={\r\n        <>\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            { guest === null ? \"Vytvořit\" : \"Upravit\" }\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        padding: \"16px 20px\",\r\n        textAlign: \"right\"\r\n      } }>\r\n      <Form\r\n        form={ form }\r\n        initialValues={ initialValues }\r\n        layout=\"vertical\"\r\n        name=\"guest\">\r\n        <Title level={ 5 }>Osobní údaje</Title>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Jméno\"\r\n          name=\"name\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Jméno\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Příjmení\"\r\n          name=\"surname\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Příjmení\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Číslo OP\"\r\n          name=\"identity\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input placeholder=\"číslo občanského průkazu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Telefonní Číslo\"\r\n          name=\"phone\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input placeholder=\"číslo\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"E-Mail\"\r\n          name=\"email\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input\r\n            addonBefore={ emailPrefixIcon }\r\n            placeholder=\"e-mail\"\r\n            type=\"email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Věk\"\r\n          name=\"age\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Select\r\n            options={ GuestFormHelper.ageOptions }\r\n            placeholder=\"vyberte ze seznamu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Pohlaví\"\r\n          name=\"gender\">\r\n          <Select\r\n            placeholder=\"vyberte ze seznamu\">\r\n            <Select.Option value=\"M\">Muž</Select.Option>\r\n            <Select.Option value=\"F\">Žena</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Číslo viza\"\r\n          name=\"visa\">\r\n          <Input placeholder=\"číslo visa\" />\r\n        </Form.Item>\r\n        <Title level={ 5 }>Trvalé bydliště</Title>\r\n        <Form.Item\r\n          label=\"Ulice\"\r\n          name={ [ \"address\", \"street\" ] }>\r\n          <Input placeholder=\"ulice\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"PSČ/Obec\">\r\n          <Input.Group compact>\r\n            <Form.Item\r\n              style={ { marginBottom: 0, width: \"50%\" } }\r\n              name={ [ \"address\", \"psc\" ] }>\r\n              <Input placeholder=\"PSČ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={ { marginBottom: 0, width: \"50%\" } }\r\n              name={ [ \"address\", \"municipality\" ] }>\r\n              <Input placeholder=\"Obec\" />\r\n            </Form.Item>\r\n          </Input.Group>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Občanství\">\r\n          <Input.Group compact>\r\n            <Form.Item\r\n              style={ { width: \"50%\" } }\r\n              name={ [ \"citizenship\", \"selected\" ] }>\r\n              <Select style={ { width: \"100%\" } } placeholder=\"ze seznamu\">\r\n                <Select.Option value=\"cze\">CZE</Select.Option>\r\n                <Select.Option value=\"sk\">SK</Select.Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={ { width: \"50%\" } }\r\n              name={ [ \"citizenship\", \"new\" ] }>\r\n              <Input placeholder=\"ručně\" />\r\n            </Form.Item>\r\n          </Input.Group>\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  )\r\n}","interface Props {\r\n  colors: string[]\r\n  getRandomColor: () => string\r\n}\r\n\r\nexport const Colors: Props = {\r\n  colors: [\r\n    \"#f5222d\", // red\r\n    \"#fa541c\", // volcano\r\n    \"#fa8c16\", // orange\r\n    \"#faad14\", // gold\r\n    \"#fadb14\", // yellow\r\n    \"#a0d911\", // lime\r\n    \"#52c41a\", // green\r\n    \"#13c2c2\", // cyan\r\n    \"#1890ff\", // blue\r\n    \"#2f54eb\", // geekblue\r\n    \"#722ed1\", // purple\r\n    \"#eb2f96\", // magenta\r\n  ],\r\n  getRandomColor: () => {\r\n    return Colors.colors[ Math.floor(Math.random() * Colors.colors.length) ]\r\n  }\r\n}","import { WarningOutlined } from \"@ant-design/icons\"\r\nimport { Avatar, Button, List, Popconfirm } from \"antd\"\r\nimport { Colors } from \"../../../lib/components/Colors\"\r\nimport { GuestsFull_guests } from \"../../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\n\r\ninterface Props {\r\n  deleteGuest: (id: string) => void\r\n  guest: GuestsFull_guests\r\n  loading: boolean\r\n  openGuestDrawer: () => void\r\n  selectGuest: (guest: GuestsFull_guests) => void\r\n}\r\n\r\nexport const GuestItem = ({\r\n  deleteGuest,\r\n  guest,\r\n  loading,\r\n  openGuestDrawer,\r\n  selectGuest\r\n}: Props) => {\r\n  return (\r\n    <List.Item\r\n      actions={ [\r\n        <Button\r\n          key=\"edit\"\r\n          onClick={ () => {\r\n            selectGuest(guest)\r\n            openGuestDrawer()\r\n          } }\r\n          type=\"link\">\r\n          upravit\r\n        </Button>,\r\n        <Popconfirm\r\n          cancelText=\"Ne\"\r\n          icon={ <WarningOutlined /> }\r\n          okText=\"Ano\"\r\n          onConfirm={ () => deleteGuest(guest.id) }\r\n          title=\"opravdu odstranit?\">\r\n          <Button\r\n            key=\"remove\"\r\n            loading={ loading }\r\n            type=\"link\">\r\n            odstranit\r\n          </Button>\r\n        </Popconfirm>\r\n      ] }>\r\n      <List.Item.Meta\r\n        avatar={\r\n          <Avatar\r\n            gap={ 4 }\r\n            size=\"large\"\r\n            style={ {\r\n              backgroundColor: Colors.getRandomColor()\r\n            } }>\r\n            { guest.name.substring(0, 1).toUpperCase() }\r\n          </Avatar>\r\n        }\r\n        description={ guest.email }\r\n        title={ `${ guest.name } ${ guest.surname }` } />\r\n    </List.Item>\r\n  )\r\n}","import { useState } from \"react\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\nimport { Button, Layout, List, message } from \"antd\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { GuestsFull as GuestsData, GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { PlusCircleOutlined } from \"@ant-design/icons\"\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\"\r\nimport { GUESTS_FULL } from \"../../lib/graphql/queries/Guests\"\r\nimport { useEffect } from \"react\"\r\nimport { GuestDrawer } from \"../GuestDrawer\"\r\nimport { DELETE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { DeleteGuest, DeleteGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/DeleteGuest\"\r\nimport \"./styles.css\"\r\nimport { GuestItem } from \"./components/GuestItem\"\r\n\r\ninterface Props {\r\n  isAuthenticated: boolean\r\n}\r\n\r\nexport const Guests = withRouter(({ history, isAuthenticated }: RouteComponentProps & Props) => {\r\n\r\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\r\n  const [ guests, setGuests ] = useState<GuestsFull_guests[]>([])\r\n  const [ selectedGuest, setSelectedGuest ] = useState<GuestsFull_guests | null>(null)\r\n\r\n  const [ getData, { loading: queryLoading, data: queryData, refetch } ] = useLazyQuery<GuestsData>(GUESTS_FULL, {\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n  const [ deleteGuest, { loading: deleteLoading, data: deleteData } ] = useMutation<DeleteGuest, DeleteGuestVariables>(DELETE_GUEST, {\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated === true) {\r\n      getData()\r\n    } else {\r\n      history.push(\"/login?next=/guests\")\r\n    }\r\n  }, [ getData, history, isAuthenticated ])\r\n\r\n  useEffect(() => {\r\n    const guestsData: GuestsFull_guests[] = []\r\n    queryData?.guests?.forEach((guest: GuestsFull_guests | null) => {\r\n      if (guest !== null) {\r\n        guestsData.push(guest)\r\n      }\r\n    })\r\n    setGuests(guestsData)\r\n  }, [ queryData ])\r\n\r\n  useEffect(() => {\r\n    if (refetch !== undefined) {\r\n      refetch()\r\n    }\r\n  }, [ refetch, deleteData ])\r\n\r\n  return (\r\n    <Layout>\r\n      <Layout.Header>\r\n        <Title level={ 3 } className=\"home__listings-title\">\r\n          Hosté\r\n        </Title>\r\n      </Layout.Header>\r\n      <Layout.Content className=\"app-content\">\r\n        <List\r\n          bordered={ true }\r\n          className=\"guests-list\"\r\n          dataSource={ guests }\r\n          footer={\r\n            <Button\r\n              icon={ <PlusCircleOutlined /> }\r\n              onClick={ () => {\r\n                setSelectedGuest(null)\r\n                setDrawerVisible(true)\r\n              } }\r\n              type=\"primary\">\r\n              Přidat hosta\r\n            </Button>\r\n          }\r\n          header={ <h4>Seznam hostů</h4> }\r\n          itemLayout=\"horizontal\"\r\n          loading={ queryLoading }\r\n          renderItem={ (guest: GuestsFull_guests) => (\r\n            <GuestItem\r\n              deleteGuest={ (id: string) => deleteGuest({ variables: { guestId: id } }) }\r\n              guest={ guest }\r\n              loading={ deleteLoading }\r\n              openGuestDrawer={ () => setDrawerVisible(true) }\r\n              selectGuest={ setSelectedGuest } />\r\n          ) } />\r\n        <GuestDrawer\r\n          close={ () => setDrawerVisible(false) }\r\n          guest={ selectedGuest }\r\n          refetch={ refetch }\r\n          visible={ drawerVisible } />\r\n      </Layout.Content>\r\n    </Layout>\r\n  )\r\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const USER = gql`\r\n  query Whoami {\r\n    whoami {\r\n      username\r\n    }\r\n  }\r\n`","import { ApolloError, useMutation, useQuery } from \"@apollo/client\"\r\nimport { Button, Form, FormProps, Input, Layout, message, Spin } from \"antd\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport { JWT_TOKEN_LOGIN } from \"../../lib/graphql/mutations/User\"\r\nimport { RetrieveToken, RetrieveTokenVariables } from \"../../lib/graphql/mutations/User/__generated__/RetrieveToken\"\r\nimport { USER } from \"../../lib/graphql/queries/User\"\r\nimport { Whoami } from \"../../lib/graphql/queries/User/__generated__/Whoami\"\r\nimport \"./styles.css\"\r\n\r\ninterface Props {\r\n  isAuthenticated: boolean\r\n  setIsAuthenticated: (state: boolean) => void\r\n}\r\n\r\nconst layout: FormProps = {\r\n  labelCol: {\r\n    lg: 8,\r\n    md: 8,\r\n    sm: 8\r\n  },\r\n  wrapperCol: {\r\n    lg: 16,\r\n    md: 16,\r\n    sm: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    lg: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n    xs: {\r\n      offset: 0,\r\n      span: 24\r\n    }\r\n  },\r\n};\r\n\r\nexport const Login = withRouter(({\r\n  history,\r\n  isAuthenticated,\r\n  location,\r\n  setIsAuthenticated\r\n}: RouteComponentProps & Props) => {\r\n\r\n  const [ spinnerTip, setSpinnerTip ] = useState<string>(\"Načítám...\")\r\n  const [ referrer, setReferrer ] = useState<string>(\"/\")\r\n\r\n  useEffect(() => {\r\n    const urlParts = location.search.substring(1).split(\"=\")\r\n    if (urlParts.length >= 2 && urlParts[ 1 ] !== undefined) {\r\n      setReferrer(urlParts[ 1 ])\r\n    }\r\n  }, [ location ])\r\n\r\n  const [ getToken, { loading: loginLoading } ] = useMutation<RetrieveToken, RetrieveTokenVariables>(JWT_TOKEN_LOGIN, {\r\n    onCompleted: (data: RetrieveToken) => {\r\n      if (data.tokenAuth !== null) {\r\n        setIsAuthenticated(true)\r\n        history.push(referrer)\r\n      }\r\n    },\r\n    onError: (reason: ApolloError) => {\r\n      console.error(reason);\r\n      message.error(\"Nesprávné přihlašovací údaje\")\r\n    }\r\n  })\r\n\r\n  const { loading: userLoading, refetch: userRefetch } = useQuery<Whoami>(USER, {\r\n    onCompleted: (data: Whoami) => {\r\n      if (data.whoami !== null) {\r\n        setIsAuthenticated(true)\r\n        history.push(referrer)\r\n      }\r\n    },\r\n    onError: (reason: ApolloError) => {\r\n      console.error(reason)\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    // Refetch user when whoami query is cached\r\n    if (isAuthenticated === false) {\r\n      userRefetch()\r\n    }\r\n  }, [ isAuthenticated, userRefetch ])\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const submitForm = (data: { password: string, username: string }): void => {\r\n    setSpinnerTip(\"Přihlašování...\")\r\n    getToken({\r\n      variables: {\r\n        password: data.password.trim(),\r\n        username: data.username.trim()\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Layout.Header>\r\n        <Title level={ 3 } className=\"home__listings-title\">\r\n          Přihlášení\r\n        </Title>\r\n      </Layout.Header>\r\n      <Layout.Content>\r\n        <Spin spinning={ userLoading || loginLoading } tip={ spinnerTip }>\r\n          <Form\r\n            { ...layout }\r\n            className=\"login\"\r\n            form={ form }\r\n            name=\"login\"\r\n            onFinish={ submitForm }>\r\n            <Form.Item\r\n              label=\"Jméno\"\r\n              name=\"username\"\r\n              rules={ [ FormHelper.requiredRule ] }>\r\n              <Input type=\"text\" placeholder=\"uživatelské jméno\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Heslo\"\r\n              name=\"password\"\r\n              rules={ [ FormHelper.requiredRule ] }>\r\n              <Input type=\"password\" placeholder=\"heslo\" />\r\n            </Form.Item>\r\n            <Form.Item { ...tailLayout }>\r\n              <Button type=\"default\" htmlType=\"button\" onClick={ () => form.resetFields() }>\r\n                Reset\r\n              </Button>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Přihlásit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Spin>\r\n      </Layout.Content>\r\n    </Layout>\r\n  )\r\n})","import { Button, Layout, Result } from \"antd\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\n\r\nexport const NotFound = withRouter(({ history }: RouteComponentProps) => {\r\n  return (\r\n    <Layout>\r\n      <Layout.Content>\r\n        <Result\r\n          status=\"404\"\r\n          title=\"Jejda!\"\r\n          subTitle=\"hledáme vaší stránku... ale nemůžeme ji najít...\"\r\n          extra={\r\n            <Button\r\n              onClick={ () => history.push(\"/\") }\r\n              type=\"primary\">\r\n              Přejít na úvod\r\n            </Button>\r\n          } />\r\n      </Layout.Content>\r\n    </Layout>\r\n  )\r\n})","import { Moment } from \"moment\"\n\nexport type ReservationType = \"Závazná Rezervace\" | \"Nezávazná Rezervace\" | \"Aktuálně Ubytování\" | \"Obydlený Termín\"\nexport type ReservationTypeKey = \"BINDING\" | \"NONBINDING\" | \"ACCOMMODATED\" | \"INHABITED\"\n\nexport const Reservation = {\n  getType: (key: ReservationTypeKey): ReservationType => {\n    switch (key) {\n      case \"NONBINDING\":\n        return \"Nezávazná Rezervace\"\n      case \"ACCOMMODATED\":\n        return \"Aktuálně Ubytování\"\n      case \"INHABITED\":\n        return \"Obydlený Termín\"\n      case \"BINDING\":\n      default: return \"Závazná Rezervace\"\n    }\n  }\n}\n\nexport type DrawerType = \"guest\" | \"suite\"\nexport type ReservationMeal = \"BREAKFAST\" | \"HALFBOARD\" | \"NOMEAL\"\n\nexport interface ReservationRange {\n  from: Moment\n  to: Moment\n}\n\ninterface Address {\n  municipality?: string\n  psc?: number\n  street?: string\n}\n\ninterface Citizenship {\n  new?: string\n  selected?: string\n}\n\nexport interface GuestForm {\n  age: string,\n  address?: Address\n  citizenship?: Citizenship\n  email: string\n  gender?: string\n  id?: number\n  name: string\n  identity: string\n  phone: string\n  surname: string\n  visa?: string\n}\n\nexport interface GuestErrorResponse {\n  email: Array<string>\n  gender: Array<string>\n  identity: Array<string>\n  name: Array<string>\n  phone_number: Array<string>\n  surname: Array<string>\n}\n\nexport interface Guest {\n  id?: number | string\n  name: string\n  surname: string\n}\n\nexport interface Suite {\n  id: number | string\n  number?: number | null\n  title?: string\n}\n\nexport interface IReservation {\n  fromDate: Moment\n  guest?: Guest\n  meal?: ReservationMeal\n  id?: number\n  notes?: string | null\n  purpose?: string | null\n  roommates: Array<Guest>\n  suite: Suite\n  toDate: Moment\n  type: ReservationTypeKey\n}\n\nexport interface SuiteForm {\n  number: number,\n  title: string\n}\n\nexport interface OptionsType {\n  label: string,\n  value: string | number\n}\n\nexport interface CustomGroupFields {\n  number: number | null\n  title: string\n}\n\nexport interface CustomItemFields {\n  color?: string\n  type?: string\n}","import { CloseOutlined, MailOutlined } from \"@ant-design/icons\"\r\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm } from \"antd\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { useState } from \"react\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { CREATE_GUEST_BASIC } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuestBasic, CreateGuestBasicVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuestBasic\"\r\nimport { SuitesWithReservations } from \"../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  open: boolean\r\n  refetch: ((variables?: Partial<OperationVariables> | undefined) => Promise<ApolloQueryResult<SuitesWithReservations>>) | undefined\r\n}\r\n\r\nexport const GuestDrawerSmall = ({\r\n  close,\r\n  open,\r\n  refetch\r\n}: Props) => {\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n\r\n  const [ createGuest ] = useMutation<CreateGuestBasic, CreateGuestBasicVariables>(CREATE_GUEST_BASIC, {\r\n    onCompleted: (data: CreateGuestBasic) => {\r\n      message.success(`Host ${ data.createGuest?.guest?.name } ${ data.createGuest?.guest?.surname } byl přidán`)\r\n      if (refetch !== undefined) {\r\n        refetch()\r\n      }\r\n      close()\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          email: formData.email,\r\n          name: formData.name,\r\n          surname: formData.surname\r\n        }\r\n        createGuest({ variables: { data: variables } })\r\n      })\r\n      .catch(() => console.error(\"Formulář nelze odeslat\"))\r\n  }\r\n\r\n  const closeDrawer = (): void => {\r\n    if (form.isFieldsTouched()) {\r\n      setConfirmClose(true)\r\n    } else {\r\n      close()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ closeDrawer } />\r\n        </Popconfirm>\r\n      ) }\r\n      footer={\r\n        <>\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            Vytvořit\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        textAlign: \"right\"\r\n      } }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      visible={ open }\r\n      width={ 500 }>\r\n      <Form\r\n        form={ form }\r\n        layout=\"vertical\"\r\n        name=\"guest\">\r\n        <Title level={ 5 }>Osobní údaje</Title>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Jméno\"\r\n          name=\"name\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Jméno\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Příjmení\"\r\n          name=\"surname\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Příjmení\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"E-Mail\"\r\n          name=\"email\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input\r\n            addonBefore={ (\r\n              <Form.Item name=\"email-prefix\" noStyle>\r\n                <MailOutlined />\r\n              </Form.Item>\r\n            ) }\r\n            placeholder=\"e-mail\"\r\n            type=\"email\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  )\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const SUITES = gql`\r\n  query Suites {\r\n    suites {\r\n      id\r\n      title\r\n      number\r\n    }\r\n  }\r\n`\r\n\r\nexport const SUITES_WITH_RESERVATIONS = gql`\r\n  query SuitesWithReservations {\r\n    guests {\r\n      id\r\n      name\r\n      surname\r\n    }\r\n    suites {\r\n      id\r\n      number\r\n      title\r\n    }\r\n    reservations {\r\n      fromDate\r\n      id\r\n      guest {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      meal\r\n      notes\r\n      purpose\r\n      roommates {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      suite {\r\n        id\r\n      }\r\n      toDate\r\n      type\r\n    }\r\n  }\r\n`","import { FormInstance, Rule } from \"antd/lib/form\";\r\nimport { OptionsType, Reservation, ReservationTypeKey } from \"../Types\";\r\n\r\ninterface OID {\r\n  id: number\r\n}\r\n\r\ninterface IReservationFormHelper {\r\n  getRequiredRule: (message: string) => Rule\r\n  guestValidators: (form: FormInstance) => Rule[]\r\n  mealOptions: OptionsType[]\r\n  reservationOptions: (OptionsType & { value: ReservationTypeKey })[]\r\n  roommateValidators: (form: FormInstance) => Rule[]\r\n}\r\n\r\nexport const ReservationFormHelper: IReservationFormHelper = {\r\n  mealOptions: [\r\n    {\r\n      label: \"Bez Stravy\",\r\n      value: \"NOMEAL\"\r\n    },\r\n    {\r\n      label: \"Jen Snídaně\",\r\n      value: \"BREAKFAST\"\r\n    },\r\n    {\r\n      label: \"Polopenze\",\r\n      value: \"HALFBOARD\"\r\n    }\r\n  ],\r\n  reservationOptions: [\r\n    {\r\n      label: Reservation.getType(\"BINDING\"),\r\n      value: \"BINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"NONBINDING\"),\r\n      value: \"NONBINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"ACCOMMODATED\"),\r\n      value: \"ACCOMMODATED\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"INHABITED\"),\r\n      value: \"INHABITED\"\r\n    }\r\n  ],\r\n  getRequiredRule: (message: string): Rule => {\r\n    return { required: true, message }\r\n  },\r\n  guestValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"host nemůže být stejný jako spolubydlící\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const roommates: Array<OID> = form.getFieldValue(\"roommates\")\r\n          if (roommates === undefined || roommates.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          const duplicate = roommates.filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicate === undefined || duplicate.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail guest validation, equals to roommate\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"vyberte hosta\",\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  roommateValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"spolubydlící je již vybrán\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const duplicates: Array<OID> = form.getFieldValue(\"roommates\").filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicates === undefined || duplicates.length <= 1) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, duplicate value\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"spolubydlící nemůže být stejný jako host\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          if (form.getFieldValue(\"guest\") !== value) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, equals to guest\"))\r\n        }\r\n      }\r\n    ]\r\n  },\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_RESERVATION = gql`\r\n  mutation CreateReservation($data: ReservationInput!) {\r\n    createReservation(data: $data) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_RESERVATION = gql`\r\n  mutation DeleteReservation($reservationId: ID!) {\r\n    deleteReservation(reservationId: $reservationId) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_RESERVATION = gql`\r\n  mutation UpdateReservation($data: ReservationInput!) {\r\n    updateReservation(data: $data) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","export const authToken = \"authtoken\"\nexport const defaultArrivalHour: number = 14\nexport const defaultDepartureHour: number = 10\nexport const dateFormat = \"YYYY-MM-DD HH:mm\"","import { useEffect, useState } from \"react\"\nimport { Button, DatePicker, Form, Input, message, Modal, Popconfirm, Select, Space } from \"antd\"\nimport { Moment } from \"moment\"\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\nimport { Store } from \"rc-field-form/lib/interface\"\nimport { CloseCircleOutlined, CloseOutlined, EditOutlined, MinusCircleOutlined, PlusCircleOutlined, PlusOutlined } from \"@ant-design/icons\"\nimport \"./styles.css\"\nimport { IReservation, OptionsType, ReservationTypeKey } from \"../../lib/Types\"\nimport { ReservationFormHelper } from \"../../lib/components/ReservationFormHelper\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { CreateReservation, CreateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/CreateReservation\"\nimport { Guests_guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\nimport { CREATE_RESERVATION, DELETE_RESERVATION, UPDATE_RESERVATION } from \"../../lib/graphql/mutations/Reservation\"\nimport { UpdateReservation, UpdateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/UpdateReservation\"\nimport { ReservationInput } from \"../../lib/graphql/globalTypes\"\nimport { DeleteReservation, DeleteReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/DeleteReservation\"\nimport { dateFormat } from \"../../lib/Constants\"\nimport { SuitesWithReservations } from \"../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations\"\n\ninterface Props {\n  close: () => void\n  guests: (Guests_guests | null)[] | undefined | null\n  isOpen: boolean\n  openGuestDrawer: () => void\n  refetch: ((variables?: Partial<OperationVariables> | undefined) => Promise<ApolloQueryResult<SuitesWithReservations>>) | undefined\n  reservation: IReservation | undefined\n}\n\nexport const ReservationModal = ({\n  close,\n  guests,\n  isOpen,\n  openGuestDrawer,\n  refetch,\n  reservation,\n}: Props) => {\n\n  const [ createReservation ] = useMutation<CreateReservation, CreateReservationVariables>(CREATE_RESERVATION, {\n    onCompleted: (): void => {\n      message.success(\"Rezervace byla vytvořena!\")\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (error: ApolloError): void => {\n      message.error(error.message)\n    }\n  })\n  const [ updateReservation ] = useMutation<UpdateReservation, UpdateReservationVariables>(UPDATE_RESERVATION, {\n    onCompleted: () => {\n      message.success(\"Rezervace byla aktualizována!\")\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (error: ApolloError) => {\n      message.error(error.message)\n    }\n  })\n  const [ deleteReservation ] = useMutation<DeleteReservation, DeleteReservationVariables>(DELETE_RESERVATION, {\n    onCompleted: () => {\n      message.success(\"Rezervace byla odstraněna!\")\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (error: ApolloError) => {\n      message.error(error)\n    }\n  })\n\n  const [ deleteConfirmVisible, setDeleteConfirmVisible ] = useState<boolean>(false)\n  const [ guestOptions, setGuestOptions ] = useState<OptionsType[]>([])\n\n  const [ form ] = Form.useForm()\n  const initialValues: Store & { type: ReservationTypeKey } = reservation !== undefined ? {\n    dates: [ reservation.fromDate, reservation.toDate ],\n    guest: reservation.guest === undefined ? null : reservation.guest.id,\n    meal: reservation.meal,\n    notes: reservation.notes,\n    purpose: reservation.purpose,\n    roommates: Array.from(reservation.roommates, roommate => {\n      return { id: roommate.id }\n    }),\n    type: reservation.type\n  } : { type: \"NONBINDING\" }\n\n  const closeModal = () => {\n    setDeleteConfirmVisible(false)\n    setTimeout(() => { close() })\n  }\n\n  const submitForm = (): void => {\n    const formData = form.getFieldsValue(true)\n    const [ from, to ]: Array<Moment> = form.getFieldValue(\"dates\")\n    const roommates = formData.roommates === undefined ? [] :\n      Array.from(formData.roommates, (data: { id: number }) => data.id)\n\n    const variables: ReservationInput = {\n      fromDate: from.format(dateFormat),\n      guest: formData.guest,\n      meal: formData.meal,\n      notes: formData.notes,\n      purpose: formData.purpose,\n      roommates: roommates,\n      suite: reservation !== undefined ? +reservation.suite.id : null,\n      toDate: to.format(dateFormat),\n      type: formData.type\n    }\n    if (reservation !== undefined && reservation.id !== undefined) {\n      updateReservation({ variables: { data: { ...variables, id: String(reservation.id) } } })\n    } else {\n      createReservation({ variables: { data: variables } })\n    }\n  }\n\n  const getRemoveButton = () => {\n    return reservation !== undefined ? (\n      <Popconfirm\n        cancelText=\"Ne\"\n        key=\"remove\"\n        okText=\"Ano\"\n        onConfirm={ () => {\n          deleteReservation({ variables: { reservationId: String(reservation.id) } })\n        } }\n        title=\"Odstranit rezervaci?\">\n        <Button\n          className=\"cancel-button\"\n          danger\n          icon={ <CloseCircleOutlined /> }>\n          Odstranit\n        </Button>\n      </Popconfirm>\n    ) : null\n  }\n\n  const footerButtons = [\n    getRemoveButton(),\n    <Button\n      key=\"guest\"\n      onClick={ openGuestDrawer }>\n      Přidat hosta\n    </Button>,\n    <Button\n      key=\"create\"\n      icon={ reservation === undefined ? <PlusCircleOutlined /> : <EditOutlined /> }\n      onClick={ () => {\n        form.validateFields()\n          .then(submitForm)\n      } }\n      type=\"primary\">\n      { (reservation !== undefined && reservation.id !== undefined) ? \"Upravit\" : \"Uložit\" }\n    </Button>\n  ]\n\n  useEffect(() => {\n    if (guests !== undefined && guests !== null) {\n      setGuestOptions(Array.from(guests, (guest: any): any => {\n        return {\n          label: `${ guest.name } ${ guest.surname }`,\n          value: guest.id\n        }\n      }))\n    }\n  }, [ guests ])\n\n  // Reset form to update range, has to be after modal is opened,\n  // otherwise the form might not be initialized\n  useEffect(() => {\n    if (isOpen === true) {\n      form.resetFields()\n    }\n  }, [ form, isOpen ])\n\n  return (\n    <Modal\n      closeIcon={ (\n        <Popconfirm\n          onCancel={ () => setDeleteConfirmVisible(false) }\n          onConfirm={ closeModal }\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n          visible={ deleteConfirmVisible }>\n          <CloseOutlined onClick={ () => {\n            if (form.isFieldsTouched()) {\n              setDeleteConfirmVisible(true)\n            } else {\n              closeModal()\n            }\n          } } />\n        </Popconfirm>\n      ) }\n      footer={ footerButtons }\n      title=\"Rezervační formulář\"\n      visible={ isOpen }>\n      <Form\n        form={ form }\n        initialValues={ initialValues }\n        layout=\"vertical\">\n        <Form.Item\n          label=\"Datum Rezervace\"\n          name=\"dates\"\n          required>\n          <DatePicker.RangePicker\n            format={ dateFormat }\n            showTime />\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          label=\"Host\"\n          name=\"guest\"\n          required\n          rules={ ReservationFormHelper.guestValidators(form) }>\n          <Select\n            filterOption={ (input, option): boolean => {\n              const match = option?.label?.toString().toLowerCase().indexOf(input.toLowerCase())\n              return match !== undefined && match >= 0\n            } }\n            options={ guestOptions }\n            showSearch />\n        </Form.Item>\n        <Form.List name=\"roommates\">\n          { (fields, { add, remove }) => (\n            <>\n              { fields.map(({ key, name, fieldKey, ...restField }) => (\n                <Space\n                  align=\"baseline\"\n                  className=\"roommate-list\"\n                  key={ key }>\n                  <Form.Item\n                    hasFeedback\n                    { ...restField }\n                    fieldKey={ [ fieldKey, 'first' ] }\n                    name={ [ name, \"id\" ] }\n                    rules={ ReservationFormHelper.roommateValidators(form) }>\n                    <Select\n                      options={ guestOptions }\n                      showSearch />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={ () => {\n                    remove(name)\n                    form.validateFields()\n                  } } />\n                </Space>\n              )) }\n              <Form.Item>\n                <Button\n                  disabled={ fields.length >= guestOptions.length }\n                  type=\"dashed\"\n                  onClick={ () => add() }\n                  block\n                  icon={ <PlusOutlined /> }>\n                  Přidat spolubydlícího\n                </Button>\n              </Form.Item>\n            </>\n          ) }\n        </Form.List>\n        <Form.Item\n          hasFeedback\n          label=\"Typ Rezervace\"\n          name=\"type\"\n          required\n          rules={ [ ReservationFormHelper.getRequiredRule(\"vyberte typ rezervace\") ] }>\n          <Select\n            options={ ReservationFormHelper.reservationOptions } />\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          label=\"Strava\"\n          name=\"meal\"\n          required\n          rules={ [ FormHelper.requiredRule ] }>\n          <Select\n            options={ ReservationFormHelper.mealOptions } />\n        </Form.Item>\n        <Form.Item\n          label=\"Účel pobytu\"\n          name=\"purpose\">\n          <Input placeholder=\"účel pobytu\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Poznámky\"\n          name=\"notes\">\n          <Input.TextArea\n            placeholder=\"zadejte text\"\n            allowClear />\n        </Form.Item>\n      </Form>\n    </Modal >\n  )\n}","import { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport { ApolloError, useLazyQuery } from \"@apollo/client\"\nimport Title from \"antd/lib/typography/Title\"\nimport Text from \"antd/lib/typography/Text\"\nimport Timeline, { CursorMarker, DateHeader, SidebarHeader, TimelineGroup, TimelineHeaders, TimelineItem } from \"react-calendar-timeline\"\nimport { useEffect, useState } from \"react\"\nimport { Empty, Layout, message, Popover } from \"antd\"\nimport \"react-calendar-timeline/lib/Timeline.css\"\nimport \"./styles.css\"\nimport moment, { Moment } from \"moment\"\nimport { CustomGroupFields, CustomItemFields, IReservation, Reservation } from \"../../lib/Types\"\nimport { GuestDrawerSmall } from \"../GuestDrawerSmall\"\nimport { SUITES_WITH_RESERVATIONS } from \"../../lib/graphql/queries/Suites\"\nimport { SuitesWithReservations, SuitesWithReservations_reservations, SuitesWithReservations_suites } from \"../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations\"\nimport { ReservationModal } from \"../ReservationModal\"\n\ninterface Props {\n  isAuthenticated: boolean\n}\n\n// https://github.com/namespace-ee/react-calendar-timeline\nexport const Reservations = withRouter(({ history, isAuthenticated }: RouteComponentProps & Props) => {\n\n  const getReservationColor = (reservationType: string): string => {\n    switch (reservationType) {\n      case \"NONBINDING\":\n        return \"rgb(254, 223, 3)\"\n      case \"ACCOMMODATED\":\n        return \"rgb(0, 133, 182)\"\n      case \"INHABITED\":\n        return \"rgb(254, 127, 45)\"\n      case \"BINDING\":\n      default: return \"rgb(0, 212, 157)\"\n    }\n  }\n\n  const [ getData, { data, refetch } ] = useLazyQuery<SuitesWithReservations>(SUITES_WITH_RESERVATIONS, {\n    onError: (reason: ApolloError) => {\n      console.error(reason)\n      message.error(\"Chyba serveru, kontaktujte správce\")\n    }\n  })\n\n  const [ groups, setGroups ] = useState<TimelineGroup<CustomGroupFields>[]>([])\n  const [ guestDrawerOpen, setGuestDrawerOpen ] = useState<boolean>(false)\n  const [ items, setItems ] = useState<TimelineItem<CustomItemFields, Moment>[]>([])\n  const [ reservationModalOpen, setReservationModalOpen ] = useState<boolean>(false)\n  const [ selectedReservation, setSelectedReservation ] = useState<IReservation>()\n\n  useEffect(() => {\n    if (isAuthenticated === true) {\n      getData()\n    } else {\n      history.push(\"/login?next=/\")\n    }\n  }, [ getData, history, isAuthenticated ])\n\n  useEffect(() => {\n    const suites: TimelineGroup<CustomGroupFields>[] = []\n    const reservations: TimelineItem<CustomItemFields, Moment>[] = []\n    data?.suites?.forEach((suite: SuitesWithReservations_suites | null) => {\n      if (suite !== null) {\n        suites.push({ ...suite, stackItems: true })\n      }\n    })\n    data?.reservations?.forEach((reservation: SuitesWithReservations_reservations | null) => {\n      if (reservation !== null) {\n        reservations.push({\n          color: getReservationColor(reservation.type),\n          end_time: moment(reservation.toDate),\n          group: reservation.suite.id,\n          id: reservation.id,\n          itemProps: {\n            className: 'reservation-item',\n            style: {\n              background: getReservationColor(reservation.type),\n              border: \"none\"\n            }\n          },\n          start_time: moment(reservation.fromDate),\n          title: `${ reservation.guest.name } ${ reservation.guest.surname }`,\n          type: Reservation.getType(reservation.type)\n        })\n      }\n    })\n    setGroups(suites)\n    setItems(reservations)\n  }, [ data ])\n\n  const getTimeline = () => {\n    return data !== undefined ? (\n      <Timeline\n        canChangeGroup={ false }\n        canMove={ false }\n        canResize={ false }\n        defaultTimeEnd={ moment().add(12, \"day\") }\n        defaultTimeStart={ moment().add(-12, \"day\") }\n        groupRenderer={ ({ group }) => {\n          return (\n            <>\n              <Title level={ 5 }>{ group.title }</Title>\n            </>\n          )\n        } }\n        groups={ groups }\n        itemRenderer={ ({ item, itemContext, getItemProps, getResizeProps }) => {\n          const { left: leftResizeProps, right: rightResizeProps } = getResizeProps()\n          return item.itemProps !== undefined ? (\n            <div { ...getItemProps(item.itemProps) }>\n              { itemContext.useResizeHandle ? <div { ...leftResizeProps } /> : '' }\n              <Popover title={ item.title } content={ (\n                <>\n                  <div style={ { color: item.color, fontWeight: 700 } }>\n                    { item.type }\n                  </div>\n                  <div>\n                    Od: <strong>{ item.start_time.format(\"DD MMM HH:mm\") }</strong>\n                  </div>\n                  <div>\n                    Do: <strong>{ item.end_time.format(\"DD MMM HH:mm\") }</strong>\n                  </div>\n                </>\n              ) }>\n                <div\n                  className=\"rct-item-content\"\n                  style={ { maxHeight: `${ itemContext.dimensions.height }` } }>\n                  <Text strong>{ item.title }</Text>\n                </div>\n              </Popover>\n              { itemContext.useResizeHandle ? <div { ...rightResizeProps } /> : '' }\n            </div>\n          ) : null\n        } }\n        items={ items }\n        lineHeight={ 60 }\n        onCanvasClick={ (groupId: number, time: number) => {\n          const selectedGroup = groups.find(group => group.id === groupId)\n          if (selectedGroup !== undefined) {\n            setSelectedReservation({\n              fromDate: moment(time),\n              suite: { ...selectedGroup },\n              roommates: [],\n              toDate: moment(time).add(1, \"day\"),\n              type: \"NONBINDING\"\n            })\n            setReservationModalOpen(true)\n          }\n        } }\n        onItemClick={ (itemId: number, _e, time: number) => {\n          if (data?.reservations !== undefined && data.reservations !== null) {\n            const reservation = data.reservations.find(entry => entry !== null && entry.id === String(itemId))\n            if (reservation !== undefined && reservation !== null) {\n              setSelectedReservation({\n                fromDate: moment(reservation.fromDate),\n                guest: reservation.guest,\n                id: +reservation.id,\n                meal: reservation.meal,\n                notes: reservation.notes,\n                purpose: reservation.purpose,\n                roommates: reservation.roommates,\n                suite: reservation.suite,\n                toDate: moment(reservation.toDate),\n                type: reservation.type\n              })\n              setReservationModalOpen(true)\n            }\n          }\n        } }>\n        <TimelineHeaders>\n          <SidebarHeader>\n            { ({ getRootProps }) => {\n              return (\n                <div\n                  { ...getRootProps() }\n                  className=\"side-header\" />\n              )\n            } }\n          </SidebarHeader>\n          <DateHeader unit=\"primaryHeader\" />\n          <DateHeader\n            className=\"days\"\n            unit=\"day\" />\n        </TimelineHeaders>\n        <CursorMarker>\n          {\n            ({ styles, date }) => {\n              return (\n                <div style={ { ...styles, backgroundColor: \"rgba(136, 136, 136, 0.5)\", color: \"#888\" } }>\n                  <div className=\"rt-marker__label\">\n                    <div className=\"rt-marker__content\">\n                      { moment(date).format(\"DD MMM HH:mm\") }\n                    </div>\n                  </div>\n                </div>\n              )\n            }\n          }\n        </CursorMarker>\n      </Timeline>\n    ) : <Empty />\n  }\n\n  return (\n    <Layout>\n      <Layout.Header>\n        <Title level={ 3 } className=\"home__listings-title\">\n          Rezervace / Obsazenost\n        </Title>\n      </Layout.Header>\n      <Layout.Content className=\"app-content timeline\">\n        { getTimeline() }\n        <ReservationModal\n          close={ () => {\n            setSelectedReservation(undefined)\n            setReservationModalOpen(false)\n          } }\n          guests={ data?.guests }\n          isOpen={ reservationModalOpen }\n          openGuestDrawer={ () => setGuestDrawerOpen(true) }\n          refetch={ refetch }\n          reservation={ selectedReservation } />\n        <GuestDrawerSmall\n          close={ () => setGuestDrawerOpen(false) }\n          open={ guestDrawerOpen }\n          refetch={ refetch } />\n      </Layout.Content>\n    </Layout>\n  )\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_SUITE = gql`\r\n  mutation CreateSuite($data: SuiteInput!) {\r\n    createSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_SUITE = gql`\r\n  mutation UpdateSuite($data: SuiteInput!) {\r\n    updateSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_SUITE = gql`\r\n  mutation DeleteSuite($suiteId: ID!) {\r\n    deleteSuite(suiteId: $suiteId) {\r\n      suite {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\nimport { Button, Drawer, Form, Input, message, Popconfirm } from \"antd\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { CloseOutlined } from \"@ant-design/icons\"\nimport { Suites, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport { Store } from \"antd/lib/form/interface\"\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\nimport { CreateSuite, CreateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/CreateSuite\"\nimport { CREATE_SUITE, UPDATE_SUITE } from \"../../lib/graphql/mutations/Suite\"\nimport { SuiteForm } from \"../../lib/Types\"\nimport { SuiteInput } from \"../../lib/graphql/globalTypes\"\nimport { UpdateSuite, UpdateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/UpdateSuite\"\n\ninterface Props {\n  close: () => void\n  refetch: ((variables?: Partial<OperationVariables>) => Promise<ApolloQueryResult<Suites>>) | undefined\n  suite: Suites_suites | undefined\n  visible: boolean\n}\n\nexport const SuiteDrawer = ({\n  close,\n  suite,\n  refetch,\n  visible\n}: Props) => {\n\n  const [ createSuite ] = useMutation<CreateSuite, CreateSuiteVariables>(CREATE_SUITE, {\n    onCompleted: (data: CreateSuite): void => {\n      message.success(`Apartmá ${ data.createSuite?.suite?.title } byla vytvořena`)\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (reason: ApolloError): void => {\n      console.error(reason)\n    }\n  })\n  const [ updateSuite ] = useMutation<UpdateSuite, UpdateSuiteVariables>(UPDATE_SUITE, {\n    onCompleted: (data: UpdateSuite): void => {\n      message.success(`Apartmá ${ data.updateSuite?.suite?.title } byla aktualizována`)\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (reason: ApolloError): void => {\n      console.error(reason)\n    }\n  })\n\n  const [ form ] = Form.useForm()\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\n\n  const initialValues: Store = {\n    number: suite?.number,\n    title: suite?.title\n  }\n\n  useEffect(() => {\n    if (visible === true) {\n      form.resetFields()\n    }\n  }, [ form, visible ])\n\n  const submitForm = () => {\n    form.validateFields()\n      .then(() => {\n        const formData: SuiteForm = form.getFieldsValue(true)\n        const variables: { data: SuiteInput } = {\n          data: {\n            number: formData.number,\n            title: formData.title\n          }\n        }\n        if (suite === undefined) {\n          createSuite({ variables })\n        } else {\n          if (form.isFieldsTouched()) {\n            variables.data.id = suite.id\n            updateSuite({ variables })\n          }\n        }\n      })\n      .catch(() => {\n        console.error(\"Form validation failed\");\n      })\n  }\n\n  const closeDrawer = (): void => {\n    if (form.isFieldsTouched()) {\n      setConfirmClose(true)\n    } else {\n      close()\n    }\n  }\n\n  return (\n    <Drawer\n      closeIcon={ (\n        <Popconfirm\n          onCancel={ () => setConfirmClose(false) }\n          onConfirm={ () => {\n            setConfirmClose(false)\n            close()\n          } }\n          placement=\"rightTop\"\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n          visible={ confirmClose }>\n          <CloseOutlined onClick={ closeDrawer } />\n        </Popconfirm>\n      ) }\n      footer={\n        <>\n          <Button\n            onClick={ submitForm }\n            type=\"primary\">\n            Vytvořit\n          </Button>\n        </>\n      }\n      footerStyle={ {\n        textAlign: \"right\"\n      } }\n      placement=\"left\"\n      title=\"Nové apartmá\"\n      visible={ visible }\n      width={ 500 }>\n      <Form\n        form={ form }\n        initialValues={ initialValues }\n        layout=\"vertical\"\n        name=\"suite\">\n        <Form.Item\n          hasFeedback\n          label=\"Název\"\n          name=\"title\"\n          required\n          rules={ [ FormHelper.requiredRule ] }>\n          <Input placeholder=\"název apartmá\" />\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          label=\"Číslo\"\n          name=\"number\"\n          required\n          rules={ [\n            FormHelper.requiredRule,\n            {\n              message: \"zadejte číslo\",\n              pattern: /^[0-9]+$/\n            }\n          ] }>\n          <Input placeholder=\"číslo apartmá\" type=\"number\" />\n        </Form.Item>\n      </Form>\n    </Drawer>\n  )\n}","import { useEffect, useState } from \"react\"\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport { HomeOutlined, PlusCircleOutlined, WarningOutlined } from \"@ant-design/icons\"\nimport { Avatar, Button, Layout, List, message, Popconfirm, Skeleton } from \"antd\"\nimport { SuiteDrawer } from \"../SuiteDrawer\"\nimport { ApolloError, useLazyQuery, useMutation } from \"@apollo/client\"\nimport { SUITES } from \"../../lib/graphql/queries/Suites\"\nimport { Suites as SuitesData, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport Title from \"antd/lib/typography/Title\"\nimport \"./styles.css\"\nimport { DELETE_SUITE } from \"../../lib/graphql/mutations/Suite\"\nimport { DeleteSuite, DeleteSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/DeleteSuite\"\n\ninterface Props {\n  isAuthenticated: boolean\n}\n\nexport const Suites = withRouter(({ history, isAuthenticated }: RouteComponentProps & Props) => {\n\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\n  const [ activeSuite, setActiveSuite ] = useState<Suites_suites>()\n  const [ suites, setSuites ] = useState<Suites_suites[]>([])\n\n  const [ getData, { loading: queryLoading, data: queryData, refetch } ] = useLazyQuery<SuitesData>(SUITES, {\n    onError: (reason: ApolloError) => {\n      console.error(reason);\n      message.error(\"Chyba serveru, kontaktujte správce\")\n    }\n  })\n  const [ deleteSuite, { loading: removeLoading, data: removeData } ] = useMutation<DeleteSuite, DeleteSuiteVariables>(DELETE_SUITE, {\n    onError: (reason: ApolloError) => {\n      console.error(reason)\n    }\n  })\n\n  useEffect(() => {\n    if (isAuthenticated === true) {\n      getData()\n    } else {\n      history.push(\"/login?next=/apartma\")\n    }\n  }, [ getData, history, isAuthenticated ])\n\n  useEffect(() => {\n    const suitesData: Suites_suites[] = []\n    queryData?.suites?.forEach((suite: Suites_suites | null) => {\n      if (suite !== null) {\n        suitesData.push(suite)\n      }\n    })\n    setSuites(suitesData)\n  }, [ queryData ])\n\n  useEffect(() => {\n    if (refetch !== undefined) {\n      refetch()\n    }\n  }, [ refetch, removeData ])\n\n  const editSuite = (suite: Suites_suites): void => {\n    setActiveSuite(suite)\n    setDrawerVisible(true)\n  }\n\n  const removeSuite = (suite: Suites_suites): void => {\n    deleteSuite({ variables: { suiteId: suite.id } })\n  }\n\n  return (\n    <Layout>\n      <Layout.Header>\n        <Title level={ 3 } className=\"home__listings-title\">\n          Apartmá\n        </Title>\n      </Layout.Header>\n      <Layout.Content className=\"app-content\">\n        <List\n          bordered={ true }\n          className=\"suites-list\"\n          dataSource={ suites }\n          footer={\n            <Button\n              icon={ <PlusCircleOutlined /> }\n              onClick={ () => {\n                setActiveSuite(undefined)\n                setDrawerVisible(true)\n              } }\n              type=\"primary\">\n              Přidat apartmá\n            </Button>\n          }\n          header={ <h4>Seznam apartmá</h4> }\n          itemLayout=\"horizontal\"\n          loading={ queryLoading }\n          renderItem={ suite => (\n            <List.Item\n              actions={ [\n                <Button\n                  key=\"edit\"\n                  onClick={ () => editSuite(suite) }\n                  type=\"link\">\n                  upravit\n                </Button>,\n                <Popconfirm\n                  cancelText=\"Ne\"\n                  icon={ <WarningOutlined /> }\n                  okText=\"Ano\"\n                  onConfirm={ () => removeSuite(suite) }\n                  title=\"opravdu odstranit?\">\n                  <Button\n                    key=\"remove\"\n                    loading={ removeLoading }\n                    type=\"link\">\n                    odstranit\n                  </Button>\n                </Popconfirm>\n              ] }>\n              <Skeleton title={ false } loading={ queryLoading } active>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar gap={ 4 } size=\"large\">\n                      <HomeOutlined />\n                    </Avatar>\n                  }\n                  description={ `číslo pokoje - ${ suite.number }` }\n                  title={ suite.title } />\n              </Skeleton>\n            </List.Item>\n          ) } />\n        <SuiteDrawer\n          close={ () => setDrawerVisible(false) }\n          refetch={ refetch }\n          suite={ activeSuite }\n          visible={ drawerVisible } />\n      </Layout.Content>\n    </Layout>\n  )\n})","import { Affix, ConfigProvider, Layout } from \"antd\"\r\nimport csCZ from \"antd/lib/locale/cs_CZ\"\r\nimport { useState } from \"react\"\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport { Header } from \"../Header\"\r\nimport { Guests } from \"../Guests\"\r\nimport { Login } from \"../Login\"\r\nimport { NotFound } from \"../NotFound\"\r\nimport { Reservations } from \"../Reservations\"\r\nimport { Suites } from \"../Suites\"\r\n\r\nexport const App = () => {\r\n\r\n  const [ isAuthenticated, setIsAuthenticated ] = useState<boolean>(false)\r\n\r\n  return (\r\n    <ConfigProvider locale={ csCZ }>\r\n      <Router>\r\n        <Layout id=\"app\">\r\n          <Affix offsetTop={ 0 } className=\"app__affix-header\">\r\n            <Header isAuthenticated={ isAuthenticated } setIsAuthenticated={ setIsAuthenticated } />\r\n          </Affix>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Reservations isAuthenticated={ isAuthenticated } />\r\n            </Route>\r\n            <Route exact path=\"/apartma\">\r\n              <Suites isAuthenticated={ isAuthenticated } />\r\n            </Route>\r\n            <Route exact path=\"/guests\">\r\n              <Guests isAuthenticated={ isAuthenticated } />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              <Login isAuthenticated={ isAuthenticated } setIsAuthenticated={ setIsAuthenticated } />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n    </ConfigProvider>\r\n  )\r\n}","import ReactDOM from 'react-dom'\nimport './index.css'\nimport { getCookie } from \"./lib/Cookie\"\nimport moment from 'moment'\nimport 'moment/locale/cs'\nimport { ApolloClient, ApolloLink, ApolloProvider, concat, HttpLink, InMemoryCache } from '@apollo/client'\nimport { App } from './sections/App'\n\nmoment.locale(\"cs\")\n\nconst httpLink = new HttpLink({ uri: '/api' });\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  const authtoken = getCookie(\"JWT\")\n  const csrftoken = getCookie(\"csrftoken\")\n  operation.setContext(({ headers = {} }) => ({\n    headers: {\n      ...headers,\n      authorization: authtoken === null ? \"\" : `JWT ${ authtoken }`,\n      \"X-CSRFToken\": csrftoken === null ? \"\" : csrftoken\n    }\n  }));\n  return forward(operation);\n})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          guests: {\n            merge: false\n          },\n          reservations: {\n            merge: false\n          },\n          suiteReservations: {\n            merge: false\n          },\n          suites: {\n            merge: false\n          }\n        }\n      },\n      Reservation: {\n        fields: {\n          roommates: { merge: false }\n        }\n      }\n    }\n  }),\n  link: concat(authMiddleware, httpLink),\n})\n\nReactDOM.render(\n  <ApolloProvider client={ client }>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}