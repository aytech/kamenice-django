{"version":3,"sources":["sections/AppHeader/assets/mill.svg","sections/AppHeader/components/MenuItems.tsx","sections/AppHeader/index.tsx","lib/components/FormHelper.ts","lib/components/GuestFormHelper.ts","lib/graphql/mutations/Guest/index.ts","sections/GuestDrawer/index.tsx","lib/components/CsCalendarLocale.ts","lib/Types.ts","lib/components/ReservationFormHelper.ts","lib/graphql/mutations/Reservation/index.ts","sections/ReservationModal/index.tsx","lib/graphql/queries/Reservations/index.ts","sections/GuestDrawerSmall/index.tsx","lib/graphql/queries/Guests/index.ts","sections/ReserveCalendar/index.tsx","lib/Constants.ts","lib/graphql/queries/Suites/index.ts","lib/graphql/mutations/Suite/index.ts","sections/SuiteDrawer/index.tsx","index.tsx","lib/Cookie.ts","sections/Home/index.tsx","sections/Suites/index.tsx","sections/Guests/index.tsx","sections/Overview/index.tsx"],"names":["MenuItems","mode","Item","icon","BookOutlined","to","EyeOutlined","IdcardOutlined","HomeOutlined","LoginOutlined","AppHeader","withRouter","location","history","useState","search","setSearch","className","src","logo","alt","placeholder","enterButton","onChange","event","target","value","onSearch","FormHelper","requiredRule","required","message","trim","undefined","GuestFormHelper","ageOptions","label","getGuestResponseErrorList","errorString","Array","from","Object","values","JSON","parse","replaceAll","list","error","phoneCodeRequiredRules","pattern","transform","requiredAlphaRules","requiredNumericRules","CREATE_GUEST","gql","CREATE_GUEST_BASIC","UPDATE_GUEST","DELETE_GUEST","GuestDrawer","close","guest","refetch","visible","Form","useForm","form","useMutation","onCompleted","data","success","createGuest","name","surname","resetFields","onError","updateGuest","confirmClose","setConfirmClose","initialValues","age","address","municipality","addressMunicipality","psc","addressPsc","street","addressStreet","citizenship","selected","email","gender","identity","phone","phoneNumber","visa","visaNumber","emailPrefixIcon","noStyle","MailOutlined","useEffect","closeIcon","onCancel","onConfirm","placement","title","CloseOutlined","onClick","isFieldsTouched","width","footer","validateFields","then","formData","getFieldsValue","variables","new","id","catch","type","footerStyle","padding","textAlign","layout","level","hasFeedback","rules","addonBefore","options","Option","Group","compact","style","marginBottom","CsCalendarLocale","months","weekDays","short","isWeekend","weekStartingIndex","getToday","gregorainTodayObject","toNativeDate","date","Date","year","month","day","getMonthLength","getDate","transformDigit","digit","nextMonth","previousMonth","openMonthSelector","openYearSelector","closeMonthSelector","closeYearSelector","defaultPlaceholder","digitSeparator","yearLetterSkip","isRtl","getDaysWithinMonth","days","index","push","getDaysWithinOverlappingMonths","utils","forEach","length","TransformDate","years","fromMonth","toMonth","idx","keys","shift","getDaysWithinOverlappingYears","Reservation","key","ReservationFormHelper","mealOptions","reservationOptions","getRequiredRule","guestValidators","validator","_rule","roommates","getFieldValue","Promise","resolve","duplicate","filter","reject","Error","roommateValidators","duplicates","CREATE_RESERVATION","DELETE_RESERVATION","UPDATE_RESERVATION","ReservationModal","guests","isOpen","openGuestDrawer","range","refetchReservations","reservation","suite","createReservation","updateReservation","deleteReservation","deleteConfirmVisible","setDeleteConfirmVisible","guestOptions","setGuestOptions","dateFormat","dates","meal","notes","purpose","roommate","closeModal","setTimeout","submitForm","fromDate","format","toDate","footerButtons","cancelText","okText","reservationId","danger","CloseCircleOutlined","PlusCircleOutlined","EditOutlined","RangePicker","showTime","filterOption","input","option","match","toString","toLowerCase","indexOf","showSearch","List","fields","add","remove","map","fieldKey","restField","align","console","log","MinusCircleOutlined","disabled","block","PlusOutlined","TextArea","allowClear","SUITE_RESERVATIONS","RESERVATIONS","GuestDrawerSmall","open","GUESTS","GUESTS_FULL","ReserveCalendar","useQuery","suiteId","reservationsData","reservationRefetch","guestsQueryData","guestsRefetch","reservedRange","setReservedRange","modalOpen","setModalOpen","guestDrawerOpen","setGuestDrawerOpen","reservedDays","setReservedDays","selectedReservation","setSelectedReservation","getDayClassName","suiteReservations","moment","span","dayValue","rangeDay","find","locale","customDaysClassName","shouldHighlightWeekends","SUITES","CREATE_SUITE","UPDATE_SUITE","DELETE_SUITE","SuiteDrawer","createSuite","updateSuite","number","client","ApolloClient","cache","InMemoryCache","typePolicies","Query","merge","reservations","suites","headers","cookieValue","document","cookie","cookies","split","i","substring","decodeURIComponent","getCookie","uri","ReactDOM","render","csCZ","ApolloProvider","offsetTop","exact","path","component","suitesLoading","loading","suitesData","active","gutter","getContent","drawerVisible","setDrawerVisible","activeSuite","setActiveSuite","setSuites","queryLoading","queryData","deleteSuite","removeLoading","removeData","dataSource","itemLayout","renderItem","actions","editSuite","WarningOutlined","removeSuite","Meta","setGuests","selectedGuest","setSelectedGuest","deleteGuest","deleteLoading","deleteData","guestsData","guestId","series","setSeries","getColor","reservationType","getTimePadded","hours","minutes","time","x","y","getTime","chart","events","click","_e","_chart","config","seriesIndex","warn","height","locales","shortMonths","toolbar","download","pan","reset","selectionZoom","zoomIn","zoomOut","plotOptions","bar","horizontal","barHeight","rangeBarGroupRows","colors","w","fill","xaxis","legend","customLegendItems","markers","strokeWidth","strokeColor","fillColors","radius","customHTML","offsetX","offsetY","position","stroke","tooltip","custom","tooltipValues","ctx","rangeBar","getTooltipValues","seriesName","reservationName","ylabel","start","end","startVal","getHours","getMinutes","endVal","getElementById"],"mappings":"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","file":"static/js/main.877a848e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mill.1f872c17.svg\";","import { BookOutlined, EyeOutlined, HomeOutlined, IdcardOutlined, LoginOutlined } from \"@ant-design/icons\"\r\nimport { Menu } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const MenuItems = () => {\r\n  return (\r\n    <Menu mode=\"horizontal\">\r\n      <Menu.Item key=\"reservation\" icon={ <BookOutlined /> }>\r\n        <Link to=\"/\">Rezervace</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"overview\" icon={ <EyeOutlined /> }>\r\n        <Link to=\"/prehled\">Přehled</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"guests\" icon={ <IdcardOutlined /> }>\r\n        <Link to=\"/guests\">Hosté</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"suites\" icon={ <HomeOutlined /> }>\r\n        <Link to=\"/apartma\">Apartmá</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"login\" icon={ <LoginOutlined /> }>\r\n        <Link to=\"/login\">Přihlášení</Link>\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport Search from 'antd/lib/input/Search'\r\nimport { Header } from 'antd/lib/layout/layout'\r\nimport './styles.css'\r\nimport logo from './assets/mill.svg'\r\nimport { MenuItems } from './components/MenuItems'\r\n\r\nexport const AppHeader = withRouter(({ location, history }: RouteComponentProps) => {\r\n\r\n  const [ search, setSearch ] = useState(\"\")\r\n\r\n  return (\r\n    <Header className=\"app-header\">\r\n      <div className=\"app-header__logo-search-section\">\r\n        <div className=\"app-header__logo\">\r\n          <Link to=\"/\">\r\n            <img src={ logo } alt=\"Kamenice logo\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"app-header__search-input\">\r\n          <Search\r\n            placeholder=\"\"\r\n            enterButton\r\n            onChange={ (event) => setSearch(event.target.value) }\r\n            onSearch={ () => { } }\r\n            value={ search }\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__menu-section\">\r\n        <MenuItems />\r\n      </div>\r\n    </Header>\r\n  )\r\n})","import { Rule } from \"antd/lib/form\"\r\n\r\ninterface IFormHelper {\r\n  requiredRule: Rule\r\n  trim: (value: string | undefined) => string | undefined\r\n}\r\nexport const FormHelper: IFormHelper = {\r\n  requiredRule: {\r\n    required: true,\r\n    message: \"pole je povinné\"\r\n  },\r\n  trim: (value: string | undefined): string | undefined => {\r\n    return value === undefined ? value : value.trim()\r\n  }\r\n}","import { Rule } from \"antd/lib/form\";\r\nimport { OptionsType } from \"../Types\";\r\nimport { FormHelper } from \"./FormHelper\";\r\n\r\ninterface IGuestFormHelper {\r\n  ageOptions: OptionsType[]\r\n  getGuestResponseErrorList: (errorString: string) => Array<string>\r\n  phoneCodeRequiredRules: Rule[]\r\n  requiredAlphaRules: Rule[]\r\n  requiredNumericRules: Rule[]\r\n}\r\n\r\nexport const GuestFormHelper: IGuestFormHelper = {\r\n  ageOptions: [\r\n    {\r\n      label: \"12+\",\r\n      value: \"ADULT\"\r\n    },\r\n    {\r\n      label: \"3-12 let\",\r\n      value: \"YOUNG\"\r\n    },\r\n    {\r\n      label: \"Do 3 let\",\r\n      value: \"CHILD\"\r\n    }\r\n  ],\r\n  getGuestResponseErrorList: (errorString: string) => {\r\n    try {\r\n      return Array.from(\r\n        Object.values(\r\n          JSON.parse(errorString.replaceAll(\"'\", \"\\\"\"))\r\n        ), ((list: any) => list[ 0 ])\r\n      )\r\n    } catch (error) {\r\n      return [ \"Chyba serveru, kontaktujte správce\" ]\r\n    }\r\n  },\r\n  phoneCodeRequiredRules: [\r\n    FormHelper.requiredRule,\r\n    {\r\n      message: \"zadejte kód ve formátu 420, +420 nebo (420)\",\r\n      pattern: /^\\+?\\(?[0-9]*\\)?$/,\r\n      transform: FormHelper.trim\r\n    }\r\n  ],\r\n  requiredAlphaRules: [\r\n    FormHelper.requiredRule,\r\n    {\r\n      message: \"zadejte pouze text\",\r\n      pattern: /^([A-Za-z\\s])+$/,\r\n      transform: FormHelper.trim\r\n    }\r\n  ],\r\n  requiredNumericRules: [\r\n    FormHelper.requiredRule,\r\n    {\r\n      message: \"zadejte pouze čísla\",\r\n      pattern: /^[\\d\\s]+$/,\r\n      transform: FormHelper.trim\r\n    }\r\n  ]\r\n}","import { gql } from 'apollo-boost'\r\n\r\nexport const CREATE_GUEST = gql`\r\n  mutation CreateGuest($data: GuestInput!) {\r\n    createGuest(data: $data) {\r\n      guest {\r\n        addressMunicipality\r\n        addressPsc\r\n        addressStreet\r\n        citizenship\r\n        email\r\n        gender\r\n        identity\r\n        id\r\n        name\r\n        phoneNumber\r\n        surname\r\n        visaNumber\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_GUEST_BASIC = gql`\r\n  mutation CreateGuestBasic($data: GuestInput!) {\r\n    createGuest(data: $data) {\r\n      guest {\r\n        email\r\n        name\r\n        surname\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_GUEST = gql`\r\n  mutation UpdateGuest($data: GuestInput!) {\r\n    updateGuest(data: $data) {\r\n      guest {\r\n        addressMunicipality\r\n        addressPsc\r\n        addressStreet\r\n        citizenship\r\n        email\r\n        gender\r\n        identity\r\n        id\r\n        name\r\n        phoneNumber\r\n        surname\r\n        visaNumber\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_GUEST = gql`\r\n  mutation DeleteGuest($guestId: ID!) {\r\n    deleteGuest(guestId: $guestId) {\r\n      guest {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useState } from \"react\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm, Select } from \"antd\"\r\nimport { CloseOutlined, MailOutlined } from \"@ant-design/icons\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { Store } from \"rc-field-form/lib/interface\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport \"./styles.css\"\r\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\r\nimport { CREATE_GUEST, UPDATE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuest, CreateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuest\"\r\nimport { GuestsFull, GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { Guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { UpdateGuest, UpdateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/UpdateGuest\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  guest: GuestsFull_guests | null\r\n  refetch: ((variables?: Partial<OperationVariables>) => Promise<ApolloQueryResult<Guests | GuestsFull>>) | undefined\r\n  visible: boolean\r\n}\r\n\r\nexport const GuestDrawer = ({\r\n  close,\r\n  guest,\r\n  refetch,\r\n  visible\r\n}: Props) => {\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ createGuest ] = useMutation<CreateGuest, CreateGuestVariables>(CREATE_GUEST, {\r\n    onCompleted: (data: CreateGuest) => {\r\n      message.success(`Host ${ data.createGuest?.guest?.name } ${ data.createGuest?.guest?.surname } byl přidán`)\r\n      if (refetch !== undefined) {\r\n        refetch()\r\n      }\r\n      form.resetFields()\r\n      close()\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n  const [ updateGuest ] = useMutation<UpdateGuest, UpdateGuestVariables>(UPDATE_GUEST, {\r\n    onCompleted: (data: UpdateGuest) => {\r\n      message.success(`Host ${ data.updateGuest?.guest?.name } ${ data.updateGuest?.guest?.surname } byl upraven`)\r\n      form.resetFields()\r\n      close()\r\n    },\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n  const initialValues: Store = {\r\n    age: guest?.age,\r\n    address: {\r\n      municipality: guest?.addressMunicipality,\r\n      psc: guest?.addressPsc,\r\n      street: guest?.addressStreet\r\n    },\r\n    citizenship: {\r\n      selected: guest?.citizenship\r\n    },\r\n    email: guest?.email,\r\n    gender: guest?.gender,\r\n    identity: guest?.identity,\r\n    name: guest?.name,\r\n    phone: guest?.phoneNumber,\r\n    surname: guest?.surname,\r\n    visa: guest?.visaNumber\r\n  }\r\n  const emailPrefixIcon = (\r\n    <Form.Item name=\"email-prefix\" noStyle>\r\n      <MailOutlined />\r\n    </Form.Item>\r\n  )\r\n\r\n  const closeDrawer = (): void => {\r\n    if (form.isFieldsTouched()) {\r\n      setConfirmClose(true)\r\n    } else {\r\n      close()\r\n    }\r\n  }\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          age: formData.age,\r\n          addressMunicipality: formData.address?.municipality,\r\n          addressPsc: formData.address?.psc,\r\n          addressStreet: formData.address?.street,\r\n          citizenship: formData.citizenship?.selected === undefined ? formData.citizenship?.new : formData.citizenship.selected,\r\n          email: formData.email,\r\n          gender: formData.gender,\r\n          identity: formData.identity,\r\n          name: formData.name,\r\n          phoneNumber: formData.phone,\r\n          surname: formData.surname,\r\n          visaNumber: formData.visa\r\n        }\r\n        if (guest === null) {\r\n          createGuest({ variables: { data: { ...variables } } })\r\n        } else {\r\n          updateGuest({ variables: { data: { id: guest.id, ...variables } } })\r\n        }\r\n      })\r\n      .catch(() => message.error(\"Formulář nelze odeslat, opravte prosím chyby\"))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true) {\r\n      form.resetFields()\r\n    }\r\n  }, [ form, visible ])\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ closeDrawer } />\r\n        </Popconfirm>\r\n      ) }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      width={ 500 }\r\n      visible={ visible }\r\n      footer={\r\n        <>\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            { guest === null ? \"Vytvořit\" : \"Upravit\" }\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        padding: \"16px 20px\",\r\n        textAlign: \"right\"\r\n      } }>\r\n      <Form\r\n        form={ form }\r\n        initialValues={ initialValues }\r\n        layout=\"vertical\"\r\n        name=\"guest\">\r\n        <Title level={ 5 }>Osobní údaje</Title>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Jméno\"\r\n          name=\"name\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Jméno\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Příjmení\"\r\n          name=\"surname\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Příjmení\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Číslo OP\"\r\n          name=\"identity\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input placeholder=\"číslo občanského průkazu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Telefonní Číslo\"\r\n          name=\"phone\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input placeholder=\"číslo\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"E-Mail\"\r\n          name=\"email\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input\r\n            addonBefore={ emailPrefixIcon }\r\n            placeholder=\"e-mail\"\r\n            type=\"email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Věk\"\r\n          name=\"age\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Select\r\n            options={ GuestFormHelper.ageOptions }\r\n            placeholder=\"vyberte ze seznamu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Pohlaví\"\r\n          name=\"gender\">\r\n          <Select\r\n            placeholder=\"vyberte ze seznamu\">\r\n            <Select.Option value=\"M\">Muž</Select.Option>\r\n            <Select.Option value=\"F\">Žena</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Číslo viza\"\r\n          name=\"visa\">\r\n          <Input placeholder=\"číslo visa\" />\r\n        </Form.Item>\r\n        <Title level={ 5 }>Trvalé bydliště</Title>\r\n        <Form.Item\r\n          label=\"Ulice\"\r\n          name={ [ \"address\", \"street\" ] }>\r\n          <Input placeholder=\"ulice\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"PSČ/Obec\">\r\n          <Input.Group compact>\r\n            <Form.Item\r\n              style={ { marginBottom: 0, width: \"50%\" } }\r\n              name={ [ \"address\", \"psc\" ] }>\r\n              <Input placeholder=\"PSČ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={ { marginBottom: 0, width: \"50%\" } }\r\n              name={ [ \"address\", \"municipality\" ] }>\r\n              <Input placeholder=\"Obec\" />\r\n            </Form.Item>\r\n          </Input.Group>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Občanství\">\r\n          <Input.Group compact>\r\n            <Form.Item\r\n              style={ { width: \"50%\" } }\r\n              name={ [ \"citizenship\", \"selected\" ] }>\r\n              <Select style={ { width: \"100%\" } } placeholder=\"ze seznamu\">\r\n                <Select.Option value=\"cze\">CZE</Select.Option>\r\n                <Select.Option value=\"sk\">SK</Select.Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={ { width: \"50%\" } }\r\n              name={ [ \"citizenship\", \"new\" ] }>\r\n              <Input placeholder=\"ručně\" />\r\n            </Form.Item>\r\n          </Input.Group>\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  )\r\n}","import { Day, DayValue, Locale, utils } from \"react-modern-calendar-datepicker\";\r\n\r\nexport const CsCalendarLocale: Locale = {\r\n  months: [\r\n    'Leden',\r\n    'Únor',\r\n    'Březen',\r\n    'Duben',\r\n    'Květen',\r\n    'Červen',\r\n    'Červenec',\r\n    'Srpen',\r\n    'Září',\r\n    'Říjen',\r\n    'Listopad',\r\n    'Prosinec'\r\n  ],\r\n  weekDays: [\r\n    {\r\n      name: 'Neděle', // used for accessibility \r\n      short: 'Ned', // displayed at the top of days' rows\r\n      isWeekend: true, // is it a formal weekend or not?\r\n    },\r\n    {\r\n      name: 'Pondělí',\r\n      short: 'Pon',\r\n    },\r\n    {\r\n      name: 'Úterý',\r\n      short: 'Út',\r\n    },\r\n    {\r\n      name: 'Středa',\r\n      short: 'St',\r\n    },\r\n    {\r\n      name: 'Čtvrtek',\r\n      short: 'Čt',\r\n    },\r\n    {\r\n      name: 'Pátek',\r\n      short: 'Pá',\r\n    },\r\n    {\r\n      name: 'Sobota',\r\n      short: 'Sob',\r\n      isWeekend: true,\r\n    }\r\n  ],\r\n  weekStartingIndex: 0,\r\n  // return a { year: number, month: number, day: number } object\r\n  getToday(gregorainTodayObject) {\r\n    return gregorainTodayObject;\r\n  },\r\n  // return a native JavaScript date here\r\n  toNativeDate(date) {\r\n    return new Date(date.year, date.month - 1, date.day);\r\n  },\r\n  // return a number for date's month length\r\n  getMonthLength(date) {\r\n    return new Date(date.year, date.month, 0).getDate();\r\n  },\r\n  // return a transformed digit to your locale\r\n  transformDigit(digit) {\r\n    return digit;\r\n  },\r\n  // texts in the date picker\r\n  nextMonth: 'Příští Měsíc',\r\n  previousMonth: 'Předchozí Měsíc',\r\n  openMonthSelector: 'Otevřít Výběr Měsíce',\r\n  openYearSelector: 'Otevřít Výběr Roku',\r\n  closeMonthSelector: 'Zavřít Výběr Měsíce',\r\n  closeYearSelector: 'Zavřít Výběr Roku',\r\n  defaultPlaceholder: 'Vybrat...',\r\n  // for input range value\r\n  from: 'od',\r\n  to: 'do',\r\n  // used for input value when multi dates are selected\r\n  digitSeparator: ',',\r\n  // if your provide -2 for example, year will be 2 digited\r\n  yearLetterSkip: 0,\r\n  // is your language rtl or ltr?\r\n  isRtl: false\r\n}\r\n\r\nconst getDaysWithinMonth = (from: number, to: number, month: number, year: number): Day[] => {\r\n  const days: Day[] = []\r\n  for (let index = from; index <= to; index++) {\r\n    days.push({ year: year, month: month, day: index })\r\n  }\r\n  return days\r\n}\r\n\r\nconst getDaysWithinOverlappingMonths = (from: number, to: number, months: number[], year: number): Day[] => {\r\n  const { getMonthLength } = utils(\"en\")\r\n  const days: Day[] = []\r\n  months.forEach((month: number, index: number) => {\r\n    if (index === 0) { // first month, get days till the end of the month\r\n      getDaysWithinMonth(from, getMonthLength({ day: from, month, year }), month, year).forEach((day: Day) => days.push(day))\r\n    } else if (index === months.length - 1) { // get days of te last month\r\n      getDaysWithinMonth(1, to, month, year).forEach((day: Day) => days.push(day))\r\n    } else { // get days of the intermediary month\r\n      getDaysWithinMonth(1, getMonthLength({ day: 1, month, year }), month, year).forEach((day: Day) => days.push(day))\r\n    }\r\n  })\r\n  return days\r\n}\r\n\r\nconst getDaysWithinOverlappingYears = (from: number, to: number, fromMonth: number, toMonth: number, years: number[]) => {\r\n  const { getMonthLength } = utils(\"en\")\r\n  const days: Day[] = []\r\n  years.forEach((year: number, index: number) => {\r\n    const months: number[] = []\r\n    if (index === 0) { // get days from first year\r\n      for (let idx = fromMonth; idx <= 12; idx++) {\r\n        months.push(idx)\r\n      }\r\n      getDaysWithinOverlappingMonths(from, getMonthLength({ day: 1, month: 12, year }), months, year).forEach((day: Day) => days.push(day))\r\n    } else if (index === years.length - 1) { // get days from last year\r\n      for (let idx = 1; idx <= toMonth; idx++) {\r\n        months.push(idx)\r\n      }\r\n      if (months.length > 1) {\r\n        getDaysWithinOverlappingMonths(1, to, months, year).forEach((day: Day) => days.push(day))\r\n      } else {\r\n        getDaysWithinMonth(1, to, months[ 0 ], year).forEach((day: Day) => days.push(day))\r\n      }\r\n    } else { // get days from intermediary year\r\n      const months = Array.from(Array(13).keys())\r\n      months.shift()\r\n      getDaysWithinOverlappingMonths(1, getMonthLength({ day: 1, month: 12, year }), months, year).forEach((day: Day) => days.push(day))\r\n    }\r\n  })\r\n  return days\r\n}\r\n\r\nexport const TransformDate = {\r\n  getDaysFromRange: (from: DayValue, to: DayValue): Day[] => {\r\n    if (from === undefined || from === null || to === undefined || to === null) {\r\n      return []\r\n    }\r\n    if (to.year === from.year) {\r\n      // processing within same year\r\n      if (to.month === from.month) {\r\n        // processing within same month\r\n        return getDaysWithinMonth(from.day, to.day, from.month, from.year)\r\n      } else {\r\n        // processing within overlapping months\r\n        const months = []\r\n        for (let index = from.month; index <= to.month; index++) {\r\n          months.push(index)\r\n        }\r\n        return getDaysWithinOverlappingMonths(from.day, to.day, months, from.year)\r\n      }\r\n    } else {\r\n      // processing within overlapping years\r\n      const years = []\r\n      for (let index = from.year; index <= to.year; index++) {\r\n        years.push(index)\r\n      }\r\n      return getDaysWithinOverlappingYears(from.day, to.day, from.month, to.month, years)\r\n    }\r\n  },\r\n  toLocaleString: (day: DayValue, defaultValue: string) => {\r\n    if (day === undefined || day === null) {\r\n      return defaultValue\r\n    }\r\n    return `${ day?.day } ${ CsCalendarLocale.months[ day.month - 1 ] } ${ day.year }`\r\n  }\r\n}\r\n","import { Day } from \"react-modern-calendar-datepicker\"\nimport { Moment } from \"moment\"\n\nexport type ReservationType = \"Závazná Rezervace\" | \"Nezávazná Rezervace\" | \"Aktuálně Ubytování\" | \"Obydlený Termín\"\nexport type ReservationTypeKey = \"BINDING\" | \"NONBINDING\" | \"ACCOMMODATED\" | \"INHABITED\"\nexport type ReserveDay = Day & { hour?: number, minute?: number }\n\nexport const Reservation = {\n  getType: (key: ReservationTypeKey): ReservationType => {\n    switch (key) {\n      case \"NONBINDING\":\n        return \"Nezávazná Rezervace\"\n      case \"ACCOMMODATED\":\n        return \"Aktuálně Ubytování\"\n      case \"INHABITED\":\n        return \"Obydlený Termín\"\n      case \"BINDING\":\n      default: return \"Závazná Rezervace\"\n    }\n  }\n}\n\nexport type DrawerType = \"guest\" | \"suite\"\n\nexport interface ReservationRange {\n  from: Moment\n  to: Moment\n}\n\nexport interface ReserveRange {\n  id?: number\n  from: ReserveDay\n  to: ReserveDay\n  type: ReservationTypeKey\n}\n\nexport interface Room {\n  id: number\n  name: string\n  reservedRanges: ReserveRange[]\n}\n\ninterface Address {\n  municipality?: string\n  psc?: number\n  street?: string\n}\n\ninterface Citizenship {\n  new?: string\n  selected?: string\n}\n\nexport interface GuestForm {\n  age: string,\n  address?: Address\n  citizenship?: Citizenship\n  email: string\n  gender?: string\n  id?: number\n  name: string\n  identity: string\n  phone: string\n  surname: string\n  visa?: string\n}\n\nexport interface GuestErrorResponse {\n  email: Array<string>\n  gender: Array<string>\n  identity: Array<string>\n  name: Array<string>\n  phone_number: Array<string>\n  surname: Array<string>\n}\n\nexport interface SuiteForm {\n  number: number,\n  title: string\n}\n\nexport interface OptionsType {\n  label: string,\n  value: string | number\n}","import { FormInstance, Rule } from \"antd/lib/form\";\r\nimport { OptionsType, Reservation, ReservationTypeKey } from \"../Types\";\r\n\r\ninterface OID {\r\n  id: number\r\n}\r\n\r\ninterface IReservationFormHelper {\r\n  getRequiredRule: (message: string) => Rule\r\n  guestValidators: (form: FormInstance) => Rule[]\r\n  mealOptions: OptionsType[]\r\n  reservationOptions: (OptionsType & { value: ReservationTypeKey })[]\r\n  roommateValidators: (form: FormInstance) => Rule[]\r\n}\r\n\r\nexport const ReservationFormHelper: IReservationFormHelper = {\r\n  mealOptions: [\r\n    {\r\n      label: \"Bez Stravy\",\r\n      value: \"NOMEAL\"\r\n    },\r\n    {\r\n      label: \"Jen Snídaně\",\r\n      value: \"BREAKFAST\"\r\n    },\r\n    {\r\n      label: \"Polopenze\",\r\n      value: \"HALFBOARD\"\r\n    }\r\n  ],\r\n  reservationOptions: [\r\n    {\r\n      label: Reservation.getType(\"BINDING\"),\r\n      value: \"BINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"NONBINDING\"),\r\n      value: \"NONBINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"ACCOMMODATED\"),\r\n      value: \"ACCOMMODATED\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"INHABITED\"),\r\n      value: \"INHABITED\"\r\n    }\r\n  ],\r\n  getRequiredRule: (message: string): Rule => {\r\n    return { required: true, message }\r\n  },\r\n  guestValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"host nemůže být stejný jako spolubydlící\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const roommates: Array<OID> = form.getFieldValue(\"roommates\")\r\n          if (roommates === undefined || roommates.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          const duplicate = roommates.filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicate === undefined || duplicate.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail guest validation, equals to roommate\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"vyberte hosta\",\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  roommateValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"spolubydlící je již vybrán\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const duplicates: Array<OID> = form.getFieldValue(\"roommates\").filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicates === undefined || duplicates.length <= 1) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, duplicate value\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"spolubydlící nemůže být stejný jako host\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          if (form.getFieldValue(\"guest\") !== value) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, equals to guest\"))\r\n        }\r\n      }\r\n    ]\r\n  },\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_RESERVATION = gql`\r\n  mutation CreateReservation($data: ReservationInput!) {\r\n    createReservation(data: $data) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_RESERVATION = gql`\r\n  mutation DeleteReservation($reservationId: ID!) {\r\n    deleteReservation(reservationId: $reservationId) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_RESERVATION = gql`\r\n  mutation UpdateReservation($data: ReservationInput!) {\r\n    updateReservation(data: $data) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\r\nimport { Button, DatePicker, Form, Input, message, Modal, Popconfirm, Select, Space } from \"antd\"\r\nimport { Moment } from \"moment\"\r\nimport { ApolloError, ApolloQueryResult, useMutation } from \"@apollo/client\"\r\nimport { Store } from \"rc-field-form/lib/interface\"\r\nimport { CloseCircleOutlined, CloseOutlined, EditOutlined, MinusCircleOutlined, PlusCircleOutlined, PlusOutlined } from \"@ant-design/icons\"\r\nimport \"./styles.css\"\r\nimport { OptionsType, ReservationRange, ReservationTypeKey } from \"../../lib/Types\"\r\nimport { ReservationFormHelper } from \"../../lib/components/ReservationFormHelper\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport { Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\r\nimport { CreateReservation, CreateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/CreateReservation\"\r\nimport { Guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { CREATE_RESERVATION, DELETE_RESERVATION, UPDATE_RESERVATION } from \"../../lib/graphql/mutations/Reservation\"\r\nimport { SuiteReservations, SuiteReservations_suiteReservations } from \"../../lib/graphql/queries/Reservations/__generated__/SuiteReservations\"\r\nimport { UpdateReservation, UpdateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/UpdateReservation\"\r\nimport { ReservationInput } from \"../../lib/graphql/globalTypes\"\r\nimport { DeleteReservation, DeleteReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/DeleteReservation\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  guests: Guests | undefined\r\n  isOpen: boolean\r\n  openGuestDrawer: () => void\r\n  range: ReservationRange | undefined\r\n  refetchReservations: (variables?: Partial<SuiteReservations>) => Promise<ApolloQueryResult<SuiteReservations>>\r\n  reservation: SuiteReservations_suiteReservations | undefined\r\n  suite: Suites_suites\r\n}\r\n\r\nexport const ReservationModal = ({\r\n  close,\r\n  guests,\r\n  isOpen,\r\n  openGuestDrawer,\r\n  range,\r\n  refetchReservations,\r\n  reservation,\r\n  suite\r\n}: Props) => {\r\n\r\n  const [ createReservation ] = useMutation<CreateReservation, CreateReservationVariables>(CREATE_RESERVATION, {\r\n    onCompleted: (): void => {\r\n      message.success(\"Rezervace byla vytvořena!\")\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n  const [ updateReservation ] = useMutation<UpdateReservation, UpdateReservationVariables>(UPDATE_RESERVATION, {\r\n    onCompleted: () => {\r\n      message.success(\"Rezervace byla aktualizována!\")\r\n    },\r\n    onError: (error: ApolloError) => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n  const [ deleteReservation ] = useMutation<DeleteReservation, DeleteReservationVariables>(DELETE_RESERVATION, {\r\n    onCompleted: () => {\r\n      message.success(\"Rezervace byla odstraněna!\")\r\n      refetchReservations()\r\n      close()\r\n    },\r\n    onError: (error: ApolloError) => {\r\n      message.error(error)\r\n    }\r\n  })\r\n\r\n  const [ deleteConfirmVisible, setDeleteConfirmVisible ] = useState<boolean>(false)\r\n  const [ guestOptions, setGuestOptions ] = useState<OptionsType[]>([])\r\n  const dateFormat = \"YYYY-MM-DD HH:mm\"\r\n  const [ form ] = Form.useForm()\r\n  const initialValues: Store & { type: ReservationTypeKey } = {\r\n    dates: range !== undefined ? [ range.from, range.to ] : [],\r\n    guest: reservation === undefined ? null : reservation.guest.id,\r\n    meal: reservation === undefined ? null : reservation.meal,\r\n    notes: reservation === undefined ? null : reservation.notes,\r\n    purpose: reservation === undefined ? null : reservation.purpose,\r\n    roommates: reservation === undefined ? [] : Array.from(reservation.roommates, roommate => {\r\n      return { id: roommate.id }\r\n    }),\r\n    type: reservation === undefined ? \"BINDING\" : reservation.type\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setDeleteConfirmVisible(false)\r\n    setTimeout(() => { close() })\r\n  }\r\n\r\n  const submitForm = (): void => {\r\n    const formData = form.getFieldsValue(true)\r\n    const [ from, to ]: Array<Moment> = form.getFieldValue(\"dates\")\r\n    const roommates = formData.roommates === undefined ? [] :\r\n      Array.from(formData.roommates, (data: { id: number }) => data.id)\r\n\r\n    const variables: ReservationInput = {\r\n      fromDate: from.format(dateFormat),\r\n      guest: formData.guest,\r\n      meal: formData.meal,\r\n      notes: formData.notes,\r\n      purpose: formData.purpose,\r\n      roommates: roommates,\r\n      suite: +suite.id,\r\n      toDate: to.format(dateFormat),\r\n      type: formData.type\r\n    }\r\n    if (reservation !== undefined && reservation.id !== undefined) {\r\n      updateReservation({ variables: { data: { ...variables, id: reservation.id } } })\r\n    } else {\r\n      createReservation({ variables: { data: variables } })\r\n    }\r\n    refetchReservations()\r\n    close()\r\n  }\r\n\r\n  const getRemoveButton = () => {\r\n    return reservation !== undefined ? (\r\n      <Popconfirm\r\n        cancelText=\"Ne\"\r\n        key=\"remove\"\r\n        okText=\"Ano\"\r\n        onConfirm={ () => {\r\n          deleteReservation({ variables: { reservationId: reservation.id } })\r\n        } }\r\n        title=\"Odstranit rezervaci?\">\r\n        <Button\r\n          className=\"cancel-button\"\r\n          danger\r\n          icon={ <CloseCircleOutlined /> }>\r\n          Odstranit\r\n        </Button>\r\n      </Popconfirm>\r\n    ) : null\r\n  }\r\n\r\n  const footerButtons = [\r\n    getRemoveButton(),\r\n    <Button\r\n      key=\"guest\"\r\n      onClick={ openGuestDrawer }>\r\n      Přidat hosta\r\n    </Button>,\r\n    <Button\r\n      key=\"create\"\r\n      icon={ reservation === undefined ? <PlusCircleOutlined /> : <EditOutlined /> }\r\n      onClick={ () => {\r\n        form.validateFields()\r\n          .then(submitForm)\r\n      } }\r\n      type=\"primary\">\r\n      { reservation === undefined ? \"Uložit\" : \"Upravit\" }\r\n    </Button>\r\n  ]\r\n\r\n  useEffect(() => {\r\n    if (guests?.guests !== undefined && guests?.guests !== null) {\r\n      setGuestOptions(Array.from(guests?.guests, (guest: any): any => {\r\n        return {\r\n          label: `${ guest.name } ${ guest.surname }`,\r\n          value: guest.id\r\n        }\r\n      }))\r\n    }\r\n  }, [ guests ])\r\n\r\n  // Reset form to update range, has to be after modal is opened,\r\n  // otherwise the form might not be initialized\r\n  useEffect(() => {\r\n    if (isOpen === true) {\r\n      form.resetFields()\r\n    }\r\n  }, [ form, isOpen, range ])\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setDeleteConfirmVisible(false) }\r\n          onConfirm={ closeModal }\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ deleteConfirmVisible }>\r\n          <CloseOutlined onClick={ () => {\r\n            if (form.isFieldsTouched()) {\r\n              setDeleteConfirmVisible(true)\r\n            } else {\r\n              closeModal()\r\n            }\r\n          } } />\r\n        </Popconfirm>\r\n      ) }\r\n      footer={ footerButtons }\r\n      title=\"Rezervační formulář\"\r\n      visible={ isOpen }>\r\n      <Form\r\n        form={ form }\r\n        initialValues={ initialValues }\r\n        layout=\"vertical\">\r\n        <Form.Item\r\n          label=\"Datum Rezervace\"\r\n          name=\"dates\"\r\n          required>\r\n          <DatePicker.RangePicker\r\n            format={ dateFormat }\r\n            showTime />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Host\"\r\n          name=\"guest\"\r\n          required\r\n          rules={ ReservationFormHelper.guestValidators(form) }>\r\n          <Select\r\n            filterOption={ (input, option): boolean => {\r\n              const match = option?.label?.toString().toLowerCase().indexOf(input.toLowerCase())\r\n              return match !== undefined && match >= 0\r\n            } }\r\n            options={ guestOptions }\r\n            showSearch />\r\n        </Form.Item>\r\n        <Form.List name=\"roommates\">\r\n          { (fields, { add, remove }) => (\r\n            <>\r\n              { fields.map(({ key, name, fieldKey, ...restField }) => (\r\n                <Space\r\n                  align=\"baseline\"\r\n                  className=\"roommate-list\"\r\n                  key={ key }>\r\n                  { console.log(name) }\r\n                  <Form.Item\r\n                    hasFeedback\r\n                    { ...restField }\r\n                    fieldKey={ [ fieldKey, 'first' ] }\r\n                    name={ [ name, \"id\" ] }\r\n                    rules={ ReservationFormHelper.roommateValidators(form) }>\r\n                    <Select\r\n                      options={ guestOptions }\r\n                      showSearch />\r\n                  </Form.Item>\r\n                  <MinusCircleOutlined onClick={ () => {\r\n                    remove(name)\r\n                    form.validateFields()\r\n                  } } />\r\n                </Space>\r\n              )) }\r\n              <Form.Item>\r\n                <Button\r\n                  disabled={ fields.length >= guestOptions.length }\r\n                  type=\"dashed\"\r\n                  onClick={ () => add() }\r\n                  block\r\n                  icon={ <PlusOutlined /> }>\r\n                  Přidat spolubydlícího\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          ) }\r\n        </Form.List>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Typ Rezervace\"\r\n          name=\"type\"\r\n          required\r\n          rules={ [ ReservationFormHelper.getRequiredRule(\"vyberte typ rezervace\") ] }>\r\n          <Select\r\n            options={ ReservationFormHelper.reservationOptions } />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Strava\"\r\n          name=\"meal\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Select\r\n            options={ ReservationFormHelper.mealOptions } />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Účel pobytu\"\r\n          name=\"purpose\">\r\n          <Input placeholder=\"účel pobytu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Poznámky\"\r\n          name=\"notes\">\r\n          <Input.TextArea\r\n            placeholder=\"zadejte text\"\r\n            allowClear />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal >\r\n  )\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const SUITE_RESERVATIONS = gql`\r\n  query SuiteReservations($suiteId: Int!) {\r\n    suiteReservations(suiteId: $suiteId) {\r\n      fromDate\r\n      guest {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      id\r\n      meal\r\n      notes\r\n      purpose\r\n      roommates {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      suite {\r\n        id\r\n        title\r\n        number\r\n      }\r\n      toDate\r\n      type\r\n    }\r\n  }\r\n`\r\n\r\nexport const RESERVATIONS = gql`\r\n  query Reservations {\r\n    reservations {\r\n      fromDate\r\n      guest {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      id\r\n      meal\r\n      notes\r\n      purpose\r\n      roommates {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      suite {\r\n        id\r\n        title\r\n        number\r\n      }\r\n      toDate\r\n      type\r\n    }\r\n  }\r\n`","import { CloseOutlined, MailOutlined } from \"@ant-design/icons\"\r\nimport { ApolloError, ApolloQueryResult, useMutation } from \"@apollo/client\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm } from \"antd\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { useState } from \"react\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { CREATE_GUEST_BASIC } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuestBasic, CreateGuestBasicVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuestBasic\"\r\nimport { Guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  open: boolean\r\n  refetch: (variables?: Partial<Guests>) => Promise<ApolloQueryResult<Guests>>\r\n}\r\n\r\nexport const GuestDrawerSmall = ({\r\n  close,\r\n  open,\r\n  refetch\r\n}: Props) => {\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n\r\n  const [ createGuest ] = useMutation<CreateGuestBasic, CreateGuestBasicVariables>(CREATE_GUEST_BASIC, {\r\n    onCompleted: (data: CreateGuestBasic) => {\r\n      message.success(`Host ${ data.createGuest?.guest?.name } ${ data.createGuest?.guest?.surname } byl přidán`)\r\n      refetch()\r\n      close()\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          email: formData.email,\r\n          name: formData.name,\r\n          surname: formData.surname\r\n        }\r\n        createGuest({ variables: { data: variables } })\r\n      })\r\n      .catch(() => console.error(\"Formulář nelze odeslat\"))\r\n  }\r\n\r\n  const closeDrawer = (): void => {\r\n    if (form.isFieldsTouched()) {\r\n      setConfirmClose(true)\r\n    } else {\r\n      close()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ closeDrawer } />\r\n        </Popconfirm>\r\n      ) }\r\n      footer={\r\n        <>\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            Vytvořit\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        textAlign: \"right\"\r\n      } }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      visible={ open }\r\n      width={ 500 }>\r\n      <Form\r\n        form={ form }\r\n        layout=\"vertical\"\r\n        name=\"guest\">\r\n        <Title level={ 5 }>Osobní údaje</Title>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Jméno\"\r\n          name=\"name\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Jméno\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Příjmení\"\r\n          name=\"surname\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Příjmení\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"E-Mail\"\r\n          name=\"email\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input\r\n            addonBefore={ (\r\n              <Form.Item name=\"email-prefix\" noStyle>\r\n                <MailOutlined />\r\n              </Form.Item>\r\n            ) }\r\n            placeholder=\"e-mail\"\r\n            type=\"email\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  )\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const GUESTS = gql`\r\n  query Guests {\r\n    guests {\r\n      id\r\n      name\r\n      surname\r\n    }\r\n  }\r\n`\r\n\r\nexport const GUESTS_FULL = gql`\r\n  query GuestsFull {\r\n    guests {\r\n      age\r\n      addressMunicipality\r\n      addressPsc\r\n      addressStreet\r\n      citizenship\r\n      email\r\n      gender\r\n      identity\r\n      id\r\n      name\r\n      phoneNumber\r\n      surname\r\n      visaNumber\r\n    }\r\n  }\r\n`","import { useState, useEffect } from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport { Col } from 'antd'\r\nimport { Calendar, Day, DayValue } from 'react-modern-calendar-datepicker'\r\nimport { CsCalendarLocale, TransformDate } from '../../lib/components/CsCalendarLocale'\r\nimport './styles.css'\r\nimport { defaultArrivalHour, defaultDepartureHour } from '../../lib/Constants'\r\nimport { ReservationModal } from '../ReservationModal'\r\nimport { ReservationRange } from '../../lib/Types'\r\nimport { Suites_suites } from '../../lib/graphql/queries/Suites/__generated__/Suites'\r\nimport { SuiteReservations as ReservationsData, SuiteReservations_suiteReservations } from '../../lib/graphql/queries/Reservations/__generated__/SuiteReservations'\r\nimport { SUITE_RESERVATIONS } from '../../lib/graphql/queries/Reservations'\r\nimport { ReservationType } from '../../lib/graphql/globalTypes'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport moment, { Moment } from 'moment'\r\nimport { GuestDrawerSmall } from '../GuestDrawerSmall'\r\nimport { Guests } from '../../lib/graphql/queries/Guests/__generated__/Guests'\r\nimport { GUESTS } from '../../lib/graphql/queries/Guests'\r\n\r\ninterface Props {\r\n  suite: Suites_suites\r\n}\r\ntype CustomDayClassNameItem = Day & { className: string, reservationId: string };\r\n\r\nexport const ReserveCalendar = ({\r\n  suite,\r\n}: Props) => {\r\n\r\n  const { data: reservationsData, refetch: reservationRefetch } = useQuery<ReservationsData>(SUITE_RESERVATIONS, {\r\n    variables: { suiteId: suite.id }\r\n  })\r\n  const { data: guestsQueryData, refetch: guestsRefetch } = useQuery<Guests>(GUESTS)\r\n\r\n  const [ reservedRange, setReservedRange ] = useState<ReservationRange>()\r\n  const [ modalOpen, setModalOpen ] = useState<boolean>(false)\r\n  const [ guestDrawerOpen, setGuestDrawerOpen ] = useState<boolean>(false)\r\n  const [ reservedDays, setReservedDays ] = useState<CustomDayClassNameItem[]>([])\r\n  const [ selectedReservation, setSelectedReservation ] = useState<SuiteReservations_suiteReservations>()\r\n\r\n  const getDayClassName = (type: ReservationType) => {\r\n    switch (type) {\r\n      case \"BINDING\":\r\n        return \"greenDay\"\r\n      case \"NONBINDING\":\r\n        return \"yellowDay\"\r\n      case \"ACCOMMODATED\":\r\n        return \"purpleDay\"\r\n      case \"INHABITED\":\r\n        return \"orangeDay\"\r\n      default: return \"greenDay\"\r\n    }\r\n  }\r\n\r\n  const setReservationRange = (dayValue: DayValue) => {\r\n    const rangeDay = reservedDays.find((day: CustomDayClassNameItem) => {\r\n      return day.year === dayValue?.year\r\n        && day.month === dayValue.month\r\n        && day.day === dayValue.day\r\n    })\r\n    if (rangeDay !== undefined) {\r\n      const reservation = reservationsData?.suiteReservations?.find(reservation => reservation?.id === rangeDay.reservationId)\r\n      if (reservation !== undefined && reservation !== null) {\r\n        setReservedRange({\r\n          from: moment(reservation.fromDate),\r\n          to: moment(reservation.toDate)\r\n        })\r\n        setSelectedReservation(reservation)\r\n      }\r\n    }\r\n    if (rangeDay === undefined && dayValue !== undefined && dayValue !== null) {\r\n      setReservedRange({\r\n        // Moment counts months from 0, so - 1 is required to get the current month\r\n        from: moment([ dayValue.year, dayValue.month - 1, dayValue.day, defaultArrivalHour, 0 ]),\r\n        // default range is the selected day + 1 day, default arrival and departure times\r\n        to: moment([ dayValue.year, dayValue.month - 1, dayValue.day + 1, defaultDepartureHour, 0 ])\r\n      })\r\n    }\r\n    setModalOpen(true)\r\n  }\r\n\r\n  // Add reserved days to calendar based on reservation data from server\r\n  useEffect(() => {\r\n    const reservedDays: CustomDayClassNameItem[] = []\r\n    reservationsData?.suiteReservations?.forEach((reservation: SuiteReservations_suiteReservations | null) => {\r\n      if (reservation !== null) {\r\n        const from: Moment = moment(reservation.fromDate)\r\n        const to: Moment = moment(reservation.toDate)\r\n        TransformDate.getDaysFromRange(\r\n          {\r\n            year: from.year(),\r\n            month: from.month() + 1,\r\n            day: from.date()\r\n          },\r\n          {\r\n            year: to.year(),\r\n            month: to.month() + 1,\r\n            day: to.date()\r\n          }).forEach((day: Day) => {\r\n            reservedDays.push({ className: getDayClassName(reservation.type), reservationId: reservation.id, ...day })\r\n          })\r\n      }\r\n    })\r\n    setReservedDays(reservedDays)\r\n  }, [ reservationsData ])\r\n\r\n  return (\r\n    <>\r\n      <Col\r\n        span={ 8 }\r\n        className=\"home__listing\">\r\n        <Title\r\n          level={ 4 }\r\n          className=\"home__listings-title\">\r\n          { suite.title }\r\n        </Title>\r\n        <div className=\"home__calendar\">\r\n          <Calendar\r\n            onChange={ setReservationRange }\r\n            locale={ CsCalendarLocale }\r\n            customDaysClassName={ reservedDays }\r\n            shouldHighlightWeekends />\r\n        </div>\r\n      </Col>\r\n      <ReservationModal\r\n        close={ () => {\r\n          setSelectedReservation(undefined)\r\n          setModalOpen(false)\r\n        } }\r\n        guests={ guestsQueryData }\r\n        isOpen={ modalOpen }\r\n        openGuestDrawer={ () => setGuestDrawerOpen(true) }\r\n        range={ reservedRange }\r\n        refetchReservations={ reservationRefetch }\r\n        reservation={ selectedReservation }\r\n        suite={ suite } />\r\n      <GuestDrawerSmall\r\n        close={ () => setGuestDrawerOpen(false) }\r\n        open={ guestDrawerOpen }\r\n        refetch={ guestsRefetch } />\r\n    </>\r\n  )\r\n}","export const defaultArrivalHour: number = 14\r\nexport const defaultDepartureHour: number = 10","import { gql } from \"@apollo/client\";\r\n\r\nexport const SUITES = gql`\r\n  query Suites {\r\n    suites {\r\n      id\r\n      title\r\n      number\r\n    }\r\n  }\r\n`","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_SUITE = gql`\r\n  mutation CreateSuite($data: SuiteInput!) {\r\n    createSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_SUITE = gql`\r\n  mutation UpdateSuite($data: SuiteInput!) {\r\n    updateSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_SUITE = gql`\r\n  mutation DeleteSuite($suiteId: ID!) {\r\n    deleteSuite(suiteId: $suiteId) {\r\n      suite {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\nimport { Button, Drawer, Form, Input, message, Popconfirm } from \"antd\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { CloseOutlined } from \"@ant-design/icons\"\nimport { Suites, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport { Store } from \"antd/lib/form/interface\"\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\nimport { CreateSuite, CreateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/CreateSuite\"\nimport { CREATE_SUITE, UPDATE_SUITE } from \"../../lib/graphql/mutations/Suite\"\nimport { SuiteForm } from \"../../lib/Types\"\nimport { SuiteInput } from \"../../lib/graphql/globalTypes\"\nimport { UpdateSuite, UpdateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/UpdateSuite\"\n\ninterface Props {\n  close: () => void\n  refetch: ((variables?: Partial<OperationVariables>) => Promise<ApolloQueryResult<Suites>>)\n  suite: Suites_suites | undefined\n  visible: boolean\n}\n\nexport const SuiteDrawer = ({\n  close,\n  suite,\n  refetch,\n  visible\n}: Props) => {\n\n  const [ createSuite ] = useMutation<CreateSuite, CreateSuiteVariables>(CREATE_SUITE, {\n    onCompleted: (data: CreateSuite): void => {\n      message.success(`Apartmá ${ data.createSuite?.suite?.title } byla vytvořena`)\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (error: ApolloError): void => {\n      console.log('Error creating: ', error)\n    }\n  })\n  const [ updateSuite ] = useMutation<UpdateSuite, UpdateSuiteVariables>(UPDATE_SUITE, {\n    onCompleted: (data: UpdateSuite): void => {\n      message.success(`Apartmá ${ data.updateSuite?.suite?.title } byla aktualizována`)\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (error: ApolloError): void => {\n      console.log('Error updating: ', error)\n    }\n  })\n\n  const [ form ] = Form.useForm()\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\n\n  const initialValues: Store = {\n    number: suite?.number,\n    title: suite?.title\n  }\n\n  useEffect(() => {\n    if (visible === true) {\n      form.resetFields()\n    }\n  }, [ form, visible ])\n\n  const submitForm = () => {\n    form.validateFields()\n      .then(() => {\n        const formData: SuiteForm = form.getFieldsValue(true)\n        const variables: { data: SuiteInput } = {\n          data: {\n            number: formData.number,\n            title: formData.title\n          }\n        }\n        if (suite === undefined) {\n          createSuite({ variables })\n        } else {\n          if (form.isFieldsTouched()) {\n            variables.data.id = suite.id\n            updateSuite({ variables })\n          }\n        }\n      })\n      .catch(() => {\n        console.error(\"Form validation failed\");\n      })\n  }\n\n  const closeDrawer = (): void => {\n    if (form.isFieldsTouched()) {\n      setConfirmClose(true)\n    } else {\n      close()\n    }\n  }\n\n  return (\n    <Drawer\n      closeIcon={ (\n        <Popconfirm\n          onCancel={ () => setConfirmClose(false) }\n          onConfirm={ () => {\n            setConfirmClose(false)\n            close()\n          } }\n          placement=\"rightTop\"\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n          visible={ confirmClose }>\n          <CloseOutlined onClick={ closeDrawer } />\n        </Popconfirm>\n      ) }\n      footer={\n        <>\n          <Button\n            onClick={ submitForm }\n            type=\"primary\">\n            Vytvořit\n          </Button>\n        </>\n      }\n      footerStyle={ {\n        textAlign: \"right\"\n      } }\n      placement=\"left\"\n      title=\"Nové apartmá\"\n      visible={ visible }\n      width={ 500 }>\n      <Form\n        form={ form }\n        initialValues={ initialValues }\n        layout=\"vertical\"\n        name=\"suite\">\n        <Form.Item\n          hasFeedback\n          label=\"Název\"\n          name=\"title\"\n          required\n          rules={ [ FormHelper.requiredRule ] }>\n          <Input placeholder=\"název apartmá\" />\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          label=\"Číslo\"\n          name=\"number\"\n          required\n          rules={ [\n            FormHelper.requiredRule,\n            {\n              message: \"zadejte číslo\",\n              pattern: /^[0-9]+$/\n            }\n          ] }>\n          <Input placeholder=\"číslo apartmá\" type=\"number\" />\n        </Form.Item>\n      </Form>\n    </Drawer>\n  )\n}","import ReactDOM from 'react-dom'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport './index.css'\nimport { Affix, ConfigProvider, Layout } from 'antd'\nimport { AppHeader, Home, Overview } from './sections'\nimport { getCookie } from \"./lib/Cookie\"\nimport moment from 'moment'\nimport 'moment/locale/cs'\nimport csCZ from \"antd/lib/locale/cs_CZ\"\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\nimport { Suites } from './sections/Suites'\nimport { Guests } from './sections/Guests'\n\nmoment.locale(\"cs\")\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          guests: {\n            merge: false\n          },\n          reservations: {\n            merge: false\n          },\n          suiteReservations: {\n            merge: false\n          },\n          suites: {\n            merge: false\n          }\n        }\n      }\n    }\n  }),\n  headers: {\n    \"X-CSRFToken\": getCookie(\"csrftoken\")\n  },\n  uri: \"/api\"\n})\n\nReactDOM.render(\n  <ConfigProvider locale={ csCZ }>\n    <ApolloProvider client={ client }>\n      <Router>\n        <Layout id=\"app\">\n          <Affix offsetTop={ 0 } className=\"app__affix-header\">\n            <AppHeader />\n          </Affix>\n          <Switch>\n            <Route exact path=\"/\" component={ Home } />\n            <Route exact path=\"/apartma\" component={ Suites } />\n            <Route exact path=\"/guests\" component={ Guests } />\n            <Route exact path=\"/prehled\" component={ Overview } />\n          </Switch>\n        </Layout>\n      </Router>\n    </ApolloProvider>\n  </ConfigProvider >,\n  document.getElementById('root')\n);\n","export const getCookie = (name: string): string => {\r\n  let cookieValue = \"\"\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[ i ].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}","import { useQuery } from '@apollo/client'\r\nimport { Content } from 'antd/lib/layout/layout'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\"\r\nimport './styles.css'\r\nimport { ReserveCalendar } from '../ReserveCalendar'\r\nimport { Empty, message, Row, Skeleton } from 'antd'\r\nimport { Suites as SuitesData, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\r\nimport { SUITES } from '../../lib/graphql/queries/Suites'\r\n\r\nexport const Home = () => {\r\n\r\n  const { loading: suitesLoading, data: suitesData } = useQuery<SuitesData>(SUITES, {\r\n    onError: () => {\r\n      message.error(\"Chyba při načítání apartmá, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  const getContent = () => {\r\n    return suitesData?.suites?.length !== undefined && suitesData.suites.length > 0 ? (\r\n      <Row gutter={ 8 }>\r\n        {\r\n          suitesData.suites.map((suite: Suites_suites | null) => {\r\n            return suite !== null ? (\r\n              <ReserveCalendar\r\n                key={ suite.id }\r\n                suite={ suite } />\r\n            ) : null\r\n          })\r\n        }\r\n      </Row>\r\n    ) : <Empty />\r\n  }\r\n\r\n  return (\r\n    <Content className=\"app-content\">\r\n      <div className=\"home__listings\">\r\n        <Title level={ 3 } className=\"home__listings-title\">\r\n          Rezervace / Obsazenost\r\n        </Title>\r\n        <Skeleton\r\n          active\r\n          loading={ suitesLoading }>\r\n          { getContent() }\r\n        </Skeleton>\r\n      </div>\r\n    </Content >\r\n  );\r\n}","import { useEffect, useState } from \"react\"\nimport { PlusCircleOutlined, WarningOutlined } from \"@ant-design/icons\"\nimport { Button, List, message, Popconfirm, Skeleton } from \"antd\"\nimport { Content } from \"antd/lib/layout/layout\"\nimport { SuiteDrawer } from \"../SuiteDrawer\"\nimport { ApolloError, useMutation, useQuery } from \"@apollo/client\"\nimport { SUITES } from \"../../lib/graphql/queries/Suites\"\nimport { Suites as SuitesData, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport Title from \"antd/lib/typography/Title\"\nimport \"./styles.css\"\nimport { DELETE_SUITE } from \"../../lib/graphql/mutations/Suite\"\nimport { DeleteSuite, DeleteSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/DeleteSuite\"\n\nexport const Suites = () => {\n\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\n  const [ activeSuite, setActiveSuite ] = useState<Suites_suites>()\n  const [ suites, setSuites ] = useState<Suites_suites[]>([])\n\n  const { loading: queryLoading, data: queryData, refetch } = useQuery<SuitesData>(SUITES, {\n    onError: () => {\n      message.error(\"Chyba serveru, kontaktujte správce\")\n    }\n  })\n  const [ deleteSuite, { loading: removeLoading, data: removeData } ] = useMutation<DeleteSuite, DeleteSuiteVariables>(DELETE_SUITE, {\n    onError: (error: ApolloError) => {\n      console.log('Error: ', error)\n    }\n  })\n\n  useEffect(() => {\n    const suitesData: Suites_suites[] = []\n    queryData?.suites?.forEach((suite: Suites_suites | null) => {\n      if (suite !== null) {\n        suitesData.push(suite)\n      }\n    })\n    setSuites(suitesData)\n  }, [ queryData ])\n\n  useEffect(() => {\n    refetch()\n  }, [ refetch, removeData ])\n\n  const editSuite = (suite: Suites_suites): void => {\n    setActiveSuite(suite)\n    setDrawerVisible(true)\n  }\n\n  const removeSuite = (suite: Suites_suites): void => {\n    deleteSuite({ variables: { suiteId: suite.id } })\n  }\n\n  return (\n    <Content className=\"app-content\">\n      <Title level={ 3 } className=\"home__listings-title\">\n        Seznam apartmá\n      </Title>\n      <List\n        className=\"suites-list\"\n        dataSource={ suites }\n        itemLayout=\"horizontal\"\n        loading={ queryLoading }\n        renderItem={ suite => (\n          <List.Item\n            actions={ [\n              <Button\n                key=\"edit\"\n                onClick={ () => editSuite(suite) }\n                type=\"link\">\n                upravit\n              </Button>,\n              <Popconfirm\n                cancelText=\"Ne\"\n                icon={ <WarningOutlined /> }\n                okText=\"Ano\"\n                onConfirm={ () => removeSuite(suite) }\n                title=\"opravdu odstranit?\">\n                <Button\n                  key=\"remove\"\n                  loading={ removeLoading }\n                  type=\"link\">\n                  odstranit\n                </Button>\n              </Popconfirm>\n            ] }>\n            <Skeleton title={ false } loading={ queryLoading } active>\n              <List.Item.Meta\n                title={ suite.title } />\n            </Skeleton>\n          </List.Item>\n        ) } />\n      <Button\n        icon={ <PlusCircleOutlined /> }\n        onClick={ () => {\n          setActiveSuite(undefined)\n          setDrawerVisible(true)\n        } }\n        type=\"primary\">\n        Přidat apartmá\n      </Button>\n      <SuiteDrawer\n        close={ () => setDrawerVisible(false) }\n        refetch={ refetch }\n        suite={ activeSuite }\n        visible={ drawerVisible } />\n    </Content>\n  )\n}","import { useState } from \"react\"\r\nimport { Button, List, message, Popconfirm } from \"antd\"\r\nimport { Content } from \"antd/lib/layout/layout\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { GuestsFull as GuestsData, GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { PlusCircleOutlined, WarningOutlined } from \"@ant-design/icons\"\r\nimport { useMutation, useQuery } from \"@apollo/client\"\r\nimport { GUESTS_FULL } from \"../../lib/graphql/queries/Guests\"\r\nimport { useEffect } from \"react\"\r\nimport { GuestDrawer } from \"../GuestDrawer\"\r\nimport { DELETE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { DeleteGuest, DeleteGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/DeleteGuest\"\r\n\r\nexport const Guests = () => {\r\n\r\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\r\n  const [ guests, setGuests ] = useState<GuestsFull_guests[]>([])\r\n  const [ selectedGuest, setSelectedGuest ] = useState<GuestsFull_guests | null>(null)\r\n\r\n  const { loading: queryLoading, data: queryData, refetch } = useQuery<GuestsData>(GUESTS_FULL, {\r\n    onError: () => {\r\n      message.error(\"Chyba při načítání hostů, kontaktujte správce\")\r\n    }\r\n  })\r\n  const [ deleteGuest, { loading: deleteLoading, data: deleteData } ] = useMutation<DeleteGuest, DeleteGuestVariables>(DELETE_GUEST, {\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const guestsData: GuestsFull_guests[] = []\r\n    queryData?.guests?.forEach((guest: GuestsFull_guests | null) => {\r\n      if (guest !== null) {\r\n        guestsData.push(guest)\r\n      }\r\n    })\r\n    setGuests(guestsData)\r\n  }, [ queryData ])\r\n\r\n  useEffect(() => {\r\n    refetch()\r\n  }, [ refetch, deleteData ])\r\n\r\n  return (\r\n    <Content className=\"app-content\">\r\n      <Title level={ 3 } className=\"home__listings-title\">\r\n        Hosté\r\n      </Title>\r\n      <List\r\n        className=\"suites-list\"\r\n        dataSource={ guests }\r\n        itemLayout=\"horizontal\"\r\n        loading={ queryLoading }\r\n        renderItem={ (guest: GuestsFull_guests) => (\r\n          <List.Item\r\n            actions={ [\r\n              <Button\r\n                key=\"edit\"\r\n                onClick={ () => {\r\n                  setSelectedGuest(guest)\r\n                  setDrawerVisible(true)\r\n                } }\r\n                type=\"link\">\r\n                upravit\r\n              </Button>,\r\n              <Popconfirm\r\n                cancelText=\"Ne\"\r\n                icon={ <WarningOutlined /> }\r\n                okText=\"Ano\"\r\n                onConfirm={ () => {\r\n                  deleteGuest({ variables: { guestId: guest.id } })\r\n                } }\r\n                title=\"opravdu odstranit?\">\r\n                <Button\r\n                  key=\"remove\"\r\n                  loading={ deleteLoading }\r\n                  type=\"link\">\r\n                  odstranit\r\n                </Button>\r\n              </Popconfirm>\r\n            ] }>\r\n            <List.Item.Meta title={ `${ guest.name } ${ guest.surname }` } />\r\n          </List.Item>\r\n        ) } />\r\n      <Button\r\n        icon={ <PlusCircleOutlined /> }\r\n        onClick={ () => {\r\n          setSelectedGuest(null)\r\n          setDrawerVisible(true)\r\n        } }\r\n        type=\"primary\">\r\n        Přidat hosta\r\n      </Button>\r\n      <GuestDrawer\r\n        close={ () => setDrawerVisible(false) }\r\n        guest={ selectedGuest }\r\n        refetch={ refetch }\r\n        visible={ drawerVisible } />\r\n    </Content>\r\n  )\r\n}","import { useQuery } from \"@apollo/client\"\r\nimport { Empty } from \"antd\"\r\nimport { Content } from \"antd/lib/layout/layout\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { ApexOptions } from \"apexcharts\"\r\nimport { useEffect, useState } from \"react\"\r\nimport ReactApexChart from \"react-apexcharts\"\r\nimport { RESERVATIONS } from \"../../lib/graphql/queries/Reservations\"\r\nimport { Reservations, Reservations_reservations } from \"../../lib/graphql/queries/Reservations/__generated__/Reservations\"\r\nimport { Reservation } from \"../../lib/Types\"\r\nimport \"./styles.css\"\r\n\r\n// https://apexcharts.com/react-chart-demos/timeline-charts/multiple-series-group-rows/\r\nexport const Overview = () => {\r\n\r\n  const [ series, setSeries ] = useState<any[]>([])\r\n  const getColor = (reservationType: string): string => {\r\n    switch (reservationType) {\r\n      case \"Nezávazná Rezervace\":\r\n        return \"#e4e724\"\r\n      case \"Aktuálně Ubytování\":\r\n        return \"#9c88ff\"\r\n      case \"Obydlený Termín\":\r\n        return \"#db913c\"\r\n      case \"Závazná Rezervace\":\r\n      default: return \"#0eca2d\"\r\n    }\r\n  }\r\n  const getTimePadded = (hours: number, minutes: number) => {\r\n    let time = ''\r\n    time += (hours < 10 ? '0' : '') + hours\r\n    time += ':'\r\n    time += (minutes < 10 ? '0' : '') + minutes\r\n    return time\r\n  }\r\n\r\n  const { data, refetch } = useQuery<Reservations>(RESERVATIONS)\r\n\r\n  useEffect(() => {\r\n    const series: any[] = []\r\n    data?.reservations?.forEach((reservation: Reservations_reservations | null) => {\r\n      if (reservation !== null) {\r\n        series.push({\r\n          data: [\r\n            {\r\n              x: `${ reservation.suite.title } (${ reservation.suite.number })`,\r\n              y: [\r\n                new Date(reservation.fromDate).getTime(),\r\n                new Date(reservation.toDate).getTime()\r\n              ]\r\n            }\r\n          ],\r\n          name: Reservation.getType(reservation.type),\r\n          reservation: reservation.id,\r\n          suite: reservation.suite.id\r\n        })\r\n      }\r\n    })\r\n    setSeries(series)\r\n  }, [ data ])\r\n\r\n  useEffect(() => {\r\n    refetch()\r\n  }, [ refetch ])\r\n\r\n  const locateSeries = (index: number) => {\r\n    if (index !== -1) {\r\n      console.warn('Reservation ', series[ index ])\r\n    }\r\n  }\r\n\r\n  const options: ApexOptions = {\r\n    chart: {\r\n      events: {\r\n        click: (_e, _chart, config) => {\r\n          locateSeries(config.seriesIndex)\r\n        }\r\n      },\r\n      height: 350,\r\n      locales: [ {\r\n        name: \"en\",\r\n        options: {\r\n          months: [ \"Leden\", \"Únor\", \"Březen\", \"Duben\", \"Květen\", \"Červen\", \"Červenec\", \"Srpen\", \"Září\", \"Říjen\", \"Listopad\", \"Prosinec\" ],\r\n          shortMonths: [ \"Leden\", \"Únor\", \"Březen\", \"Duben\", \"Květen\", \"Červen\", \"Červenec\", \"Srpen\", \"Září\", \"Říjen\", \"Listopad\", \"Prosinec\" ],\r\n          toolbar: {\r\n            download: \"Stáhnout\",\r\n            pan: \"Panoráma\",\r\n            reset: \"Resetovat Přiblížení\",\r\n            selectionZoom: \"Zvětšení Výběru\",\r\n            zoomIn: \"Přiblížit\",\r\n            zoomOut: \"Oddálit\"\r\n          }\r\n        }\r\n      } ],\r\n      type: \"rangeBar\" as const\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        barHeight: '80%',\r\n        rangeBarGroupRows: true\r\n      }\r\n    },\r\n    colors: [ ({ seriesIndex, w }: { seriesIndex: any, w: any }) => {\r\n      return getColor(w.config.series[ seriesIndex ].name)\r\n    }\r\n    ],\r\n    fill: {\r\n      type: 'solid'\r\n    },\r\n    xaxis: {\r\n      type: 'datetime' as const\r\n    },\r\n    legend: {\r\n      customLegendItems: [\r\n        \"Závazná Rezervace\",\r\n        \"Nezávazná Rezervace\",\r\n        \"Aktuálně Ubytování\",\r\n        \"Obydlený Termín\"\r\n      ],\r\n      markers: {\r\n        width: 12,\r\n        height: 12,\r\n        strokeWidth: 0,\r\n        strokeColor: '#fff',\r\n        fillColors: [\r\n          \"#0eca2d\",\r\n          \"#e4e724\",\r\n          \"#9c88ff\",\r\n          \"#db913c\"\r\n        ],\r\n        radius: 12,\r\n        customHTML: undefined,\r\n        onClick: undefined,\r\n        offsetX: 0,\r\n        offsetY: 0\r\n      },\r\n      position: 'top' as const\r\n    },\r\n    stroke: {\r\n      width: 1\r\n    },\r\n    tooltip: {\r\n      custom: (options) => {\r\n        const tooltipValues = options.ctx.rangeBar.getTooltipValues(options)\r\n        const seriesName = tooltipValues.seriesName.trim().substring(0, tooltipValues.seriesName.trim().length - 1)\r\n        const reservationName = tooltipValues.ylabel.trim().substring(0, tooltipValues.ylabel.trim().length - 1)\r\n        const from = new Date(tooltipValues.start)\r\n        const to = new Date(tooltipValues.end)\r\n        return '<div class=\"apexcharts-tooltip-rangebar\"><div>' +\r\n          `<span class=\"series-name\" style=\"font-weight: bold\">${ reservationName }</span>` +\r\n          '</div><div>' +\r\n          `<span class=\"category\" style=\"color:${ getColor(seriesName) }\">${ tooltipValues.seriesName }</span>` +\r\n          `<span class=\"value start-value\" style=\"font-weight: bold\">${ tooltipValues.startVal } ${ getTimePadded(from.getHours(), from.getMinutes()) }</span>` +\r\n          '<span class=\"separator\"> - </span>' +\r\n          `<span class=\"value end-value\" style=\"font-weight: bold\">${ tooltipValues.endVal } ${ getTimePadded(to.getHours(), to.getMinutes()) }</span>` +\r\n          '</div></div></div>'\r\n      }\r\n    }\r\n  }\r\n\r\n  const getContent = () => {\r\n    return series.length > 0 ? (\r\n      <div id=\"chart\">\r\n        <ReactApexChart series={ series } options={ options } type=\"rangeBar\" height={ 350 }></ReactApexChart>\r\n      </div>\r\n    ) : <Empty />\r\n  }\r\n\r\n  return (\r\n    <Content className=\"app-content\">\r\n      <Title level={ 3 } className=\"home__listings-title\">\r\n        Přehled\r\n      </Title>\r\n      { getContent() }\r\n    </Content>\r\n  )\r\n}"],"sourceRoot":""}