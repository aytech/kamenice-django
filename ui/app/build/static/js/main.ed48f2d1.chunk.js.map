{"version":3,"sources":["sections/AppHeader/assets/mill.svg","sections/AppHeader/components/MenuItems.tsx","sections/AppHeader/index.tsx","lib/components/FormHelper.ts","lib/components/GuestFormHelper.ts","lib/graphql/mutations/Guest/index.ts","sections/GuestDrawer/index.tsx","lib/components/CsCalendarLocale.ts","lib/Constants.ts","lib/Types.ts","lib/components/ReservationFormHelper.ts","lib/graphql/mutations/Reservation/index.ts","sections/ReservationModal/index.tsx","lib/graphql/queries/Reservations/index.ts","sections/GuestDrawerSmall/index.tsx","lib/graphql/queries/Guests/index.ts","sections/ReserveCalendar/index.tsx","lib/graphql/queries/Suites/index.ts","lib/graphql/mutations/Suite/index.ts","sections/SuiteDrawer/index.tsx","index.tsx","lib/Cookie.ts","sections/Home/index.tsx","sections/Suites/index.tsx","sections/Guests/index.tsx","sections/Overview/index.tsx"],"names":["MenuItems","mode","Item","icon","BookOutlined","to","EyeOutlined","IdcardOutlined","HomeOutlined","LoginOutlined","AppHeader","withRouter","location","history","useState","search","setSearch","className","src","logo","alt","placeholder","enterButton","onChange","event","target","value","onSearch","FormHelper","requiredRule","required","message","trim","undefined","GuestFormHelper","ageOptions","label","getGuestResponseErrorList","errorString","Array","from","Object","values","JSON","parse","replaceAll","list","error","phoneCodeRequiredRules","pattern","transform","requiredAlphaRules","requiredNumericRules","CREATE_GUEST","gql","CREATE_GUEST_BASIC","UPDATE_GUEST","DELETE_GUEST","GuestDrawer","close","guest","refetch","visible","Form","useForm","form","useMutation","onCompleted","data","success","createGuest","name","surname","resetFields","onError","updateGuest","confirmClose","setConfirmClose","initialValues","age","address","municipality","addressMunicipality","psc","addressPsc","street","addressStreet","citizenship","selected","email","gender","identity","phone","phoneNumber","visa","visaNumber","emailPrefixIcon","noStyle","MailOutlined","useEffect","closeIcon","onCancel","onConfirm","placement","title","CloseOutlined","onClick","isFieldsTouched","width","footer","validateFields","then","formData","getFieldsValue","variables","new","id","catch","type","footerStyle","padding","textAlign","layout","level","hasFeedback","rules","addonBefore","options","Option","Group","compact","style","marginBottom","CsCalendarLocale","months","weekDays","short","isWeekend","weekStartingIndex","getToday","gregorainTodayObject","toNativeDate","date","Date","year","month","day","getMonthLength","getDate","transformDigit","digit","nextMonth","previousMonth","openMonthSelector","openYearSelector","closeMonthSelector","closeYearSelector","defaultPlaceholder","digitSeparator","yearLetterSkip","isRtl","getDaysWithinMonth","days","index","push","getDaysWithinOverlappingMonths","utils","forEach","length","TransformDate","years","fromMonth","toMonth","idx","keys","shift","getDaysWithinOverlappingYears","emptyReservation","fromDate","moment","roommates","toDate","add","suite","Reservation","key","ReservationFormHelper","mealOptions","reservationOptions","getRequiredRule","guestValidators","validator","_rule","getFieldValue","Promise","resolve","duplicate","filter","reject","Error","roommateValidators","duplicates","CREATE_RESERVATION","DELETE_RESERVATION","UPDATE_RESERVATION","ReservationModal","guests","isOpen","openGuestDrawer","refetchReservations","reservation","createReservation","updateReservation","deleteReservation","deleteConfirmVisible","setDeleteConfirmVisible","guestOptions","setGuestOptions","dateFormat","dates","meal","notes","purpose","roommate","closeModal","setTimeout","submitForm","format","String","footerButtons","cancelText","okText","reservationId","danger","CloseCircleOutlined","PlusCircleOutlined","EditOutlined","RangePicker","showTime","filterOption","input","option","match","toString","toLowerCase","indexOf","showSearch","List","fields","remove","map","fieldKey","restField","align","MinusCircleOutlined","disabled","block","PlusOutlined","TextArea","allowClear","SUITE_RESERVATIONS","RESERVATIONS","GuestDrawerSmall","open","console","GUESTS","GUESTS_FULL","ReserveCalendar","useQuery","suiteId","reservationsData","reservationRefetch","guestsQueryData","guestsRefetch","modalOpen","setModalOpen","guestDrawerOpen","setGuestDrawerOpen","reservedDays","setReservedDays","selectedReservation","setSelectedReservation","getDayClassName","suiteReservations","span","dayValue","rangeDay","find","locale","customDaysClassName","shouldHighlightWeekends","SUITES","CREATE_SUITE","UPDATE_SUITE","DELETE_SUITE","SuiteDrawer","createSuite","reason","updateSuite","number","client","ApolloClient","cache","InMemoryCache","typePolicies","Query","merge","reservations","suites","headers","cookieValue","document","cookie","cookies","split","i","substring","decodeURIComponent","getCookie","uri","ReactDOM","render","csCZ","ApolloProvider","offsetTop","exact","path","component","suitesLoading","loading","suitesData","active","gutter","getContent","drawerVisible","setDrawerVisible","activeSuite","setActiveSuite","setSuites","queryLoading","queryData","deleteSuite","removeLoading","removeData","dataSource","itemLayout","renderItem","actions","editSuite","WarningOutlined","removeSuite","Meta","setGuests","selectedGuest","setSelectedGuest","deleteGuest","deleteLoading","deleteData","guestsData","guestId","getReservationColor","reservationType","reservationsRefetch","groups","setGroups","items","setItems","reservationModalOpen","setReservationModalOpen","findIndex","roomNumber","stackItems","suiteTitle","end_time","group","itemProps","background","start_time","canChangeGroup","canMove","canResize","defaultTimeEnd","defaultTimeStart","lineHeight","onCanvasClick","groupId","time","selectedGroup","hours","minutes","onItemClick","itemId","_e","entry","getElementById"],"mappings":"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","file":"static/js/main.ed48f2d1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mill.1f872c17.svg\";","import { BookOutlined, EyeOutlined, HomeOutlined, IdcardOutlined, LoginOutlined } from \"@ant-design/icons\"\r\nimport { Menu } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const MenuItems = () => {\r\n  return (\r\n    <Menu mode=\"horizontal\">\r\n      <Menu.Item key=\"reservation\" icon={ <BookOutlined /> }>\r\n        <Link to=\"/\">Rezervace</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"overview\" icon={ <EyeOutlined /> }>\r\n        <Link to=\"/prehled\">Přehled</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"guests\" icon={ <IdcardOutlined /> }>\r\n        <Link to=\"/guests\">Hosté</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"suites\" icon={ <HomeOutlined /> }>\r\n        <Link to=\"/apartma\">Apartmá</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"login\" icon={ <LoginOutlined /> }>\r\n        <Link to=\"/login\">Přihlášení</Link>\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport Search from 'antd/lib/input/Search'\r\nimport { Header } from 'antd/lib/layout/layout'\r\nimport './styles.css'\r\nimport logo from './assets/mill.svg'\r\nimport { MenuItems } from './components/MenuItems'\r\n\r\nexport const AppHeader = withRouter(({ location, history }: RouteComponentProps) => {\r\n\r\n  const [ search, setSearch ] = useState(\"\")\r\n\r\n  return (\r\n    <Header className=\"app-header\">\r\n      <div className=\"app-header__logo-search-section\">\r\n        <div className=\"app-header__logo\">\r\n          <Link to=\"/\">\r\n            <img src={ logo } alt=\"Kamenice logo\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"app-header__search-input\">\r\n          <Search\r\n            placeholder=\"\"\r\n            enterButton\r\n            onChange={ (event) => setSearch(event.target.value) }\r\n            onSearch={ () => { } }\r\n            value={ search }\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__menu-section\">\r\n        <MenuItems />\r\n      </div>\r\n    </Header>\r\n  )\r\n})","import { Rule } from \"antd/lib/form\"\r\n\r\ninterface IFormHelper {\r\n  requiredRule: Rule\r\n  trim: (value: string | undefined) => string | undefined\r\n}\r\nexport const FormHelper: IFormHelper = {\r\n  requiredRule: {\r\n    required: true,\r\n    message: \"pole je povinné\"\r\n  },\r\n  trim: (value: string | undefined): string | undefined => {\r\n    return value === undefined ? value : value.trim()\r\n  }\r\n}","import { Rule } from \"antd/lib/form\";\nimport { OptionsType } from \"../Types\";\nimport { FormHelper } from \"./FormHelper\";\n\ninterface IGuestFormHelper {\n  ageOptions: OptionsType[]\n  getGuestResponseErrorList: (errorString: string) => Array<string>\n  phoneCodeRequiredRules: Rule[]\n  requiredAlphaRules: Rule[]\n  requiredNumericRules: Rule[]\n}\n\nexport const GuestFormHelper: IGuestFormHelper = {\n  ageOptions: [\n    {\n      label: \"12+\",\n      value: \"YOUNG\"\n    },\n    {\n      label: \"3-12 let\",\n      value: \"CHILD\"\n    },\n    {\n      label: \"Do 3 let\",\n      value: \"INFANT\"\n    },\n    {\n      label: \"Dospělý\",\n      value: \"ADULT\"\n    }\n  ],\n  getGuestResponseErrorList: (errorString: string) => {\n    try {\n      return Array.from(\n        Object.values(\n          JSON.parse(errorString.replaceAll(\"'\", \"\\\"\"))\n        ), ((list: any) => list[ 0 ])\n      )\n    } catch (error) {\n      return [ \"Chyba serveru, kontaktujte správce\" ]\n    }\n  },\n  phoneCodeRequiredRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte kód ve formátu 420, +420 nebo (420)\",\n      pattern: /^\\+?\\(?[0-9]*\\)?$/,\n      transform: FormHelper.trim\n    }\n  ],\n  requiredAlphaRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte pouze text\",\n      pattern: /^([A-Za-z\\sáÁčČďĎéÉěĚíÍňŇřŘšŠťŤúÚůŮýÝžŽóÓ])+$/,\n      transform: FormHelper.trim\n    }\n  ],\n  requiredNumericRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte pouze čísla\",\n      pattern: /^[\\d\\s]+$/,\n      transform: FormHelper.trim\n    }\n  ]\n}","import { gql } from \"@apollo/client\"\n\nexport const CREATE_GUEST = gql`\n  mutation CreateGuest($data: GuestInput!) {\n    createGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const CREATE_GUEST_BASIC = gql`\n  mutation CreateGuestBasic($data: GuestInput!) {\n    createGuest(data: $data) {\n      guest {\n        email\n        name\n        surname\n      }\n    }\n  }\n`\n\nexport const UPDATE_GUEST = gql`\n  mutation UpdateGuest($data: GuestInput!) {\n    updateGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const DELETE_GUEST = gql`\n  mutation DeleteGuest($guestId: ID!) {\n    deleteGuest(guestId: $guestId) {\n      guest {\n        id\n      }\n    }\n  }\n`","import { useState } from \"react\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm, Select } from \"antd\"\r\nimport { CloseOutlined, MailOutlined } from \"@ant-design/icons\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { Store } from \"rc-field-form/lib/interface\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport \"./styles.css\"\r\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\r\nimport { CREATE_GUEST, UPDATE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuest, CreateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuest\"\r\nimport { GuestsFull, GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { Guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { UpdateGuest, UpdateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/UpdateGuest\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  guest: GuestsFull_guests | null\r\n  refetch: ((variables?: Partial<OperationVariables>) => Promise<ApolloQueryResult<Guests | GuestsFull>>) | undefined\r\n  visible: boolean\r\n}\r\n\r\nexport const GuestDrawer = ({\r\n  close,\r\n  guest,\r\n  refetch,\r\n  visible\r\n}: Props) => {\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ createGuest ] = useMutation<CreateGuest, CreateGuestVariables>(CREATE_GUEST, {\r\n    onCompleted: (data: CreateGuest) => {\r\n      message.success(`Host ${ data.createGuest?.guest?.name } ${ data.createGuest?.guest?.surname } byl přidán`)\r\n      if (refetch !== undefined) {\r\n        refetch()\r\n      }\r\n      form.resetFields()\r\n      close()\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n  const [ updateGuest ] = useMutation<UpdateGuest, UpdateGuestVariables>(UPDATE_GUEST, {\r\n    onCompleted: (data: UpdateGuest) => {\r\n      message.success(`Host ${ data.updateGuest?.guest?.name } ${ data.updateGuest?.guest?.surname } byl upraven`)\r\n      form.resetFields()\r\n      close()\r\n    },\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n  const initialValues: Store = {\r\n    age: guest?.age,\r\n    address: {\r\n      municipality: guest?.addressMunicipality,\r\n      psc: guest?.addressPsc,\r\n      street: guest?.addressStreet\r\n    },\r\n    citizenship: {\r\n      selected: guest?.citizenship\r\n    },\r\n    email: guest?.email,\r\n    gender: guest?.gender,\r\n    identity: guest?.identity,\r\n    name: guest?.name,\r\n    phone: guest?.phoneNumber,\r\n    surname: guest?.surname,\r\n    visa: guest?.visaNumber\r\n  }\r\n  const emailPrefixIcon = (\r\n    <Form.Item name=\"email-prefix\" noStyle>\r\n      <MailOutlined />\r\n    </Form.Item>\r\n  )\r\n\r\n  const closeDrawer = (): void => {\r\n    if (form.isFieldsTouched()) {\r\n      setConfirmClose(true)\r\n    } else {\r\n      close()\r\n    }\r\n  }\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          age: formData.age,\r\n          addressMunicipality: formData.address?.municipality,\r\n          addressPsc: formData.address?.psc,\r\n          addressStreet: formData.address?.street,\r\n          citizenship: formData.citizenship?.selected === undefined ? formData.citizenship?.new : formData.citizenship.selected,\r\n          email: formData.email,\r\n          gender: formData.gender,\r\n          identity: formData.identity,\r\n          name: formData.name,\r\n          phoneNumber: formData.phone,\r\n          surname: formData.surname,\r\n          visaNumber: formData.visa\r\n        }\r\n        if (guest === null) {\r\n          createGuest({ variables: { data: { ...variables } } })\r\n        } else {\r\n          updateGuest({ variables: { data: { id: guest.id, ...variables } } })\r\n        }\r\n      })\r\n      .catch(() => message.error(\"Formulář nelze odeslat, opravte prosím chyby\"))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true) {\r\n      form.resetFields()\r\n    }\r\n  }, [ form, visible ])\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ closeDrawer } />\r\n        </Popconfirm>\r\n      ) }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      width={ 500 }\r\n      visible={ visible }\r\n      footer={\r\n        <>\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            { guest === null ? \"Vytvořit\" : \"Upravit\" }\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        padding: \"16px 20px\",\r\n        textAlign: \"right\"\r\n      } }>\r\n      <Form\r\n        form={ form }\r\n        initialValues={ initialValues }\r\n        layout=\"vertical\"\r\n        name=\"guest\">\r\n        <Title level={ 5 }>Osobní údaje</Title>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Jméno\"\r\n          name=\"name\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Jméno\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Příjmení\"\r\n          name=\"surname\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Příjmení\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Číslo OP\"\r\n          name=\"identity\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input placeholder=\"číslo občanského průkazu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Telefonní Číslo\"\r\n          name=\"phone\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input placeholder=\"číslo\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"E-Mail\"\r\n          name=\"email\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input\r\n            addonBefore={ emailPrefixIcon }\r\n            placeholder=\"e-mail\"\r\n            type=\"email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Věk\"\r\n          name=\"age\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Select\r\n            options={ GuestFormHelper.ageOptions }\r\n            placeholder=\"vyberte ze seznamu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Pohlaví\"\r\n          name=\"gender\">\r\n          <Select\r\n            placeholder=\"vyberte ze seznamu\">\r\n            <Select.Option value=\"M\">Muž</Select.Option>\r\n            <Select.Option value=\"F\">Žena</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Číslo viza\"\r\n          name=\"visa\">\r\n          <Input placeholder=\"číslo visa\" />\r\n        </Form.Item>\r\n        <Title level={ 5 }>Trvalé bydliště</Title>\r\n        <Form.Item\r\n          label=\"Ulice\"\r\n          name={ [ \"address\", \"street\" ] }>\r\n          <Input placeholder=\"ulice\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"PSČ/Obec\">\r\n          <Input.Group compact>\r\n            <Form.Item\r\n              style={ { marginBottom: 0, width: \"50%\" } }\r\n              name={ [ \"address\", \"psc\" ] }>\r\n              <Input placeholder=\"PSČ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={ { marginBottom: 0, width: \"50%\" } }\r\n              name={ [ \"address\", \"municipality\" ] }>\r\n              <Input placeholder=\"Obec\" />\r\n            </Form.Item>\r\n          </Input.Group>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Občanství\">\r\n          <Input.Group compact>\r\n            <Form.Item\r\n              style={ { width: \"50%\" } }\r\n              name={ [ \"citizenship\", \"selected\" ] }>\r\n              <Select style={ { width: \"100%\" } } placeholder=\"ze seznamu\">\r\n                <Select.Option value=\"cze\">CZE</Select.Option>\r\n                <Select.Option value=\"sk\">SK</Select.Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={ { width: \"50%\" } }\r\n              name={ [ \"citizenship\", \"new\" ] }>\r\n              <Input placeholder=\"ručně\" />\r\n            </Form.Item>\r\n          </Input.Group>\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  )\r\n}","import { Day, DayValue, Locale, utils } from \"react-modern-calendar-datepicker\";\r\n\r\nexport const CsCalendarLocale: Locale = {\r\n  months: [\r\n    'Leden',\r\n    'Únor',\r\n    'Březen',\r\n    'Duben',\r\n    'Květen',\r\n    'Červen',\r\n    'Červenec',\r\n    'Srpen',\r\n    'Září',\r\n    'Říjen',\r\n    'Listopad',\r\n    'Prosinec'\r\n  ],\r\n  weekDays: [\r\n    {\r\n      name: 'Neděle', // used for accessibility \r\n      short: 'Ned', // displayed at the top of days' rows\r\n      isWeekend: true, // is it a formal weekend or not?\r\n    },\r\n    {\r\n      name: 'Pondělí',\r\n      short: 'Pon',\r\n    },\r\n    {\r\n      name: 'Úterý',\r\n      short: 'Út',\r\n    },\r\n    {\r\n      name: 'Středa',\r\n      short: 'St',\r\n    },\r\n    {\r\n      name: 'Čtvrtek',\r\n      short: 'Čt',\r\n    },\r\n    {\r\n      name: 'Pátek',\r\n      short: 'Pá',\r\n    },\r\n    {\r\n      name: 'Sobota',\r\n      short: 'Sob',\r\n      isWeekend: true,\r\n    }\r\n  ],\r\n  weekStartingIndex: 0,\r\n  // return a { year: number, month: number, day: number } object\r\n  getToday(gregorainTodayObject) {\r\n    return gregorainTodayObject;\r\n  },\r\n  // return a native JavaScript date here\r\n  toNativeDate(date) {\r\n    return new Date(date.year, date.month - 1, date.day);\r\n  },\r\n  // return a number for date's month length\r\n  getMonthLength(date) {\r\n    return new Date(date.year, date.month, 0).getDate();\r\n  },\r\n  // return a transformed digit to your locale\r\n  transformDigit(digit) {\r\n    return digit;\r\n  },\r\n  // texts in the date picker\r\n  nextMonth: 'Příští Měsíc',\r\n  previousMonth: 'Předchozí Měsíc',\r\n  openMonthSelector: 'Otevřít Výběr Měsíce',\r\n  openYearSelector: 'Otevřít Výběr Roku',\r\n  closeMonthSelector: 'Zavřít Výběr Měsíce',\r\n  closeYearSelector: 'Zavřít Výběr Roku',\r\n  defaultPlaceholder: 'Vybrat...',\r\n  // for input range value\r\n  from: 'od',\r\n  to: 'do',\r\n  // used for input value when multi dates are selected\r\n  digitSeparator: ',',\r\n  // if your provide -2 for example, year will be 2 digited\r\n  yearLetterSkip: 0,\r\n  // is your language rtl or ltr?\r\n  isRtl: false\r\n}\r\n\r\nconst getDaysWithinMonth = (from: number, to: number, month: number, year: number): Day[] => {\r\n  const days: Day[] = []\r\n  for (let index = from; index <= to; index++) {\r\n    days.push({ year: year, month: month, day: index })\r\n  }\r\n  return days\r\n}\r\n\r\nconst getDaysWithinOverlappingMonths = (from: number, to: number, months: number[], year: number): Day[] => {\r\n  const { getMonthLength } = utils(\"en\")\r\n  const days: Day[] = []\r\n  months.forEach((month: number, index: number) => {\r\n    if (index === 0) { // first month, get days till the end of the month\r\n      getDaysWithinMonth(from, getMonthLength({ day: from, month, year }), month, year).forEach((day: Day) => days.push(day))\r\n    } else if (index === months.length - 1) { // get days of te last month\r\n      getDaysWithinMonth(1, to, month, year).forEach((day: Day) => days.push(day))\r\n    } else { // get days of the intermediary month\r\n      getDaysWithinMonth(1, getMonthLength({ day: 1, month, year }), month, year).forEach((day: Day) => days.push(day))\r\n    }\r\n  })\r\n  return days\r\n}\r\n\r\nconst getDaysWithinOverlappingYears = (from: number, to: number, fromMonth: number, toMonth: number, years: number[]) => {\r\n  const { getMonthLength } = utils(\"en\")\r\n  const days: Day[] = []\r\n  years.forEach((year: number, index: number) => {\r\n    const months: number[] = []\r\n    if (index === 0) { // get days from first year\r\n      for (let idx = fromMonth; idx <= 12; idx++) {\r\n        months.push(idx)\r\n      }\r\n      getDaysWithinOverlappingMonths(from, getMonthLength({ day: 1, month: 12, year }), months, year).forEach((day: Day) => days.push(day))\r\n    } else if (index === years.length - 1) { // get days from last year\r\n      for (let idx = 1; idx <= toMonth; idx++) {\r\n        months.push(idx)\r\n      }\r\n      if (months.length > 1) {\r\n        getDaysWithinOverlappingMonths(1, to, months, year).forEach((day: Day) => days.push(day))\r\n      } else {\r\n        getDaysWithinMonth(1, to, months[ 0 ], year).forEach((day: Day) => days.push(day))\r\n      }\r\n    } else { // get days from intermediary year\r\n      const months = Array.from(Array(13).keys())\r\n      months.shift()\r\n      getDaysWithinOverlappingMonths(1, getMonthLength({ day: 1, month: 12, year }), months, year).forEach((day: Day) => days.push(day))\r\n    }\r\n  })\r\n  return days\r\n}\r\n\r\nexport const TransformDate = {\r\n  getDaysFromRange: (from: DayValue, to: DayValue): Day[] => {\r\n    if (from === undefined || from === null || to === undefined || to === null) {\r\n      return []\r\n    }\r\n    if (to.year === from.year) {\r\n      // processing within same year\r\n      if (to.month === from.month) {\r\n        // processing within same month\r\n        return getDaysWithinMonth(from.day, to.day, from.month, from.year)\r\n      } else {\r\n        // processing within overlapping months\r\n        const months = []\r\n        for (let index = from.month; index <= to.month; index++) {\r\n          months.push(index)\r\n        }\r\n        return getDaysWithinOverlappingMonths(from.day, to.day, months, from.year)\r\n      }\r\n    } else {\r\n      // processing within overlapping years\r\n      const years = []\r\n      for (let index = from.year; index <= to.year; index++) {\r\n        years.push(index)\r\n      }\r\n      return getDaysWithinOverlappingYears(from.day, to.day, from.month, to.month, years)\r\n    }\r\n  },\r\n  toLocaleString: (day: DayValue, defaultValue: string) => {\r\n    if (day === undefined || day === null) {\r\n      return defaultValue\r\n    }\r\n    return `${ day?.day } ${ CsCalendarLocale.months[ day.month - 1 ] } ${ day.year }`\r\n  }\r\n}\r\n","import moment from \"moment\"\r\nimport { IReservation } from \"./Types\"\r\n\r\nexport const defaultArrivalHour: number = 14\r\nexport const defaultDepartureHour: number = 10\r\nexport const emptyReservation: IReservation = {\r\n  fromDate: moment(),\r\n  roommates: [],\r\n  toDate: moment().add(1, \"day\"),\r\n  suite: { id: 0 },\r\n  type: \"NONBINDING\"\r\n}","import { Day } from \"react-modern-calendar-datepicker\"\nimport { Moment } from \"moment\"\n\nexport type ReservationType = \"Závazná Rezervace\" | \"Nezávazná Rezervace\" | \"Aktuálně Ubytování\" | \"Obydlený Termín\"\nexport type ReservationTypeKey = \"BINDING\" | \"NONBINDING\" | \"ACCOMMODATED\" | \"INHABITED\"\nexport type ReserveDay = Day & { hour?: number, minute?: number }\n\nexport const Reservation = {\n  getType: (key: ReservationTypeKey): ReservationType => {\n    switch (key) {\n      case \"NONBINDING\":\n        return \"Nezávazná Rezervace\"\n      case \"ACCOMMODATED\":\n        return \"Aktuálně Ubytování\"\n      case \"INHABITED\":\n        return \"Obydlený Termín\"\n      case \"BINDING\":\n      default: return \"Závazná Rezervace\"\n    }\n  }\n}\n\nexport type DrawerType = \"guest\" | \"suite\"\nexport type ReservationMeal = \"BREAKFAST\" | \"HALFBOARD\" | \"NOMEAL\"\n\nexport interface ReservationRange {\n  from: Moment\n  to: Moment\n}\n\nexport interface ReserveRange {\n  id?: number\n  from: ReserveDay\n  to: ReserveDay\n  type: ReservationTypeKey\n}\n\nexport interface Room {\n  id: number\n  name: string\n  reservedRanges: ReserveRange[]\n}\n\ninterface Address {\n  municipality?: string\n  psc?: number\n  street?: string\n}\n\ninterface Citizenship {\n  new?: string\n  selected?: string\n}\n\nexport interface GuestForm {\n  age: string,\n  address?: Address\n  citizenship?: Citizenship\n  email: string\n  gender?: string\n  id?: number\n  name: string\n  identity: string\n  phone: string\n  surname: string\n  visa?: string\n}\n\nexport interface GuestErrorResponse {\n  email: Array<string>\n  gender: Array<string>\n  identity: Array<string>\n  name: Array<string>\n  phone_number: Array<string>\n  surname: Array<string>\n}\n\nexport interface Guest {\n  id: number | string\n}\n\nexport interface Suite {\n  id: number | string\n  number?: number | null\n  title?: string\n}\n\nexport interface IReservation {\n  fromDate: Moment\n  guest?: Guest\n  meal?: ReservationMeal\n  id?: number\n  notes?: string | null\n  purpose?: string | null\n  roommates: Array<Guest>\n  suite: Suite\n  toDate: Moment\n  type: ReservationTypeKey\n}\n\nexport interface SuiteForm {\n  number: number,\n  title: string\n}\n\nexport interface OptionsType {\n  label: string,\n  value: string | number\n}\n\nexport interface CustomGroupFields {\n  roomNumber: number | null\n  suiteTitle: string\n}\n\nexport interface CustomItemFields {\n\n}","import { FormInstance, Rule } from \"antd/lib/form\";\r\nimport { OptionsType, Reservation, ReservationTypeKey } from \"../Types\";\r\n\r\ninterface OID {\r\n  id: number\r\n}\r\n\r\ninterface IReservationFormHelper {\r\n  getRequiredRule: (message: string) => Rule\r\n  guestValidators: (form: FormInstance) => Rule[]\r\n  mealOptions: OptionsType[]\r\n  reservationOptions: (OptionsType & { value: ReservationTypeKey })[]\r\n  roommateValidators: (form: FormInstance) => Rule[]\r\n}\r\n\r\nexport const ReservationFormHelper: IReservationFormHelper = {\r\n  mealOptions: [\r\n    {\r\n      label: \"Bez Stravy\",\r\n      value: \"NOMEAL\"\r\n    },\r\n    {\r\n      label: \"Jen Snídaně\",\r\n      value: \"BREAKFAST\"\r\n    },\r\n    {\r\n      label: \"Polopenze\",\r\n      value: \"HALFBOARD\"\r\n    }\r\n  ],\r\n  reservationOptions: [\r\n    {\r\n      label: Reservation.getType(\"BINDING\"),\r\n      value: \"BINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"NONBINDING\"),\r\n      value: \"NONBINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"ACCOMMODATED\"),\r\n      value: \"ACCOMMODATED\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"INHABITED\"),\r\n      value: \"INHABITED\"\r\n    }\r\n  ],\r\n  getRequiredRule: (message: string): Rule => {\r\n    return { required: true, message }\r\n  },\r\n  guestValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"host nemůže být stejný jako spolubydlící\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const roommates: Array<OID> = form.getFieldValue(\"roommates\")\r\n          if (roommates === undefined || roommates.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          const duplicate = roommates.filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicate === undefined || duplicate.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail guest validation, equals to roommate\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"vyberte hosta\",\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  roommateValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"spolubydlící je již vybrán\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const duplicates: Array<OID> = form.getFieldValue(\"roommates\").filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicates === undefined || duplicates.length <= 1) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, duplicate value\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"spolubydlící nemůže být stejný jako host\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          if (form.getFieldValue(\"guest\") !== value) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, equals to guest\"))\r\n        }\r\n      }\r\n    ]\r\n  },\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_RESERVATION = gql`\r\n  mutation CreateReservation($data: ReservationInput!) {\r\n    createReservation(data: $data) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_RESERVATION = gql`\r\n  mutation DeleteReservation($reservationId: ID!) {\r\n    deleteReservation(reservationId: $reservationId) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_RESERVATION = gql`\r\n  mutation UpdateReservation($data: ReservationInput!) {\r\n    updateReservation(data: $data) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\nimport { Button, DatePicker, Form, Input, message, Modal, Popconfirm, Select, Space } from \"antd\"\nimport { Moment } from \"moment\"\nimport { ApolloError, useMutation } from \"@apollo/client\"\nimport { Store } from \"rc-field-form/lib/interface\"\nimport { CloseCircleOutlined, CloseOutlined, EditOutlined, MinusCircleOutlined, PlusCircleOutlined, PlusOutlined } from \"@ant-design/icons\"\nimport \"./styles.css\"\nimport { IReservation, OptionsType, ReservationTypeKey } from \"../../lib/Types\"\nimport { ReservationFormHelper } from \"../../lib/components/ReservationFormHelper\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { CreateReservation, CreateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/CreateReservation\"\nimport { Guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\nimport { CREATE_RESERVATION, DELETE_RESERVATION, UPDATE_RESERVATION } from \"../../lib/graphql/mutations/Reservation\"\nimport { UpdateReservation, UpdateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/UpdateReservation\"\nimport { ReservationInput } from \"../../lib/graphql/globalTypes\"\nimport { DeleteReservation, DeleteReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/DeleteReservation\"\n\ninterface Props {\n  close: () => void\n  guests: Guests | undefined\n  isOpen: boolean\n  openGuestDrawer: () => void\n  refetchReservations: () => Promise<any>\n  reservation: IReservation\n}\n\nexport const ReservationModal = ({\n  close,\n  guests,\n  isOpen,\n  openGuestDrawer,\n  refetchReservations,\n  reservation,\n}: Props) => {\n\n  const [ createReservation ] = useMutation<CreateReservation, CreateReservationVariables>(CREATE_RESERVATION, {\n    onCompleted: (): void => {\n      message.success(\"Rezervace byla vytvořena!\")\n      refetchReservations()\n      close()\n    },\n    onError: (error: ApolloError): void => {\n      message.error(error.message)\n    }\n  })\n  const [ updateReservation ] = useMutation<UpdateReservation, UpdateReservationVariables>(UPDATE_RESERVATION, {\n    onCompleted: () => {\n      message.success(\"Rezervace byla aktualizována!\")\n      refetchReservations()\n      close()\n    },\n    onError: (error: ApolloError) => {\n      message.error(error.message)\n    }\n  })\n  const [ deleteReservation ] = useMutation<DeleteReservation, DeleteReservationVariables>(DELETE_RESERVATION, {\n    onCompleted: () => {\n      message.success(\"Rezervace byla odstraněna!\")\n      refetchReservations()\n      close()\n    },\n    onError: (error: ApolloError) => {\n      message.error(error)\n    }\n  })\n\n  const [ deleteConfirmVisible, setDeleteConfirmVisible ] = useState<boolean>(false)\n  const [ guestOptions, setGuestOptions ] = useState<OptionsType[]>([])\n  const dateFormat = \"YYYY-MM-DD HH:mm\"\n  const [ form ] = Form.useForm()\n  const initialValues: Store & { type: ReservationTypeKey } = {\n    dates: [ reservation.fromDate, reservation.toDate ],\n    guest: reservation.guest === undefined ? null : reservation.guest.id,\n    meal: reservation.meal,\n    notes: reservation.notes,\n    purpose: reservation.purpose,\n    roommates: Array.from(reservation.roommates, roommate => {\n      return { id: roommate.id }\n    }),\n    type: reservation.type\n  }\n\n  const closeModal = () => {\n    setDeleteConfirmVisible(false)\n    setTimeout(() => { close() })\n  }\n\n  const submitForm = (): void => {\n    const formData = form.getFieldsValue(true)\n    const [ from, to ]: Array<Moment> = form.getFieldValue(\"dates\")\n    const roommates = formData.roommates === undefined ? [] :\n      Array.from(formData.roommates, (data: { id: number }) => data.id)\n\n    const variables: ReservationInput = {\n      fromDate: from.format(dateFormat),\n      guest: formData.guest,\n      meal: formData.meal,\n      notes: formData.notes,\n      purpose: formData.purpose,\n      roommates: roommates,\n      suite: +reservation.suite.id,\n      toDate: to.format(dateFormat),\n      type: formData.type\n    }\n    if (reservation !== undefined && reservation.id !== undefined) {\n      updateReservation({ variables: { data: { ...variables, id: String(reservation.id) } } })\n    } else {\n      createReservation({ variables: { data: variables } })\n    }\n  }\n\n  const getRemoveButton = () => {\n    return reservation !== undefined ? (\n      <Popconfirm\n        cancelText=\"Ne\"\n        key=\"remove\"\n        okText=\"Ano\"\n        onConfirm={ () => {\n          deleteReservation({ variables: { reservationId: String(reservation.id) } })\n        } }\n        title=\"Odstranit rezervaci?\">\n        <Button\n          className=\"cancel-button\"\n          danger\n          icon={ <CloseCircleOutlined /> }>\n          Odstranit\n        </Button>\n      </Popconfirm>\n    ) : null\n  }\n\n  const footerButtons = [\n    getRemoveButton(),\n    <Button\n      key=\"guest\"\n      onClick={ openGuestDrawer }>\n      Přidat hosta\n    </Button>,\n    <Button\n      key=\"create\"\n      icon={ reservation === undefined ? <PlusCircleOutlined /> : <EditOutlined /> }\n      onClick={ () => {\n        form.validateFields()\n          .then(submitForm)\n      } }\n      type=\"primary\">\n      { reservation.id === undefined ? \"Uložit\" : \"Upravit\" }\n    </Button>\n  ]\n\n  useEffect(() => {\n    if (guests?.guests !== undefined && guests?.guests !== null) {\n      setGuestOptions(Array.from(guests?.guests, (guest: any): any => {\n        return {\n          label: `${ guest.name } ${ guest.surname }`,\n          value: guest.id\n        }\n      }))\n    }\n  }, [ guests ])\n\n  // Reset form to update range, has to be after modal is opened,\n  // otherwise the form might not be initialized\n  useEffect(() => {\n    if (isOpen === true) {\n      form.resetFields()\n    }\n  }, [ form, isOpen ])\n\n  return (\n    <Modal\n      closeIcon={ (\n        <Popconfirm\n          onCancel={ () => setDeleteConfirmVisible(false) }\n          onConfirm={ closeModal }\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n          visible={ deleteConfirmVisible }>\n          <CloseOutlined onClick={ () => {\n            if (form.isFieldsTouched()) {\n              setDeleteConfirmVisible(true)\n            } else {\n              closeModal()\n            }\n          } } />\n        </Popconfirm>\n      ) }\n      footer={ footerButtons }\n      title=\"Rezervační formulář\"\n      visible={ isOpen }>\n      <Form\n        form={ form }\n        initialValues={ initialValues }\n        layout=\"vertical\">\n        <Form.Item\n          label=\"Datum Rezervace\"\n          name=\"dates\"\n          required>\n          <DatePicker.RangePicker\n            format={ dateFormat }\n            showTime />\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          label=\"Host\"\n          name=\"guest\"\n          required\n          rules={ ReservationFormHelper.guestValidators(form) }>\n          <Select\n            filterOption={ (input, option): boolean => {\n              const match = option?.label?.toString().toLowerCase().indexOf(input.toLowerCase())\n              return match !== undefined && match >= 0\n            } }\n            options={ guestOptions }\n            showSearch />\n        </Form.Item>\n        <Form.List name=\"roommates\">\n          { (fields, { add, remove }) => (\n            <>\n              { fields.map(({ key, name, fieldKey, ...restField }) => (\n                <Space\n                  align=\"baseline\"\n                  className=\"roommate-list\"\n                  key={ key }>\n                  <Form.Item\n                    hasFeedback\n                    { ...restField }\n                    fieldKey={ [ fieldKey, 'first' ] }\n                    name={ [ name, \"id\" ] }\n                    rules={ ReservationFormHelper.roommateValidators(form) }>\n                    <Select\n                      options={ guestOptions }\n                      showSearch />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={ () => {\n                    remove(name)\n                    form.validateFields()\n                  } } />\n                </Space>\n              )) }\n              <Form.Item>\n                <Button\n                  disabled={ fields.length >= guestOptions.length }\n                  type=\"dashed\"\n                  onClick={ () => add() }\n                  block\n                  icon={ <PlusOutlined /> }>\n                  Přidat spolubydlícího\n                </Button>\n              </Form.Item>\n            </>\n          ) }\n        </Form.List>\n        <Form.Item\n          hasFeedback\n          label=\"Typ Rezervace\"\n          name=\"type\"\n          required\n          rules={ [ ReservationFormHelper.getRequiredRule(\"vyberte typ rezervace\") ] }>\n          <Select\n            options={ ReservationFormHelper.reservationOptions } />\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          label=\"Strava\"\n          name=\"meal\"\n          required\n          rules={ [ FormHelper.requiredRule ] }>\n          <Select\n            options={ ReservationFormHelper.mealOptions } />\n        </Form.Item>\n        <Form.Item\n          label=\"Účel pobytu\"\n          name=\"purpose\">\n          <Input placeholder=\"účel pobytu\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Poznámky\"\n          name=\"notes\">\n          <Input.TextArea\n            placeholder=\"zadejte text\"\n            allowClear />\n        </Form.Item>\n      </Form>\n    </Modal >\n  )\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const SUITE_RESERVATIONS = gql`\r\n  query SuiteReservations($suiteId: Int!) {\r\n    suiteReservations(suiteId: $suiteId) {\r\n      fromDate\r\n      guest {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      id\r\n      meal\r\n      notes\r\n      purpose\r\n      roommates {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      suite {\r\n        id\r\n        title\r\n        number\r\n      }\r\n      toDate\r\n      type\r\n    }\r\n  }\r\n`\r\n\r\nexport const RESERVATIONS = gql`\r\n  query Reservations {\r\n    reservations {\r\n      fromDate\r\n      guest {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      id\r\n      meal\r\n      notes\r\n      purpose\r\n      roommates {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      suite {\r\n        id\r\n        title\r\n        number\r\n      }\r\n      toDate\r\n      type\r\n    }\r\n  }\r\n`","import { CloseOutlined, MailOutlined } from \"@ant-design/icons\"\r\nimport { ApolloError, ApolloQueryResult, useMutation } from \"@apollo/client\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm } from \"antd\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { useState } from \"react\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { CREATE_GUEST_BASIC } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuestBasic, CreateGuestBasicVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuestBasic\"\r\nimport { Guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  open: boolean\r\n  refetch: (variables?: Partial<Guests>) => Promise<ApolloQueryResult<Guests>>\r\n}\r\n\r\nexport const GuestDrawerSmall = ({\r\n  close,\r\n  open,\r\n  refetch\r\n}: Props) => {\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n\r\n  const [ createGuest ] = useMutation<CreateGuestBasic, CreateGuestBasicVariables>(CREATE_GUEST_BASIC, {\r\n    onCompleted: (data: CreateGuestBasic) => {\r\n      message.success(`Host ${ data.createGuest?.guest?.name } ${ data.createGuest?.guest?.surname } byl přidán`)\r\n      refetch()\r\n      close()\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          email: formData.email,\r\n          name: formData.name,\r\n          surname: formData.surname\r\n        }\r\n        createGuest({ variables: { data: variables } })\r\n      })\r\n      .catch(() => console.error(\"Formulář nelze odeslat\"))\r\n  }\r\n\r\n  const closeDrawer = (): void => {\r\n    if (form.isFieldsTouched()) {\r\n      setConfirmClose(true)\r\n    } else {\r\n      close()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ closeDrawer } />\r\n        </Popconfirm>\r\n      ) }\r\n      footer={\r\n        <>\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            Vytvořit\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        textAlign: \"right\"\r\n      } }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      visible={ open }\r\n      width={ 500 }>\r\n      <Form\r\n        form={ form }\r\n        layout=\"vertical\"\r\n        name=\"guest\">\r\n        <Title level={ 5 }>Osobní údaje</Title>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Jméno\"\r\n          name=\"name\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Jméno\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Příjmení\"\r\n          name=\"surname\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Příjmení\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"E-Mail\"\r\n          name=\"email\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input\r\n            addonBefore={ (\r\n              <Form.Item name=\"email-prefix\" noStyle>\r\n                <MailOutlined />\r\n              </Form.Item>\r\n            ) }\r\n            placeholder=\"e-mail\"\r\n            type=\"email\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  )\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const GUESTS = gql`\r\n  query Guests {\r\n    guests {\r\n      id\r\n      name\r\n      surname\r\n    }\r\n  }\r\n`\r\n\r\nexport const GUESTS_FULL = gql`\r\n  query GuestsFull {\r\n    guests {\r\n      age\r\n      addressMunicipality\r\n      addressPsc\r\n      addressStreet\r\n      citizenship\r\n      email\r\n      gender\r\n      identity\r\n      id\r\n      name\r\n      phoneNumber\r\n      surname\r\n      visaNumber\r\n    }\r\n  }\r\n`","import { useState, useEffect } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { Col } from 'antd'\nimport { Calendar, Day, DayValue } from 'react-modern-calendar-datepicker'\nimport { CsCalendarLocale, TransformDate } from '../../lib/components/CsCalendarLocale'\nimport './styles.css'\nimport { defaultArrivalHour, defaultDepartureHour, emptyReservation } from '../../lib/Constants'\nimport { ReservationModal } from '../ReservationModal'\nimport { IReservation, Suite } from '../../lib/Types'\nimport { SuiteReservations as ReservationsData, SuiteReservations_suiteReservations } from '../../lib/graphql/queries/Reservations/__generated__/SuiteReservations'\nimport { SUITE_RESERVATIONS } from '../../lib/graphql/queries/Reservations'\nimport { ReservationType } from '../../lib/graphql/globalTypes'\nimport Title from 'antd/lib/typography/Title'\nimport moment, { Moment } from 'moment'\nimport { GuestDrawerSmall } from '../GuestDrawerSmall'\nimport { Guests } from '../../lib/graphql/queries/Guests/__generated__/Guests'\nimport { GUESTS } from '../../lib/graphql/queries/Guests'\n\ninterface Props {\n  suite: Suite\n}\ntype CustomDayClassNameItem = Day & { className: string, reservationId: string };\n\nexport const ReserveCalendar = ({\n  suite,\n}: Props) => {\n\n  const { data: reservationsData, refetch: reservationRefetch } = useQuery<ReservationsData>(SUITE_RESERVATIONS, {\n    variables: { suiteId: suite.id }\n  })\n  const { data: guestsQueryData, refetch: guestsRefetch } = useQuery<Guests>(GUESTS)\n\n  const [ modalOpen, setModalOpen ] = useState<boolean>(false)\n  const [ guestDrawerOpen, setGuestDrawerOpen ] = useState<boolean>(false)\n  const [ reservedDays, setReservedDays ] = useState<CustomDayClassNameItem[]>([])\n  const [ selectedReservation, setSelectedReservation ] = useState<IReservation>(emptyReservation)\n\n  const getDayClassName = (type: ReservationType) => {\n    switch (type) {\n      case \"BINDING\":\n        return \"greenDay\"\n      case \"NONBINDING\":\n        return \"yellowDay\"\n      case \"ACCOMMODATED\":\n        return \"purpleDay\"\n      case \"INHABITED\":\n        return \"orangeDay\"\n      default: return \"greenDay\"\n    }\n  }\n\n  const setReservationRange = (dayValue: DayValue) => {\n    const rangeDay = reservedDays.find((day: CustomDayClassNameItem) => {\n      return day.year === dayValue?.year\n        && day.month === dayValue.month\n        && day.day === dayValue.day\n    })\n    if (rangeDay !== undefined) {\n      const reservation = reservationsData?.suiteReservations?.find(reservation => reservation?.id === rangeDay.reservationId)\n      if (reservation !== undefined && reservation !== null) {\n        setSelectedReservation({\n          fromDate: moment(reservation.fromDate),\n          guest: { id: reservation.guest.id },\n          meal: reservation.meal,\n          id: +reservation.id,\n          notes: reservation.notes,\n          purpose: reservation.purpose,\n          roommates: reservation.roommates,\n          suite: reservation.suite,\n          toDate: moment(reservation.toDate),\n          type: reservation.type\n        })\n      }\n    }\n    if (rangeDay === undefined && dayValue !== undefined && dayValue !== null) {\n      setSelectedReservation({\n        fromDate: moment([ dayValue.year, dayValue.month - 1, dayValue.day, defaultArrivalHour, 0 ]),\n        roommates: [],\n        suite: { id: suite.id },\n        toDate: moment([ dayValue.year, dayValue.month - 1, dayValue.day + 1, defaultDepartureHour, 0 ]),\n        type: \"NONBINDING\"\n      })\n    }\n    setModalOpen(true)\n  }\n\n  // Add reserved days to calendar based on reservation data from server\n  useEffect(() => {\n    const reservedDays: CustomDayClassNameItem[] = []\n    reservationsData?.suiteReservations?.forEach((reservation: SuiteReservations_suiteReservations | null) => {\n      if (reservation !== null) {\n        const from: Moment = moment(reservation.fromDate)\n        const to: Moment = moment(reservation.toDate)\n        TransformDate.getDaysFromRange(\n          {\n            year: from.year(),\n            month: from.month() + 1,\n            day: from.date()\n          },\n          {\n            year: to.year(),\n            month: to.month() + 1,\n            day: to.date()\n          }).forEach((day: Day) => {\n            reservedDays.push({ className: getDayClassName(reservation.type), reservationId: reservation.id, ...day })\n          })\n      }\n    })\n    setReservedDays(reservedDays)\n  }, [ reservationsData ])\n\n  return (\n    <>\n      <Col\n        span={ 8 }\n        className=\"home__listing\">\n        <Title\n          level={ 4 }\n          className=\"home__listings-title\">\n          { suite.title }\n        </Title>\n        <div className=\"home__calendar\">\n          <Calendar\n            onChange={ setReservationRange }\n            locale={ CsCalendarLocale }\n            customDaysClassName={ reservedDays }\n            shouldHighlightWeekends />\n        </div>\n      </Col>\n      <ReservationModal\n        close={ () => {\n          setSelectedReservation(emptyReservation)\n          setModalOpen(false)\n        } }\n        guests={ guestsQueryData }\n        isOpen={ modalOpen }\n        openGuestDrawer={ () => setGuestDrawerOpen(true) }\n        refetchReservations={ reservationRefetch }\n        reservation={ selectedReservation } />\n      <GuestDrawerSmall\n        close={ () => setGuestDrawerOpen(false) }\n        open={ guestDrawerOpen }\n        refetch={ guestsRefetch } />\n    </>\n  )\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const SUITES = gql`\r\n  query Suites {\r\n    suites {\r\n      id\r\n      title\r\n      number\r\n    }\r\n  }\r\n`","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_SUITE = gql`\r\n  mutation CreateSuite($data: SuiteInput!) {\r\n    createSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_SUITE = gql`\r\n  mutation UpdateSuite($data: SuiteInput!) {\r\n    updateSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_SUITE = gql`\r\n  mutation DeleteSuite($suiteId: ID!) {\r\n    deleteSuite(suiteId: $suiteId) {\r\n      suite {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\nimport { Button, Drawer, Form, Input, message, Popconfirm } from \"antd\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { CloseOutlined } from \"@ant-design/icons\"\nimport { Suites, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport { Store } from \"antd/lib/form/interface\"\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\nimport { CreateSuite, CreateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/CreateSuite\"\nimport { CREATE_SUITE, UPDATE_SUITE } from \"../../lib/graphql/mutations/Suite\"\nimport { SuiteForm } from \"../../lib/Types\"\nimport { SuiteInput } from \"../../lib/graphql/globalTypes\"\nimport { UpdateSuite, UpdateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/UpdateSuite\"\n\ninterface Props {\n  close: () => void\n  refetch: ((variables?: Partial<OperationVariables>) => Promise<ApolloQueryResult<Suites>>)\n  suite: Suites_suites | undefined\n  visible: boolean\n}\n\nexport const SuiteDrawer = ({\n  close,\n  suite,\n  refetch,\n  visible\n}: Props) => {\n\n  const [ createSuite ] = useMutation<CreateSuite, CreateSuiteVariables>(CREATE_SUITE, {\n    onCompleted: (data: CreateSuite): void => {\n      message.success(`Apartmá ${ data.createSuite?.suite?.title } byla vytvořena`)\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (reason: ApolloError): void => {\n      console.error(reason)\n    }\n  })\n  const [ updateSuite ] = useMutation<UpdateSuite, UpdateSuiteVariables>(UPDATE_SUITE, {\n    onCompleted: (data: UpdateSuite): void => {\n      message.success(`Apartmá ${ data.updateSuite?.suite?.title } byla aktualizována`)\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (reason: ApolloError): void => {\n      console.error(reason)\n    }\n  })\n\n  const [ form ] = Form.useForm()\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\n\n  const initialValues: Store = {\n    number: suite?.number,\n    title: suite?.title\n  }\n\n  useEffect(() => {\n    if (visible === true) {\n      form.resetFields()\n    }\n  }, [ form, visible ])\n\n  const submitForm = () => {\n    form.validateFields()\n      .then(() => {\n        const formData: SuiteForm = form.getFieldsValue(true)\n        const variables: { data: SuiteInput } = {\n          data: {\n            number: formData.number,\n            title: formData.title\n          }\n        }\n        if (suite === undefined) {\n          createSuite({ variables })\n        } else {\n          if (form.isFieldsTouched()) {\n            variables.data.id = suite.id\n            updateSuite({ variables })\n          }\n        }\n      })\n      .catch(() => {\n        console.error(\"Form validation failed\");\n      })\n  }\n\n  const closeDrawer = (): void => {\n    if (form.isFieldsTouched()) {\n      setConfirmClose(true)\n    } else {\n      close()\n    }\n  }\n\n  return (\n    <Drawer\n      closeIcon={ (\n        <Popconfirm\n          onCancel={ () => setConfirmClose(false) }\n          onConfirm={ () => {\n            setConfirmClose(false)\n            close()\n          } }\n          placement=\"rightTop\"\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n          visible={ confirmClose }>\n          <CloseOutlined onClick={ closeDrawer } />\n        </Popconfirm>\n      ) }\n      footer={\n        <>\n          <Button\n            onClick={ submitForm }\n            type=\"primary\">\n            Vytvořit\n          </Button>\n        </>\n      }\n      footerStyle={ {\n        textAlign: \"right\"\n      } }\n      placement=\"left\"\n      title=\"Nové apartmá\"\n      visible={ visible }\n      width={ 500 }>\n      <Form\n        form={ form }\n        initialValues={ initialValues }\n        layout=\"vertical\"\n        name=\"suite\">\n        <Form.Item\n          hasFeedback\n          label=\"Název\"\n          name=\"title\"\n          required\n          rules={ [ FormHelper.requiredRule ] }>\n          <Input placeholder=\"název apartmá\" />\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          label=\"Číslo\"\n          name=\"number\"\n          required\n          rules={ [\n            FormHelper.requiredRule,\n            {\n              message: \"zadejte číslo\",\n              pattern: /^[0-9]+$/\n            }\n          ] }>\n          <Input placeholder=\"číslo apartmá\" type=\"number\" />\n        </Form.Item>\n      </Form>\n    </Drawer>\n  )\n}","import ReactDOM from 'react-dom'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport './index.css'\nimport { Affix, ConfigProvider, Layout } from 'antd'\nimport { AppHeader, Home, Overview } from './sections'\nimport { getCookie } from \"./lib/Cookie\"\nimport moment from 'moment'\nimport 'moment/locale/cs'\nimport csCZ from \"antd/lib/locale/cs_CZ\"\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\nimport { Suites } from './sections/Suites'\nimport { Guests } from './sections/Guests'\n\nmoment.locale(\"cs\")\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          guests: {\n            merge: false\n          },\n          reservations: {\n            merge: false\n          },\n          suiteReservations: {\n            merge: false\n          },\n          suites: {\n            merge: false\n          }\n        }\n      }\n    }\n  }),\n  headers: {\n    \"X-CSRFToken\": getCookie(\"csrftoken\")\n  },\n  uri: \"/api\"\n})\n\nReactDOM.render(\n  <ConfigProvider locale={ csCZ }>\n    <ApolloProvider client={ client }>\n      <Router>\n        <Layout id=\"app\">\n          <Affix offsetTop={ 0 } className=\"app__affix-header\">\n            <AppHeader />\n          </Affix>\n          <Switch>\n            <Route exact path=\"/\" component={ Home } />\n            <Route exact path=\"/apartma\" component={ Suites } />\n            <Route exact path=\"/guests\" component={ Guests } />\n            <Route exact path=\"/prehled\" component={ Overview } />\n          </Switch>\n        </Layout>\n      </Router>\n    </ApolloProvider>\n  </ConfigProvider >,\n  document.getElementById('root')\n);\n","export const getCookie = (name: string): string => {\r\n  let cookieValue = \"\"\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[ i ].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}","import { useQuery } from '@apollo/client'\nimport { Content } from 'antd/lib/layout/layout'\nimport Title from 'antd/lib/typography/Title'\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\"\nimport './styles.css'\nimport { ReserveCalendar } from '../ReserveCalendar'\nimport { Empty, message, Row, Skeleton } from 'antd'\nimport { Suites as SuitesData, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport { SUITES } from '../../lib/graphql/queries/Suites'\n\nexport const Home = () => {\n\n  const { loading: suitesLoading, data: suitesData } = useQuery<SuitesData>(SUITES, {\n    onError: () => {\n      message.error(\"Chyba při načítání apartmá, kontaktujte správce\")\n    }\n  })\n\n  const getContent = () => {\n    return suitesData?.suites?.length !== undefined && suitesData.suites.length > 0 ? (\n      <Row gutter={ 8 }>\n        {\n          suitesData.suites.map((suite: Suites_suites | null) => {\n            return suite !== null ? (\n              <ReserveCalendar\n                key={ suite.id }\n                suite={ {\n                  id: +suite.id,\n                  number: suite.number,\n                  title: suite.title\n                } } />\n            ) : null\n          })\n        }\n      </Row>\n    ) : <Empty />\n  }\n\n  return (\n    <Content className=\"app-content\">\n      <div className=\"home__listings\">\n        <Title level={ 3 } className=\"home__listings-title\">\n          Rezervace / Obsazenost\n        </Title>\n        <Skeleton\n          active\n          loading={ suitesLoading }>\n          { getContent() }\n        </Skeleton>\n      </div>\n    </Content >\n  );\n}","import { useEffect, useState } from \"react\"\nimport { PlusCircleOutlined, WarningOutlined } from \"@ant-design/icons\"\nimport { Button, List, message, Popconfirm, Skeleton } from \"antd\"\nimport { Content } from \"antd/lib/layout/layout\"\nimport { SuiteDrawer } from \"../SuiteDrawer\"\nimport { ApolloError, useMutation, useQuery } from \"@apollo/client\"\nimport { SUITES } from \"../../lib/graphql/queries/Suites\"\nimport { Suites as SuitesData, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport Title from \"antd/lib/typography/Title\"\nimport \"./styles.css\"\nimport { DELETE_SUITE } from \"../../lib/graphql/mutations/Suite\"\nimport { DeleteSuite, DeleteSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/DeleteSuite\"\n\nexport const Suites = () => {\n\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\n  const [ activeSuite, setActiveSuite ] = useState<Suites_suites>()\n  const [ suites, setSuites ] = useState<Suites_suites[]>([])\n\n  const { loading: queryLoading, data: queryData, refetch } = useQuery<SuitesData>(SUITES, {\n    onError: () => {\n      message.error(\"Chyba serveru, kontaktujte správce\")\n    }\n  })\n  const [ deleteSuite, { loading: removeLoading, data: removeData } ] = useMutation<DeleteSuite, DeleteSuiteVariables>(DELETE_SUITE, {\n    onError: (reason: ApolloError) => {\n      console.error(reason)\n    }\n  })\n\n  useEffect(() => {\n    const suitesData: Suites_suites[] = []\n    queryData?.suites?.forEach((suite: Suites_suites | null) => {\n      if (suite !== null) {\n        suitesData.push(suite)\n      }\n    })\n    setSuites(suitesData)\n  }, [ queryData ])\n\n  useEffect(() => {\n    refetch()\n  }, [ refetch, removeData ])\n\n  const editSuite = (suite: Suites_suites): void => {\n    setActiveSuite(suite)\n    setDrawerVisible(true)\n  }\n\n  const removeSuite = (suite: Suites_suites): void => {\n    deleteSuite({ variables: { suiteId: suite.id } })\n  }\n\n  return (\n    <Content className=\"app-content\">\n      <Title level={ 3 } className=\"home__listings-title\">\n        Seznam apartmá\n      </Title>\n      <List\n        className=\"suites-list\"\n        dataSource={ suites }\n        itemLayout=\"horizontal\"\n        loading={ queryLoading }\n        renderItem={ suite => (\n          <List.Item\n            actions={ [\n              <Button\n                key=\"edit\"\n                onClick={ () => editSuite(suite) }\n                type=\"link\">\n                upravit\n              </Button>,\n              <Popconfirm\n                cancelText=\"Ne\"\n                icon={ <WarningOutlined /> }\n                okText=\"Ano\"\n                onConfirm={ () => removeSuite(suite) }\n                title=\"opravdu odstranit?\">\n                <Button\n                  key=\"remove\"\n                  loading={ removeLoading }\n                  type=\"link\">\n                  odstranit\n                </Button>\n              </Popconfirm>\n            ] }>\n            <Skeleton title={ false } loading={ queryLoading } active>\n              <List.Item.Meta\n                title={ suite.title } />\n            </Skeleton>\n          </List.Item>\n        ) } />\n      <Button\n        icon={ <PlusCircleOutlined /> }\n        onClick={ () => {\n          setActiveSuite(undefined)\n          setDrawerVisible(true)\n        } }\n        type=\"primary\">\n        Přidat apartmá\n      </Button>\n      <SuiteDrawer\n        close={ () => setDrawerVisible(false) }\n        refetch={ refetch }\n        suite={ activeSuite }\n        visible={ drawerVisible } />\n    </Content>\n  )\n}","import { useState } from \"react\"\r\nimport { Button, List, message, Popconfirm } from \"antd\"\r\nimport { Content } from \"antd/lib/layout/layout\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { GuestsFull as GuestsData, GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { PlusCircleOutlined, WarningOutlined } from \"@ant-design/icons\"\r\nimport { useMutation, useQuery } from \"@apollo/client\"\r\nimport { GUESTS_FULL } from \"../../lib/graphql/queries/Guests\"\r\nimport { useEffect } from \"react\"\r\nimport { GuestDrawer } from \"../GuestDrawer\"\r\nimport { DELETE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { DeleteGuest, DeleteGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/DeleteGuest\"\r\n\r\nexport const Guests = () => {\r\n\r\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\r\n  const [ guests, setGuests ] = useState<GuestsFull_guests[]>([])\r\n  const [ selectedGuest, setSelectedGuest ] = useState<GuestsFull_guests | null>(null)\r\n\r\n  const { loading: queryLoading, data: queryData, refetch } = useQuery<GuestsData>(GUESTS_FULL, {\r\n    onError: () => {\r\n      message.error(\"Chyba při načítání hostů, kontaktujte správce\")\r\n    }\r\n  })\r\n  const [ deleteGuest, { loading: deleteLoading, data: deleteData } ] = useMutation<DeleteGuest, DeleteGuestVariables>(DELETE_GUEST, {\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const guestsData: GuestsFull_guests[] = []\r\n    queryData?.guests?.forEach((guest: GuestsFull_guests | null) => {\r\n      if (guest !== null) {\r\n        guestsData.push(guest)\r\n      }\r\n    })\r\n    setGuests(guestsData)\r\n  }, [ queryData ])\r\n\r\n  useEffect(() => {\r\n    refetch()\r\n  }, [ refetch, deleteData ])\r\n\r\n  return (\r\n    <Content className=\"app-content\">\r\n      <Title level={ 3 } className=\"home__listings-title\">\r\n        Hosté\r\n      </Title>\r\n      <List\r\n        className=\"suites-list\"\r\n        dataSource={ guests }\r\n        itemLayout=\"horizontal\"\r\n        loading={ queryLoading }\r\n        renderItem={ (guest: GuestsFull_guests) => (\r\n          <List.Item\r\n            actions={ [\r\n              <Button\r\n                key=\"edit\"\r\n                onClick={ () => {\r\n                  setSelectedGuest(guest)\r\n                  setDrawerVisible(true)\r\n                } }\r\n                type=\"link\">\r\n                upravit\r\n              </Button>,\r\n              <Popconfirm\r\n                cancelText=\"Ne\"\r\n                icon={ <WarningOutlined /> }\r\n                okText=\"Ano\"\r\n                onConfirm={ () => {\r\n                  deleteGuest({ variables: { guestId: guest.id } })\r\n                } }\r\n                title=\"opravdu odstranit?\">\r\n                <Button\r\n                  key=\"remove\"\r\n                  loading={ deleteLoading }\r\n                  type=\"link\">\r\n                  odstranit\r\n                </Button>\r\n              </Popconfirm>\r\n            ] }>\r\n            <List.Item.Meta title={ `${ guest.name } ${ guest.surname }` } />\r\n          </List.Item>\r\n        ) } />\r\n      <Button\r\n        icon={ <PlusCircleOutlined /> }\r\n        onClick={ () => {\r\n          setSelectedGuest(null)\r\n          setDrawerVisible(true)\r\n        } }\r\n        type=\"primary\">\r\n        Přidat hosta\r\n      </Button>\r\n      <GuestDrawer\r\n        close={ () => setDrawerVisible(false) }\r\n        guest={ selectedGuest }\r\n        refetch={ refetch }\r\n        visible={ drawerVisible } />\r\n    </Content>\r\n  )\r\n}","import { useQuery } from \"@apollo/client\"\nimport { Content } from \"antd/lib/layout/layout\"\nimport Title from \"antd/lib/typography/Title\"\nimport Timeline, { TimelineGroup, TimelineItem } from \"react-calendar-timeline\"\nimport { useEffect, useState } from \"react\"\nimport { RESERVATIONS } from \"../../lib/graphql/queries/Reservations\"\nimport { Reservations, Reservations_reservations } from \"../../lib/graphql/queries/Reservations/__generated__/Reservations\"\nimport \"react-calendar-timeline/lib/Timeline.css\"\nimport \"./styles.css\"\nimport moment, { Moment } from \"moment\"\nimport { CustomGroupFields, CustomItemFields, IReservation } from \"../../lib/Types\"\nimport { ReservationModal } from \"../ReservationModal\"\nimport { Guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\nimport { GUESTS } from \"../../lib/graphql/queries/Guests\"\nimport { GuestDrawerSmall } from \"../GuestDrawerSmall\"\nimport { emptyReservation } from \"../../lib/Constants\"\n\n// https://github.com/namespace-ee/react-calendar-timeline\nexport const Overview = () => {\n\n  const getReservationColor = (reservationType: string): string => {\n    switch (reservationType) {\n      case \"NONBINDING\":\n        return \"#e4e724\"\n      case \"ACCOMMODATED\":\n        return \"#9c88ff\"\n      case \"INHABITED\":\n        return \"#db913c\"\n      case \"BINDING\":\n      default: return \"#0eca2d\"\n    }\n  }\n\n  const { data: reservationsData, refetch: reservationsRefetch } = useQuery<Reservations>(RESERVATIONS)\n  const { data: guestsQueryData, refetch: guestsRefetch } = useQuery<Guests>(GUESTS)\n\n  const [ groups, setGroups ] = useState<TimelineGroup<CustomGroupFields>[]>([])\n  const [ guestDrawerOpen, setGuestDrawerOpen ] = useState<boolean>(false)\n  const [ items, setItems ] = useState<TimelineItem<CustomItemFields, Moment>[]>([])\n  const [ reservationModalOpen, setReservationModalOpen ] = useState<boolean>(false)\n  const [ selectedReservation, setSelectedReservation ] = useState<IReservation>(emptyReservation)\n\n  useEffect(() => {\n    setItems([])\n    const suites: TimelineGroup<CustomGroupFields>[] = []\n    const reservations: TimelineItem<CustomItemFields, Moment>[] = []\n    reservationsData?.reservations?.forEach((reservation: Reservations_reservations | null) => {\n      if (reservation !== null) {\n        const groupIndex = suites.findIndex(suite => suite.id === reservation.suite.id)\n        if (groupIndex === -1) {\n          suites.push({\n            id: reservation.suite.id,\n            roomNumber: reservation.suite.number,\n            stackItems: true,\n            suiteTitle: reservation.suite.title,\n            title: reservation.suite.title\n          })\n        }\n        reservations.push({\n          end_time: moment(reservation.toDate),\n          group: +reservation.suite.id,\n          id: +reservation.id,\n          itemProps: {\n            className: 'weekend',\n            style: {\n              background: getReservationColor(reservation.type)\n            }\n          },\n          start_time: moment(reservation.fromDate),\n          title: `${ reservation.guest.name } ${ reservation.guest.surname }`\n        })\n      }\n    })\n    setGroups(suites)\n    setItems(reservations)\n  }, [ reservationsData ])\n\n  useEffect(() => {\n    reservationsRefetch()\n  }, [ reservationsRefetch ])\n\n  return (\n    <Content className=\"app-content\">\n      <Title level={ 3 } className=\"home__listings-title\">\n        Přehled\n      </Title>\n      <Timeline\n        canChangeGroup={ false }\n        canMove={ false }\n        canResize={ false }\n        defaultTimeEnd={ moment().add(20, \"day\") }\n        defaultTimeStart={ moment().add(-20, \"day\") }\n        groups={ groups }\n        items={ items }\n        lineHeight={ 50 }\n        onCanvasClick={ (groupId: number, time: number) => {\n          const selectedGroup = groups.find(group => group.id === groupId)\n          if (selectedGroup !== undefined) {\n            setSelectedReservation({\n              ...emptyReservation,\n              fromDate: moment(time).hours(14).minutes(0),\n              suite: {\n                id: selectedGroup.id,\n                number: selectedGroup.roomNumber,\n                title: selectedGroup.suiteTitle\n              },\n              toDate: moment(time).add(1, \"day\").hours(10).minutes(0)\n            })\n            setReservationModalOpen(true)\n          }\n        } }\n        onItemClick={ (itemId: number, _e, time: number) => {\n          if (reservationsData?.reservations !== undefined && reservationsData.reservations !== null) {\n            const reservation = reservationsData.reservations.find(entry => entry !== null && entry.id === String(itemId))\n            if (reservation !== undefined && reservation !== null) {\n              setSelectedReservation({\n                fromDate: moment(reservation.fromDate),\n                guest: reservation.guest,\n                id: +reservation.id,\n                meal: reservation.meal,\n                notes: reservation.notes,\n                purpose: reservation.purpose,\n                roommates: reservation.roommates,\n                suite: reservation.suite,\n                toDate: moment(reservation.toDate),\n                type: reservation.type\n              })\n              setReservationModalOpen(true)\n            }\n          }\n        } } />\n      <ReservationModal\n        close={ () => {\n          setSelectedReservation(emptyReservation)\n          setReservationModalOpen(false)\n        } }\n        guests={ guestsQueryData }\n        isOpen={ reservationModalOpen }\n        openGuestDrawer={ () => setGuestDrawerOpen(true) }\n        refetchReservations={ reservationsRefetch }\n        reservation={ selectedReservation } />\n      <GuestDrawerSmall\n        close={ () => setGuestDrawerOpen(false) }\n        open={ guestDrawerOpen }\n        refetch={ guestsRefetch } />\n    </Content>\n  )\n}"],"sourceRoot":""}