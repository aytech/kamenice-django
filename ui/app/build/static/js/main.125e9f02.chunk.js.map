{"version":3,"sources":["sections/AppHeader/assets/mill.svg","sections/AppHeader/index.tsx","lib/components/CsCalendarLocale.ts","sections/ReserveCalendar/index.tsx","index.tsx","sections/Home/index.tsx","sections/Overview/index.tsx"],"names":["AppHeader","withRouter","location","history","useState","search","setSearch","className","to","src","logo","alt","placeholder","enterButton","onChange","event","target","value","onSearch","CsCalendarLocale","months","weekDays","name","short","isWeekend","weekStartingIndex","getToday","gregorainTodayObject","toNativeDate","date","Date","year","month","day","getMonthLength","getDate","transformDigit","digit","nextMonth","previousMonth","openMonthSelector","openYearSelector","closeMonthSelector","closeYearSelector","defaultPlaceholder","from","digitSeparator","yearLetterSkip","isRtl","getDaysWithinMonth","days","index","push","getDaysWithinOverlappingMonths","utils","forEach","length","TransformDate","range","undefined","years","fromMonth","toMonth","idx","Array","keys","shift","getDaysWithinOverlappingYears","defaultValue","ReserveCalendar","room","selectedRange","setSelectedRange","formVisible","setFormVisible","reservationType","setReservationType","reservedDays","setReservedDays","reservationTypeMenu","Item","onClick","it","key","getDaysClassName","span","level","locale","customDaysClassName","shouldHighlightWeekends","title","visible","width","footer","disabled","rangeDays","map","layout","label","inputPlaceholder","dayValue","message","error","overlay","trigger","type","DownOutlined","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","id","offsetTop","exact","path","component","gutter","series","setSeries","getColor","getTimePadded","hours","minutes","time","options","chart","height","locales","shortMonths","toolbar","download","pan","reset","selectionZoom","zoomIn","zoomOut","plotOptions","bar","horizontal","barHeight","rangeBarGroupRows","colors","seriesIndex","w","config","fill","xaxis","legend","position","tooltip","custom","tooltipValues","ctx","rangeBar","getTooltipValues","seriesName","trim","substring","reservationName","ylabel","start","end","startVal","getHours","getMinutes","endVal","useEffect","data","x","y","getTime","document","getElementById"],"mappings":"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","file":"static/js/main.125e9f02.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mill.1f872c17.svg\";","import React, { useState } from 'react'\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport Search from 'antd/lib/input/Search'\r\nimport { Header } from 'antd/lib/layout/layout'\r\nimport './styles.css'\r\nimport logo from './assets/mill.svg'\r\n\r\nexport const AppHeader = withRouter(({ location, history }: RouteComponentProps) => {\r\n\r\n  const [ search, setSearch ] = useState(\"\")\r\n\r\n  return (\r\n    <Header className=\"app-header\">\r\n      <div className=\"app-header__logo-search-section\">\r\n        <div className=\"app-header__logo\">\r\n          <Link to=\"/\">\r\n            {/* <img src=\"https://via.placeholder.com/32\" alt=\"Kamenice logo\" /> */ }\r\n            <img src={ logo } alt=\"Kamenice logo\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"app-header__search-input\">\r\n          <Search\r\n            placeholder=\"\"\r\n            enterButton\r\n            onChange={ (event) => setSearch(event.target.value) }\r\n            onSearch={ () => { } }\r\n            value={ search }\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__menu-section\">\r\n        {/* <MenuItems viewer={ viewer } setViewer={ setViewer } /> */ }\r\n      </div>\r\n    </Header>\r\n  )\r\n})","import { Day, DayRange, DayValue, Locale, utils } from \"react-modern-calendar-datepicker\";\r\n\r\nexport const CsCalendarLocale: Locale = {\r\n  months: [\r\n    'Leden',\r\n    'Únor',\r\n    'Březen',\r\n    'Duben',\r\n    'Květen',\r\n    'Červen',\r\n    'Červenec',\r\n    'Srpen',\r\n    'Září',\r\n    'Říjen',\r\n    'Listopad',\r\n    'Prosinec'\r\n  ],\r\n  weekDays: [\r\n    {\r\n      name: 'Neděle', // used for accessibility \r\n      short: 'Ned', // displayed at the top of days' rows\r\n      isWeekend: true, // is it a formal weekend or not?\r\n    },\r\n    {\r\n      name: 'Pondělí',\r\n      short: 'Pon',\r\n    },\r\n    {\r\n      name: 'Úterý',\r\n      short: 'Út',\r\n    },\r\n    {\r\n      name: 'Středa',\r\n      short: 'St',\r\n    },\r\n    {\r\n      name: 'Čtvrtek',\r\n      short: 'Čt',\r\n    },\r\n    {\r\n      name: 'Pátek',\r\n      short: 'Pá',\r\n    },\r\n    {\r\n      name: 'Sobota',\r\n      short: 'Sob',\r\n      isWeekend: true,\r\n    }\r\n  ],\r\n  weekStartingIndex: 0,\r\n  // return a { year: number, month: number, day: number } object\r\n  getToday(gregorainTodayObject) {\r\n    return gregorainTodayObject;\r\n  },\r\n  // return a native JavaScript date here\r\n  toNativeDate(date) {\r\n    return new Date(date.year, date.month - 1, date.day);\r\n  },\r\n  // return a number for date's month length\r\n  getMonthLength(date) {\r\n    return new Date(date.year, date.month, 0).getDate();\r\n  },\r\n  // return a transformed digit to your locale\r\n  transformDigit(digit) {\r\n    return digit;\r\n  },\r\n  // texts in the date picker\r\n  nextMonth: 'Příští Měsíc',\r\n  previousMonth: 'Předchozí Měsíc',\r\n  openMonthSelector: 'Otevřít Výběr Měsíce',\r\n  openYearSelector: 'Otevřít Výběr Roku',\r\n  closeMonthSelector: 'Zavřít Výběr Měsíce',\r\n  closeYearSelector: 'Zavřít Výběr Roku',\r\n  defaultPlaceholder: 'Vybrat...',\r\n  // for input range value\r\n  from: 'od',\r\n  to: 'do',\r\n  // used for input value when multi dates are selected\r\n  digitSeparator: ',',\r\n  // if your provide -2 for example, year will be 2 digited\r\n  yearLetterSkip: 0,\r\n  // is your language rtl or ltr?\r\n  isRtl: false\r\n}\r\n\r\nconst getDaysWithinMonth = (from: number, to: number, month: number, year: number): Day[] => {\r\n  const days: Day[] = []\r\n  for (let index = from; index <= to; index++) {\r\n    days.push({ year: year, month: month, day: index })\r\n  }\r\n  return days\r\n}\r\n\r\nconst getDaysWithinOverlappingMonths = (from: number, to: number, months: number[], year: number): Day[] => {\r\n  const { getMonthLength } = utils(\"en\")\r\n  const days: Day[] = []\r\n  months.forEach((month: number, index: number) => {\r\n    if (index === 0) { // first month, get days till the end of the month\r\n      getDaysWithinMonth(from, getMonthLength({ day: from, month, year }), month, year).forEach((day: Day) => days.push(day))\r\n    } else if (index === months.length - 1) { // get days of te last month\r\n      getDaysWithinMonth(1, to, month, year).forEach((day: Day) => days.push(day))\r\n    } else { // get days of the intermediary month\r\n      getDaysWithinMonth(1, getMonthLength({ day: 1, month, year }), month, year).forEach((day: Day) => days.push(day))\r\n    }\r\n  })\r\n  return days\r\n}\r\n\r\nconst getDaysWithinOverlappingYears = (from: number, to: number, fromMonth: number, toMonth: number, years: number[]) => {\r\n  const { getMonthLength } = utils(\"en\")\r\n  const days: Day[] = []\r\n  years.forEach((year: number, index: number) => {\r\n    const months: number[] = []\r\n    if (index === 0) { // get days from first year\r\n      for (let idx = fromMonth; idx <= 12; idx++) {\r\n        months.push(idx)\r\n      }\r\n      getDaysWithinOverlappingMonths(from, getMonthLength({ day: 1, month: 12, year }), months, year).forEach((day: Day) => days.push(day))\r\n    } else if (index === years.length - 1) { // get days from last year\r\n      for (let idx = 1; idx <= toMonth; idx++) {\r\n        months.push(idx)\r\n      }\r\n      if (months.length > 1) {\r\n        getDaysWithinOverlappingMonths(1, to, months, year).forEach((day: Day) => days.push(day))\r\n      } else {\r\n        getDaysWithinMonth(1, to, months[ 0 ], year).forEach((day: Day) => days.push(day))\r\n      }\r\n    } else { // get days from intermediary year\r\n      const months = Array.from(Array(13).keys())\r\n      months.shift()\r\n      getDaysWithinOverlappingMonths(1, getMonthLength({ day: 1, month: 12, year }), months, year).forEach((day: Day) => days.push(day))\r\n    }\r\n  })\r\n  return days\r\n}\r\n\r\nexport const TransformDate = {\r\n  getDaysFromRange: (range: DayRange): Day[] => {\r\n    if (range.from === undefined || range.from === null || range.to === undefined || range.to === null) {\r\n      return []\r\n    }\r\n    if (range.to.year === range.from.year) {\r\n      // processing within same year\r\n      if (range.to.month === range.from.month) {\r\n        // processing within same month\r\n        return getDaysWithinMonth(range.from.day, range.to.day, range.from.month, range.from.year)\r\n      } else {\r\n        // processing within overlapping months\r\n        const months = []\r\n        for (let index = range.from.month; index <= range.to.month; index++) {\r\n          months.push(index)\r\n        }\r\n        return getDaysWithinOverlappingMonths(range.from.day, range.to.day, months, range.from.year)\r\n      }\r\n    } else {\r\n      // processing within overlapping years\r\n      const years = []\r\n      for (let index = range.from.year; index <= range.to.year; index++) {\r\n        years.push(index)\r\n      }\r\n      return getDaysWithinOverlappingYears(range.from.day, range.to.day, range.from.month, range.to.month, years)\r\n    }\r\n  },\r\n  toLocaleString: (day: DayValue, defaultValue: string) => {\r\n    if (day === undefined || day === null) {\r\n      return defaultValue\r\n    }\r\n    return `${ day?.day } ${ CsCalendarLocale.months[ day.month - 1 ] } ${ day.year }`\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Col, Dropdown, Form, Menu, message, Modal } from 'antd'\r\nimport { DownOutlined } from '@ant-design/icons'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport DatePicker, { Calendar, Day, DayRange, DayValue } from 'react-modern-calendar-datepicker'\r\nimport { CsCalendarLocale, TransformDate } from '../../lib/components/CsCalendarLocale'\r\nimport './styles.css'\r\n\r\ninterface Props {\r\n  room: { id: number, name: string }\r\n}\r\ntype CustomDayClassNameItem = Day & { className: string };\r\n\r\nexport const ReserveCalendar = ({ room }: Props) => {\r\n  const [ selectedRange, setSelectedRange ] = useState<DayRange>({\r\n    from: null,\r\n    to: null\r\n  })\r\n  const [ formVisible, setFormVisible ] = useState<boolean | undefined>(false)\r\n  const [ reservationType, setReservationType ] = useState<string>(\"Závazná Rezervace\")\r\n  const [ reservedDays, setReservedDays ] = useState<CustomDayClassNameItem[]>([])\r\n  const reservationTypeMenu = (\r\n    <Menu>\r\n      <Menu.Item key=\"Závazná Rezervace\" onClick={ (it) => { setReservationType(it.key) } }>Závazná Rezervace</Menu.Item>\r\n      <Menu.Item key=\"Nezávazná Rezervace\" onClick={ (it) => { setReservationType(it.key) } }>Nezávazná Rezervace</Menu.Item>\r\n      <Menu.Item key=\"Aktuálně Ubytování\" onClick={ (it) => { setReservationType(it.key) } }>Aktuálně Ubytování</Menu.Item>\r\n      <Menu.Item key=\"Obydlený Termín\" onClick={ (it) => { setReservationType(it.key) } }>Obydlený Termín</Menu.Item>\r\n    </Menu>\r\n  )\r\n  const selectReservationEndDate = (dayValue: DayValue) => {\r\n    if (selectedRange.from === undefined || selectedRange.from === null) {\r\n      message.error(\"nejdřív vyberte začátek rezervace\")\r\n      return\r\n    }\r\n    if (dayValue === undefined || dayValue === null) {\r\n      message.error(\"vyberte konec rezervace\")\r\n      return\r\n    }\r\n    const from = CsCalendarLocale.toNativeDate(selectedRange.from)\r\n    const to = CsCalendarLocale.toNativeDate(dayValue)\r\n    if (to < from) {\r\n      message.error(\"konec rezervace nesmí být dříve než začátek\")\r\n      return\r\n    }\r\n    setSelectedRange({\r\n      from: selectedRange.from,\r\n      to: dayValue\r\n    })\r\n  }\r\n\r\n  const getDaysClassName = () => {\r\n    switch (reservationType) {\r\n      case \"Závazná Rezervace\":\r\n        return \"greenDay\"\r\n      case \"Nezávazná Rezervace\":\r\n        return \"yellowDay\"\r\n      case \"Aktuálně Ubytování\":\r\n        return \"purpleDay\"\r\n      case \"Obydlený Termín\":\r\n        return \"orangeDay\"\r\n      default: return \"greenDay\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Col\r\n        span={ 12 }\r\n        className=\"home__listing\">\r\n        <Title level={ 4 } className=\"home__listings-title\"> { room.name }</Title>\r\n        <div className=\"home__calendar\">\r\n          <Calendar\r\n            value={ selectedRange }\r\n            onChange={ (range: DayRange) => {\r\n              setSelectedRange({\r\n                from: range.from,\r\n                to: null\r\n              })\r\n              setFormVisible(true)\r\n            } }\r\n            locale={ CsCalendarLocale }\r\n            customDaysClassName={ reservedDays }\r\n            shouldHighlightWeekends />\r\n        </div>\r\n      </Col>\r\n      <Modal\r\n        title=\"Rezervační formulář\"\r\n        visible={ formVisible }\r\n        width=\"80%\"\r\n        footer={ [\r\n          <Button\r\n            key=\"cancel\"\r\n            onClick={ () => {\r\n              setSelectedRange({ from: null, to: null })\r\n              setFormVisible(false)\r\n            } }>\r\n            Zrušit\r\n          </Button>,\r\n          <Button\r\n            disabled={ selectedRange.from === null || selectedRange.to === null }\r\n            key=\"ok\"\r\n            onClick={ () => {\r\n              const rangeDays: Day[] = TransformDate.getDaysFromRange(selectedRange)\r\n              setReservedDays(rangeDays.map((day: Day) => {\r\n                return { className: getDaysClassName(), ...day }\r\n              }))\r\n              setSelectedRange({ from: null, to: null })\r\n              setFormVisible(false)\r\n            } }>\r\n            OK\r\n          </Button>\r\n        ] }>\r\n        <Form\r\n          layout=\"inline\">\r\n          <Form.Item\r\n            label=\"Začátek Rezervace\"\r\n            name=\"from\">\r\n            <DatePicker\r\n              onChange={ (day: Day) => {\r\n                setSelectedRange({\r\n                  from: day,\r\n                  to: selectedRange.to\r\n                })\r\n              } }\r\n              inputPlaceholder={ TransformDate.toLocaleString(selectedRange.from, \"vyberte datum\") }\r\n              shouldHighlightWeekends\r\n              locale={ CsCalendarLocale }\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Konec Rezervace\"\r\n            name=\"to\">\r\n            <DatePicker\r\n              onChange={ selectReservationEndDate }\r\n              inputPlaceholder={ TransformDate.toLocaleString(selectedRange.to, \"vyberte datum\") }\r\n              shouldHighlightWeekends\r\n              locale={ CsCalendarLocale } />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Typ Rezervace\"\r\n            name=\"type\">\r\n            <Dropdown\r\n              overlay={ reservationTypeMenu }\r\n              trigger={ [ 'click' ] }>\r\n              <Button type=\"link\">\r\n                { reservationType } <DownOutlined />\r\n              </Button>\r\n            </Dropdown>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  )\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport './index.css'\nimport { Affix, Layout } from 'antd'\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\nimport { AppHeader, Home, Overview } from './sections'\n\nconst client = new ApolloClient({\n  uri: \"/api\",\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={ client }>\n    <Router>\n      <Layout id=\"app\">\n        <Affix offsetTop={ 0 } className=\"app__affix-header\">\n          <AppHeader />\n        </Affix>\n        <Switch>\n          <Route exact path=\"/\" component={ Home } />\n          <Route exact path=\"/prehled\" component={ Overview } />\n        </Switch>\n      </Layout>\n    </Router>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n","import { Content } from 'antd/lib/layout/layout'\nimport Title from 'antd/lib/typography/Title'\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\"\nimport './styles.css'\nimport { ReserveCalendar } from '../ReserveCalendar'\nimport { Row } from 'antd'\nimport { Link } from 'react-router-dom'\n\nexport const Home = () => {\n  const rooms = [\n    {\n      id: 1,\n      name: \"Apartman 2 + 2\"\n    },\n    {\n      id: 2,\n      name: \"Apartman 2 + 4\"\n    }\n  ]\n  return (\n    <Content className=\"home\">\n      <div className=\"home__listings\">\n        <Title level={ 3 } className=\"home__listings-title\">\n          Rezervace / Obsazenost\n        </Title>\n        <Row gutter={ 12 }>\n          {\n            rooms.map((room, index) => {\n              return (\n                <ReserveCalendar room={ room } key={ index } />\n              )\n            })\n          }\n        </Row>\n      </div>\n      <Title level={ 3 }>\n        <Link to=\"/prehled\">Přehled</Link>\n      </Title>\n    </Content >\n  );\n}","import { ApexOptions } from \"apexcharts\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\n// https://apexcharts.com/react-chart-demos/timeline-charts/multiple-series-group-rows/\r\nexport const Overview = () => {\r\n\r\n  const [ series, setSeries ] = useState<any[]>([])\r\n  const getColor = (reservationType: string): string => {\r\n    switch (reservationType) {\r\n      case \"Nezávazná Rezervace\":\r\n        return \"#e4e724\"\r\n      case \"Aktuálně Ubytování\":\r\n        return \"#9c88ff\"\r\n      case \"Obydlený Termín\":\r\n        return \"#db913c\"\r\n      case \"Závazná Rezervace\":\r\n      default: return \"#0eca2d\"\r\n    }\r\n  }\r\n  const getTimePadded = (hours: number, minutes: number) => {\r\n    let time = ''\r\n    time += (hours < 10 ? '0' : '') + hours\r\n    time += ':'\r\n    time += (minutes < 10 ? '0' : '') + minutes\r\n    return time\r\n  }\r\n  const options: ApexOptions = {\r\n    chart: {\r\n      height: 350,\r\n      locales: [ {\r\n        name: \"en\",\r\n        options: {\r\n          months: [ \"Leden\", \"Únor\", \"Březen\", \"Duben\", \"Květen\", \"Červen\", \"Červenec\", \"Srpen\", \"Září\", \"Říjen\", \"Listopad\", \"Prosinec\" ],\r\n          shortMonths: [ \"Leden\", \"Únor\", \"Březen\", \"Duben\", \"Květen\", \"Červen\", \"Červenec\", \"Srpen\", \"Září\", \"Říjen\", \"Listopad\", \"Prosinec\" ],\r\n          toolbar: {\r\n            download: \"Stáhnout\",\r\n            pan: \"Panoráma\",\r\n            reset: \"Resetovat Přiblížení\",\r\n            selectionZoom: \"Zvětšení Výběru\",\r\n            zoomIn: \"Přiblížit\",\r\n            zoomOut: \"Oddálit\"\r\n          }\r\n        }\r\n      } ],\r\n      type: \"rangeBar\" as const\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        barHeight: '50%',\r\n        rangeBarGroupRows: true\r\n      }\r\n    },\r\n    colors: [ ({ seriesIndex, w }: { seriesIndex: any, w: any }) => {\r\n      return getColor(w.config.series[ seriesIndex ].name)\r\n    }\r\n    ],\r\n    fill: {\r\n      type: 'solid'\r\n    },\r\n    xaxis: {\r\n      type: 'datetime' as const\r\n    },\r\n    legend: {\r\n      position: 'right' as const\r\n    },\r\n    tooltip: {\r\n      custom: (options) => {\r\n        const tooltipValues = options.ctx.rangeBar.getTooltipValues(options)\r\n        const seriesName = tooltipValues.seriesName.trim().substring(0, tooltipValues.seriesName.trim().length - 1)\r\n        const reservationName = tooltipValues.ylabel.trim().substring(0, tooltipValues.ylabel.trim().length - 1)\r\n        const from = new Date(tooltipValues.start)\r\n        const to = new Date(tooltipValues.end)\r\n        return '<div class=\"apexcharts-tooltip-rangebar\"><div>' +\r\n          `<span class=\"series-name\" style=\"font-weight: bold\">${ reservationName }</span>` +\r\n          '</div><div>' +\r\n          `<span class=\"category\" style=\"color:${ getColor(seriesName) }\">${ tooltipValues.seriesName }</span>` +\r\n          `<span class=\"value start-value\" style=\"font-weight: bold\">${ tooltipValues.startVal } ${ getTimePadded(from.getHours(), from.getMinutes()) }</span>` +\r\n          '<span class=\"separator\"> - </span>' +\r\n          `<span class=\"value end-value\" style=\"font-weight: bold\">${ tooltipValues.endVal } ${ getTimePadded(to.getHours(), to.getMinutes()) }</span>` +\r\n          '</div></div></div>'\r\n      }\r\n    }\r\n  }\r\n\r\n  // For DEV only\r\n  useEffect(() => {\r\n    setSeries([\r\n      {\r\n        name: 'Závazná Rezervace',\r\n        data: [\r\n          {\r\n            x: 'Apartman 2 + 2',\r\n            y: [\r\n              new Date(2021, 5, 1, 14, 0).getTime(),\r\n              new Date(2021, 5, 5, 10, 0).getTime()\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        name: 'Nezávazná Rezervace',\r\n        data: [\r\n          {\r\n            x: 'Apartman 2 + 2',\r\n            y: [\r\n              new Date(2021, 5, 7, 14, 0).getTime(),\r\n              new Date(2021, 5, 12, 10, 0).getTime()\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Aktuálně Ubytování',\r\n        data: [\r\n          {\r\n            x: 'Apartman 2 + 4',\r\n            y: [\r\n              new Date(2021, 5, 3, 14, 0).getTime(),\r\n              new Date(2021, 5, 6, 10, 0).getTime()\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Obydlený Termín',\r\n        data: [\r\n          {\r\n            x: 'Apartman 2 + 4',\r\n            y: [\r\n              new Date(2021, 5, 11, 14, 0).getTime(),\r\n              new Date(2021, 5, 15, 10, 0).getTime()\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Nezávazná Rezervace',\r\n        data: [\r\n          {\r\n            x: 'Apartman 4 + 4',\r\n            y: [\r\n              new Date(2021, 5, 5, 14, 0).getTime(),\r\n              new Date(2021, 5, 10, 10, 0).getTime()\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n    ])\r\n  }, [])\r\n  // -- ! -- //\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <ReactApexChart series={ series } options={ options } type=\"rangeBar\" height={ 350 }></ReactApexChart>\r\n    </div>\r\n  )\r\n}"],"sourceRoot":""}