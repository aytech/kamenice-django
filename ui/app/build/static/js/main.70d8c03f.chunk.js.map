{"version":3,"sources":["sections/AppHeader/assets/mill.svg","sections/AppHeader/index.tsx","lib/components/CsCalendarLocale.ts","sections/ReserveCalendar/index.tsx","index.tsx","sections/Home/index.tsx"],"names":["AppHeader","withRouter","location","history","useState","search","className","to","src","logo","alt","placeholder","enterButton","onChange","event","onSearch","value","CsCalendarLocale","months","weekDays","name","short","isWeekend","weekStartingIndex","getToday","gregorainTodayObject","toNativeDate","date","Date","year","month","day","getMonthLength","getDate","transformDigit","digit","nextMonth","previousMonth","openMonthSelector","openYearSelector","closeMonthSelector","closeYearSelector","defaultPlaceholder","from","digitSeparator","yearLetterSkip","isRtl","TransformDate","defaultValue","undefined","ReserveCalendar","room","selectedRange","setSelectedRange","formVisible","setFormVisible","span","level","range","locale","shouldHighlightWeekends","title","visible","footer","onClick","dayValue","inputPlaceholder","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","id","offsetTop","exact","path","component","gutter","map","index","document","getElementById"],"mappings":"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","file":"static/js/main.70d8c03f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mill.1f872c17.svg\";","import React, { useState } from 'react'\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport Search from 'antd/lib/input/Search'\r\nimport { Header } from 'antd/lib/layout/layout'\r\nimport './styles.css'\r\nimport logo from './assets/mill.svg'\r\n\r\nexport const AppHeader = withRouter(({ location, history }: RouteComponentProps) => {\r\n\r\n  const [ search, setSearch ] = useState(\"\")\r\n\r\n  return (\r\n    <Header className=\"app-header\">\r\n      <div className=\"app-header__logo-search-section\">\r\n        <div className=\"app-header__logo\">\r\n          <Link to=\"/\">\r\n            {/* <img src=\"https://via.placeholder.com/32\" alt=\"Kamenice logo\" /> */ }\r\n            <img src={ logo } alt=\"Kamenice logo\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"app-header__search-input\">\r\n          <Search\r\n            placeholder=\"\"\r\n            enterButton\r\n            onChange={ event => () => { } }\r\n            onSearch={ () => { } }\r\n            value={ search }\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__menu-section\">\r\n        {/* <MenuItems viewer={ viewer } setViewer={ setViewer } /> */ }\r\n      </div>\r\n    </Header>\r\n  )\r\n})","import { DayValue, Locale } from \"react-modern-calendar-datepicker\";\r\n\r\nexport const CsCalendarLocale: Locale = {\r\n  months: [\r\n    'Leden',\r\n    'Únor',\r\n    'Březen',\r\n    'Duben',\r\n    'Květen',\r\n    'Červen',\r\n    'Červenec',\r\n    'Srpen',\r\n    'Září',\r\n    'Říjen',\r\n    'Listopad',\r\n    'Prosinec'\r\n  ],\r\n  weekDays: [\r\n    {\r\n      name: 'Neděle', // used for accessibility \r\n      short: 'Ned', // displayed at the top of days' rows\r\n      isWeekend: true, // is it a formal weekend or not?\r\n    },\r\n    {\r\n      name: 'Pondělí',\r\n      short: 'Pon',\r\n    },\r\n    {\r\n      name: 'Úterý',\r\n      short: 'Út',\r\n    },\r\n    {\r\n      name: 'Středa',\r\n      short: 'St',\r\n    },\r\n    {\r\n      name: 'Čtvrtek',\r\n      short: 'Čt',\r\n    },\r\n    {\r\n      name: 'Pátek',\r\n      short: 'Pá',\r\n    },\r\n    {\r\n      name: 'Sobota',\r\n      short: 'Sob',\r\n      isWeekend: true,\r\n    }\r\n  ],\r\n  weekStartingIndex: 0,\r\n  // return a { year: number, month: number, day: number } object\r\n  getToday(gregorainTodayObject) {\r\n    return gregorainTodayObject;\r\n  },\r\n  // return a native JavaScript date here\r\n  toNativeDate(date) {\r\n    return new Date(date.year, date.month - 1, date.day);\r\n  },\r\n  // return a number for date's month length\r\n  getMonthLength(date) {\r\n    return new Date(date.year, date.month, 0).getDate();\r\n  },\r\n  // return a transformed digit to your locale\r\n  transformDigit(digit) {\r\n    return digit;\r\n  },\r\n  // texts in the date picker\r\n  nextMonth: 'Příští Měsíc',\r\n  previousMonth: 'Předchozí Měsíc',\r\n  openMonthSelector: 'Otevřít Výběr Měsíce',\r\n  openYearSelector: 'Otevřít Výběr Roku',\r\n  closeMonthSelector: 'Zavřít Výběr Měsíce',\r\n  closeYearSelector: 'Zavřít Výběr Roku',\r\n  defaultPlaceholder: 'Vybrat...',\r\n  // for input range value\r\n  from: 'od',\r\n  to: 'do',\r\n  // used for input value when multi dates are selected\r\n  digitSeparator: ',',\r\n  // if your provide -2 for example, year will be 2 digited\r\n  yearLetterSkip: 0,\r\n  // is your language rtl or ltr?\r\n  isRtl: false\r\n}\r\n\r\nexport const TransformDate = {\r\n  toLocaleString: (day: DayValue, defaultValue: string) => {\r\n    if (day === undefined || day === null) {\r\n      return defaultValue\r\n    }\r\n    return `${ day?.day } ${ CsCalendarLocale.months[ day.month ] } ${ day.year }`\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Col, Modal } from 'antd'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport DatePicker, { Calendar, DayRange, DayValue } from 'react-modern-calendar-datepicker'\r\nimport { CsCalendarLocale, TransformDate } from '../../lib/components/CsCalendarLocale'\r\n\r\ninterface Props {\r\n  room: { id: number, name: string }\r\n}\r\n\r\nexport const ReserveCalendar = ({ room }: Props) => {\r\n  const [ selectedRange, setSelectedRange ] = useState<DayRange>({\r\n    from: null,\r\n    to: null\r\n  })\r\n  const [ formVisible, setFormVisible ] = useState<boolean | undefined>(false)\r\n\r\n  return (\r\n    <>\r\n      <Col\r\n        span={ 12 }\r\n        className=\"home__listing\">\r\n        <Title level={ 4 } className=\"home__listings-title\"> { room.name }</Title>\r\n        <div className=\"home__calendar\">\r\n          <Calendar\r\n            value={ selectedRange }\r\n            onChange={ (range: DayRange) => {\r\n              setSelectedRange({\r\n                from: range.from,\r\n                to: null\r\n              })\r\n              setFormVisible(true)\r\n            } }\r\n            locale={ CsCalendarLocale }\r\n            shouldHighlightWeekends />\r\n        </div>\r\n      </Col>\r\n      <Modal\r\n        title=\"Rezervační formulář\"\r\n        visible={ formVisible }\r\n        footer={ [\r\n          <Button\r\n            key=\"cancel\"\r\n            onClick={ () => {\r\n              setSelectedRange({ from: null, to: null })\r\n              setFormVisible(false)\r\n            } }>\r\n            Zrušit\r\n          </Button>,\r\n          <Button\r\n            key=\"ok\"\r\n            onClick={ () => {\r\n              setFormVisible(false)\r\n            } }>\r\n            OK\r\n          </Button>\r\n        ] }>\r\n        <DatePicker\r\n          onChange={ (dayValue: DayValue) => {\r\n            setSelectedRange({\r\n              from: dayValue,\r\n              to: selectedRange.to\r\n            })\r\n          } }\r\n          inputPlaceholder={ TransformDate.toLocaleString(selectedRange.from, \"Začátek rezervace\") }\r\n          shouldHighlightWeekends\r\n          locale={ CsCalendarLocale }\r\n        />\r\n        <DatePicker\r\n          onChange={ (dayValue: DayValue) => {\r\n            setSelectedRange({\r\n              from: selectedRange.from,\r\n              to: dayValue\r\n            })\r\n          } }\r\n          inputPlaceholder={ TransformDate.toLocaleString(selectedRange.to, \"Konec rezervace\") }\r\n          shouldHighlightWeekends\r\n          locale={ CsCalendarLocale } />\r\n      </Modal>\r\n    </>\r\n  )\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport './index.css'\nimport { Affix, Layout } from 'antd'\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\nimport { AppHeader, Home } from './sections'\n\nconst client = new ApolloClient({\n  uri: \"/api\",\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={ client }>\n    <Router>\n      <Layout id=\"app\">\n        <Affix offsetTop={ 0 } className=\"app__affix-header\">\n          <AppHeader />\n        </Affix>\n        <Switch>\n          <Route exact path=\"/\" component={ Home } />\n        </Switch>\n      </Layout>\n    </Router>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n","import { Content } from 'antd/lib/layout/layout'\nimport Title from 'antd/lib/typography/Title'\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\"\nimport './styles.css'\nimport { ReserveCalendar } from '../ReserveCalendar'\nimport { Row } from 'antd'\n\nexport const Home = () => {\n  const rooms = [\n    {\n      id: 1,\n      name: \"Apartman 2 + 2\"\n    },\n    {\n      id: 2,\n      name: \"Apartman 2 + 2\"\n    },\n    {\n      id: 3,\n      name: \"Apartman 2 + 2\"\n    },\n    {\n      id: 4,\n      name: \"Apartman 2 + 4\"\n    }\n  ]\n  return (\n    <Content className=\"home\">\n      <div className=\"home__listings\">\n        <Title level={ 3 } className=\"home__listings-title\">\n          Rezervace / Obsazenost\n        </Title>\n        <Row gutter={ 12 }>\n          {\n            rooms.map((room, index) => {\n              return (\n                <ReserveCalendar room={ room } key={ index } />\n              )\n            })\n          }\n        </Row>\n      </div>\n    </Content >\n  );\n}"],"sourceRoot":""}