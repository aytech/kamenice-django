{"version":3,"sources":["sections/AppHeader/assets/mill.svg","sections/AppHeader/components/MenuItems.tsx","sections/AppHeader/index.tsx","lib/components/FormHelper.ts","lib/components/GuestFormHelper.ts","lib/graphql/mutations/Guest/index.ts","sections/GuestDrawer/index.tsx","lib/components/CsCalendarLocale.ts","lib/Types.ts","lib/components/ReservationFormHelper.ts","lib/graphql/mutations/Reservation/index.ts","lib/graphql/queries/Guests/index.ts","sections/ReservationModal/index.tsx","lib/graphql/queries/Reservations/index.ts","sections/ReserveCalendar/index.tsx","lib/Constants.ts","lib/graphql/queries/Suites/index.ts","lib/graphql/mutations/Suite/index.ts","sections/SuiteDrawer/index.tsx","index.tsx","lib/Cookie.ts","sections/Home/index.tsx","sections/Suites/index.tsx","sections/Guests/index.tsx","sections/Overview/index.tsx"],"names":["MenuItems","mode","Item","icon","BookOutlined","to","EyeOutlined","IdcardOutlined","HomeOutlined","LoginOutlined","AppHeader","withRouter","location","history","useState","search","setSearch","className","src","logo","alt","placeholder","enterButton","onChange","event","target","value","onSearch","FormHelper","requiredRule","required","message","trim","undefined","GuestFormHelper","ageOptions","label","getGuestResponseErrorList","errorString","Array","from","Object","values","JSON","parse","replaceAll","list","error","phoneCodeRequiredRules","pattern","transform","requiredAlphaRules","requiredNumericRules","CREATE_GUEST","gql","UPDATE_GUEST","DELETE_GUEST","GuestDrawer","close","guest","refetch","visible","Form","useForm","form","useMutation","onCompleted","data","success","createGuest","name","surname","resetFields","onError","dataSource","renderItem","item","size","updateGuest","confirmClose","setConfirmClose","initialValues","age","address","municipality","addressMunicipality","psc","addressPsc","street","addressStreet","citizenship","selected","email","gender","identity","phone","phoneNumber","visa","visaNumber","emailPrefixIcon","noStyle","MailOutlined","closeIcon","onCancel","onConfirm","placement","title","CloseOutlined","onClick","isFieldsTouched","width","footer","validateFields","then","formData","getFieldsValue","variables","new","id","catch","type","footerStyle","padding","textAlign","layout","level","hasFeedback","rules","addonBefore","options","Option","Group","compact","style","marginBottom","CsCalendarLocale","months","weekDays","short","isWeekend","weekStartingIndex","getToday","gregorainTodayObject","toNativeDate","date","Date","year","month","day","getMonthLength","getDate","transformDigit","digit","nextMonth","previousMonth","openMonthSelector","openYearSelector","closeMonthSelector","closeYearSelector","defaultPlaceholder","digitSeparator","yearLetterSkip","isRtl","getDaysWithinMonth","days","index","push","getDaysWithinOverlappingMonths","utils","forEach","length","TransformDate","years","fromMonth","toMonth","idx","keys","shift","getDaysWithinOverlappingYears","Reservation","key","ReservationFormHelper","mealOptions","reservationOptions","getRequiredRule","guestValidators","validator","_rule","roommates","getFieldValue","Promise","resolve","duplicate","filter","reject","Error","roommateValidators","duplicates","CREATE_RESERVATION","DELETE_RESERVATION","UPDATE_RESERVATION","GUESTS","GUESTS_FULL","ReservationModal","isOpen","range","refetchReservations","reservation","suite","guestsQueryData","useQuery","createReservation","updateReservation","deleteReservation","guestOptions","setGuestOptions","dateFormat","dates","meal","notes","purpose","roommate","submitForm","fromDate","format","toDate","footerButtons","cancelText","okText","reservationId","danger","CloseCircleOutlined","PlusCircleOutlined","EditOutlined","useEffect","guests","RangePicker","showTime","filterOption","input","option","match","toString","toLowerCase","indexOf","showSearch","List","fields","add","remove","map","fieldKey","restField","align","console","log","MinusCircleOutlined","disabled","block","PlusOutlined","TextArea","allowClear","SUITE_RESERVATIONS","RESERVATIONS","ReserveCalendar","suiteId","reservationsData","reservedRange","setReservedRange","modalOpen","setModalOpen","reservedDays","setReservedDays","selectedReservation","setSelectedReservation","getDayClassName","suiteReservations","moment","span","dayValue","rangeDay","find","locale","customDaysClassName","shouldHighlightWeekends","SUITES","CREATE_SUITE","UPDATE_SUITE","DELETE_SUITE","SuiteDrawer","createSuite","updateSuite","number","client","ApolloClient","cache","InMemoryCache","typePolicies","Query","merge","reservations","suites","headers","cookieValue","document","cookie","cookies","split","i","substring","decodeURIComponent","getCookie","uri","ReactDOM","render","csCZ","ApolloProvider","offsetTop","exact","path","component","suitesLoading","loading","suitesData","active","gutter","getContent","drawerVisible","setDrawerVisible","activeSuite","setActiveSuite","setSuites","queryLoading","queryData","deleteSuite","removeLoading","removeData","itemLayout","actions","editSuite","WarningOutlined","removeSuite","Meta","setGuests","selectedGuest","setSelectedGuest","deleteGuest","deleteLoading","deleteData","guestsData","guestId","series","setSeries","getColor","reservationType","getTimePadded","hours","minutes","time","x","y","getTime","chart","events","click","_e","_chart","config","seriesIndex","warn","height","locales","shortMonths","toolbar","download","pan","reset","selectionZoom","zoomIn","zoomOut","plotOptions","bar","horizontal","barHeight","rangeBarGroupRows","colors","w","fill","xaxis","legend","customLegendItems","markers","strokeWidth","strokeColor","fillColors","radius","customHTML","offsetX","offsetY","position","stroke","tooltip","custom","tooltipValues","ctx","rangeBar","getTooltipValues","seriesName","reservationName","ylabel","start","end","startVal","getHours","getMinutes","endVal","getElementById"],"mappings":"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","file":"static/js/main.1146c420.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mill.1f872c17.svg\";","import { BookOutlined, EyeOutlined, HomeOutlined, IdcardOutlined, LoginOutlined } from \"@ant-design/icons\"\r\nimport { Menu } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const MenuItems = () => {\r\n  return (\r\n    <Menu mode=\"horizontal\">\r\n      <Menu.Item key=\"reservation\" icon={ <BookOutlined /> }>\r\n        <Link to=\"/\">Rezervace</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"overview\" icon={ <EyeOutlined /> }>\r\n        <Link to=\"/prehled\">Přehled</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"guests\" icon={ <IdcardOutlined /> }>\r\n        <Link to=\"/guests\">Hosté</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"suites\" icon={ <HomeOutlined /> }>\r\n        <Link to=\"/apartma\">Apartmá</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"login\" icon={ <LoginOutlined /> }>\r\n        <Link to=\"/login\">Přihlášení</Link>\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport Search from 'antd/lib/input/Search'\r\nimport { Header } from 'antd/lib/layout/layout'\r\nimport './styles.css'\r\nimport logo from './assets/mill.svg'\r\nimport { MenuItems } from './components/MenuItems'\r\n\r\nexport const AppHeader = withRouter(({ location, history }: RouteComponentProps) => {\r\n\r\n  const [ search, setSearch ] = useState(\"\")\r\n\r\n  return (\r\n    <Header className=\"app-header\">\r\n      <div className=\"app-header__logo-search-section\">\r\n        <div className=\"app-header__logo\">\r\n          <Link to=\"/\">\r\n            <img src={ logo } alt=\"Kamenice logo\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"app-header__search-input\">\r\n          <Search\r\n            placeholder=\"\"\r\n            enterButton\r\n            onChange={ (event) => setSearch(event.target.value) }\r\n            onSearch={ () => { } }\r\n            value={ search }\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__menu-section\">\r\n        <MenuItems />\r\n      </div>\r\n    </Header>\r\n  )\r\n})","import { Rule } from \"antd/lib/form\"\r\n\r\ninterface IFormHelper {\r\n  requiredRule: Rule\r\n  trim: (value: string | undefined) => string | undefined\r\n}\r\nexport const FormHelper: IFormHelper = {\r\n  requiredRule: {\r\n    required: true,\r\n    message: \"pole je povinné\"\r\n  },\r\n  trim: (value: string | undefined): string | undefined => {\r\n    return value === undefined ? value : value.trim()\r\n  }\r\n}","import { Rule } from \"antd/lib/form\";\r\nimport { OptionsType } from \"../Types\";\r\nimport { FormHelper } from \"./FormHelper\";\r\n\r\ninterface IGuestFormHelper {\r\n  ageOptions: OptionsType[]\r\n  getGuestResponseErrorList: (errorString: string) => Array<string>\r\n  phoneCodeRequiredRules: Rule[]\r\n  requiredAlphaRules: Rule[]\r\n  requiredNumericRules: Rule[]\r\n}\r\n\r\nexport const GuestFormHelper: IGuestFormHelper = {\r\n  ageOptions: [\r\n    {\r\n      label: \"12+\",\r\n      value: \"ADULT\"\r\n    },\r\n    {\r\n      label: \"3-12 let\",\r\n      value: \"YOUNG\"\r\n    },\r\n    {\r\n      label: \"Do 3 let\",\r\n      value: \"CHILD\"\r\n    }\r\n  ],\r\n  getGuestResponseErrorList: (errorString: string) => {\r\n    try {\r\n      return Array.from(\r\n        Object.values(\r\n          JSON.parse(errorString.replaceAll(\"'\", \"\\\"\"))\r\n        ), ((list: any) => list[ 0 ])\r\n      )\r\n    } catch (error) {\r\n      return [ \"Chyba serveru, kontaktujte správce\" ]\r\n    }\r\n  },\r\n  phoneCodeRequiredRules: [\r\n    FormHelper.requiredRule,\r\n    {\r\n      message: \"zadejte kód ve formátu 420, +420 nebo (420)\",\r\n      pattern: /^\\+?\\(?[0-9]*\\)?$/,\r\n      transform: FormHelper.trim\r\n    }\r\n  ],\r\n  requiredAlphaRules: [\r\n    FormHelper.requiredRule,\r\n    {\r\n      message: \"zadejte pouze text\",\r\n      pattern: /^([A-Za-z\\s])+$/,\r\n      transform: FormHelper.trim\r\n    }\r\n  ],\r\n  requiredNumericRules: [\r\n    FormHelper.requiredRule,\r\n    {\r\n      message: \"zadejte pouze čísla\",\r\n      pattern: /^[\\d\\s]+$/,\r\n      transform: FormHelper.trim\r\n    }\r\n  ]\r\n}","import { gql } from 'apollo-boost'\r\n\r\nexport const CREATE_GUEST = gql`\r\n  mutation CreateGuest($data: GuestInput!) {\r\n    createGuest(data: $data) {\r\n      guest {\r\n        addressMunicipality\r\n        addressPsc\r\n        addressStreet\r\n        citizenship\r\n        email\r\n        gender\r\n        identity\r\n        id\r\n        name\r\n        phoneNumber\r\n        surname\r\n        visaNumber\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_GUEST = gql`\r\n  mutation UpdateGuest($data: GuestInput!) {\r\n    updateGuest(data: $data) {\r\n      guest {\r\n        addressMunicipality\r\n        addressPsc\r\n        addressStreet\r\n        citizenship\r\n        email\r\n        gender\r\n        identity\r\n        id\r\n        name\r\n        phoneNumber\r\n        surname\r\n        visaNumber\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_GUEST = gql`\r\n  mutation DeleteGuest($guestId: ID!) {\r\n    deleteGuest(guestId: $guestId) {\r\n      guest {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useState } from \"react\"\r\nimport { Button, Drawer, Form, Input, List, message, Popconfirm, Select } from \"antd\"\r\nimport { CloseOutlined, MailOutlined } from \"@ant-design/icons\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { Store } from \"rc-field-form/lib/interface\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport \"./styles.css\"\r\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\r\nimport { CREATE_GUEST, UPDATE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuest, CreateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuest\"\r\nimport { GuestsFull, GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { Guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { UpdateGuest, UpdateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/UpdateGuest\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  guest: GuestsFull_guests | null\r\n  refetch: ((variables?: Partial<OperationVariables>) => Promise<ApolloQueryResult<Guests | GuestsFull>>) | undefined\r\n  visible: boolean\r\n}\r\n\r\nexport const GuestDrawer = ({\r\n  close,\r\n  guest,\r\n  refetch,\r\n  visible\r\n}: Props) => {\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ createGuest ] = useMutation<CreateGuest, CreateGuestVariables>(CREATE_GUEST, {\r\n    onCompleted: (data: CreateGuest) => {\r\n      message.success(`Host ${ data.createGuest?.guest?.name } ${ data.createGuest?.guest?.surname } byl přidán`)\r\n      if (refetch !== undefined) {\r\n        refetch()\r\n      }\r\n      form.resetFields()\r\n      close()\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      message.error(\r\n        <List\r\n          dataSource={ GuestFormHelper.getGuestResponseErrorList(error.message) }\r\n          renderItem={ item => <List.Item>{ item }</List.Item> }\r\n          size=\"small\" />\r\n      )\r\n    }\r\n  })\r\n  const [ updateGuest ] = useMutation<UpdateGuest, UpdateGuestVariables>(UPDATE_GUEST, {\r\n    onCompleted: (data: UpdateGuest) => {\r\n      message.success(`Host ${ data.updateGuest?.guest?.name } ${ data.updateGuest?.guest?.surname } byl upraven`)\r\n      form.resetFields()\r\n      close()\r\n    },\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n  const initialValues: Store = {\r\n    age: guest?.age,\r\n    address: {\r\n      municipality: guest?.addressMunicipality,\r\n      psc: guest?.addressPsc,\r\n      street: guest?.addressStreet\r\n    },\r\n    citizenship: {\r\n      selected: guest?.citizenship\r\n    },\r\n    email: guest?.email,\r\n    gender: guest?.gender,\r\n    identity: guest?.identity,\r\n    name: guest?.name,\r\n    phone: guest?.phoneNumber,\r\n    surname: guest?.surname,\r\n    visa: guest?.visaNumber\r\n  }\r\n  const emailPrefixIcon = (\r\n    <Form.Item name=\"email-prefix\" noStyle>\r\n      <MailOutlined />\r\n    </Form.Item>\r\n  )\r\n\r\n  const closeDrawer = (): void => {\r\n    if (form.isFieldsTouched()) {\r\n      setConfirmClose(true)\r\n    } else {\r\n      close()\r\n    }\r\n  }\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          age: formData.age,\r\n          addressMunicipality: formData.address?.municipality,\r\n          addressPsc: formData.address?.psc,\r\n          addressStreet: formData.address?.street,\r\n          citizenship: formData.citizenship?.selected === undefined ? formData.citizenship?.new : formData.citizenship.selected,\r\n          email: formData.email,\r\n          gender: formData.gender,\r\n          identity: formData.identity,\r\n          name: formData.name,\r\n          phoneNumber: formData.phone,\r\n          surname: formData.surname,\r\n          visaNumber: formData.visa\r\n        }\r\n        if (guest === null) {\r\n          createGuest({ variables: { data: { ...variables } } })\r\n        } else {\r\n          updateGuest({ variables: { data: { id: guest.id, ...variables } } })\r\n        }\r\n      })\r\n      .catch(() => message.error(\"Formulář nelze odeslat, opravte prosím chyby\"))\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ closeDrawer } />\r\n        </Popconfirm>\r\n      ) }\r\n      placement=\"left\"\r\n      title=\"Nový Uživatel\"\r\n      width={ 500 }\r\n      visible={ visible }\r\n      footer={\r\n        <>\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            { guest === null ? \"Vytvořit\" : \"Upravit\" }\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        padding: \"16px 20px\",\r\n        textAlign: \"right\"\r\n      } }>\r\n      <Form\r\n        form={ form }\r\n        initialValues={ initialValues }\r\n        layout=\"vertical\"\r\n        name=\"guest\">\r\n        <Title level={ 5 }>Osobní údaje</Title>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Jméno\"\r\n          name=\"name\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Jméno\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Příjmení\"\r\n          name=\"surname\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Příjmení\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Číslo OP\"\r\n          name=\"identity\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input placeholder=\"číslo občanského průkazu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Telefonní Číslo\"\r\n          name=\"phone\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input placeholder=\"číslo\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"E-Mail\"\r\n          name=\"email\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input\r\n            addonBefore={ emailPrefixIcon }\r\n            placeholder=\"e-mail\"\r\n            type=\"email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Věk\"\r\n          name=\"age\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Select\r\n            options={ GuestFormHelper.ageOptions }\r\n            placeholder=\"vyberte ze seznamu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Pohlaví\"\r\n          name=\"gender\">\r\n          <Select\r\n            placeholder=\"vyberte ze seznamu\">\r\n            <Select.Option value=\"M\">Muž</Select.Option>\r\n            <Select.Option value=\"F\">Žena</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Číslo viza\"\r\n          name=\"visa\">\r\n          <Input placeholder=\"číslo visa\" />\r\n        </Form.Item>\r\n        <Title level={ 5 }>Trvalé bydliště</Title>\r\n        <Form.Item\r\n          label=\"Ulice\"\r\n          name={ [ \"address\", \"street\" ] }>\r\n          <Input placeholder=\"ulice\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"PSČ/Obec\">\r\n          <Input.Group compact>\r\n            <Form.Item\r\n              style={ { marginBottom: 0, width: \"50%\" } }\r\n              name={ [ \"address\", \"psc\" ] }>\r\n              <Input placeholder=\"PSČ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={ { marginBottom: 0, width: \"50%\" } }\r\n              name={ [ \"address\", \"municipality\" ] }>\r\n              <Input placeholder=\"Obec\" />\r\n            </Form.Item>\r\n          </Input.Group>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Občanství\">\r\n          <Input.Group compact>\r\n            <Form.Item\r\n              style={ { width: \"50%\" } }\r\n              name={ [ \"citizenship\", \"selected\" ] }>\r\n              <Select style={ { width: \"100%\" } } placeholder=\"ze seznamu\">\r\n                <Select.Option value=\"cze\">CZE</Select.Option>\r\n                <Select.Option value=\"sk\">SK</Select.Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={ { width: \"50%\" } }\r\n              name={ [ \"citizenship\", \"new\" ] }>\r\n              <Input placeholder=\"ručně\" />\r\n            </Form.Item>\r\n          </Input.Group>\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  )\r\n}","import { Day, DayValue, Locale, utils } from \"react-modern-calendar-datepicker\";\r\n\r\nexport const CsCalendarLocale: Locale = {\r\n  months: [\r\n    'Leden',\r\n    'Únor',\r\n    'Březen',\r\n    'Duben',\r\n    'Květen',\r\n    'Červen',\r\n    'Červenec',\r\n    'Srpen',\r\n    'Září',\r\n    'Říjen',\r\n    'Listopad',\r\n    'Prosinec'\r\n  ],\r\n  weekDays: [\r\n    {\r\n      name: 'Neděle', // used for accessibility \r\n      short: 'Ned', // displayed at the top of days' rows\r\n      isWeekend: true, // is it a formal weekend or not?\r\n    },\r\n    {\r\n      name: 'Pondělí',\r\n      short: 'Pon',\r\n    },\r\n    {\r\n      name: 'Úterý',\r\n      short: 'Út',\r\n    },\r\n    {\r\n      name: 'Středa',\r\n      short: 'St',\r\n    },\r\n    {\r\n      name: 'Čtvrtek',\r\n      short: 'Čt',\r\n    },\r\n    {\r\n      name: 'Pátek',\r\n      short: 'Pá',\r\n    },\r\n    {\r\n      name: 'Sobota',\r\n      short: 'Sob',\r\n      isWeekend: true,\r\n    }\r\n  ],\r\n  weekStartingIndex: 0,\r\n  // return a { year: number, month: number, day: number } object\r\n  getToday(gregorainTodayObject) {\r\n    return gregorainTodayObject;\r\n  },\r\n  // return a native JavaScript date here\r\n  toNativeDate(date) {\r\n    return new Date(date.year, date.month - 1, date.day);\r\n  },\r\n  // return a number for date's month length\r\n  getMonthLength(date) {\r\n    return new Date(date.year, date.month, 0).getDate();\r\n  },\r\n  // return a transformed digit to your locale\r\n  transformDigit(digit) {\r\n    return digit;\r\n  },\r\n  // texts in the date picker\r\n  nextMonth: 'Příští Měsíc',\r\n  previousMonth: 'Předchozí Měsíc',\r\n  openMonthSelector: 'Otevřít Výběr Měsíce',\r\n  openYearSelector: 'Otevřít Výběr Roku',\r\n  closeMonthSelector: 'Zavřít Výběr Měsíce',\r\n  closeYearSelector: 'Zavřít Výběr Roku',\r\n  defaultPlaceholder: 'Vybrat...',\r\n  // for input range value\r\n  from: 'od',\r\n  to: 'do',\r\n  // used for input value when multi dates are selected\r\n  digitSeparator: ',',\r\n  // if your provide -2 for example, year will be 2 digited\r\n  yearLetterSkip: 0,\r\n  // is your language rtl or ltr?\r\n  isRtl: false\r\n}\r\n\r\nconst getDaysWithinMonth = (from: number, to: number, month: number, year: number): Day[] => {\r\n  const days: Day[] = []\r\n  for (let index = from; index <= to; index++) {\r\n    days.push({ year: year, month: month, day: index })\r\n  }\r\n  return days\r\n}\r\n\r\nconst getDaysWithinOverlappingMonths = (from: number, to: number, months: number[], year: number): Day[] => {\r\n  const { getMonthLength } = utils(\"en\")\r\n  const days: Day[] = []\r\n  months.forEach((month: number, index: number) => {\r\n    if (index === 0) { // first month, get days till the end of the month\r\n      getDaysWithinMonth(from, getMonthLength({ day: from, month, year }), month, year).forEach((day: Day) => days.push(day))\r\n    } else if (index === months.length - 1) { // get days of te last month\r\n      getDaysWithinMonth(1, to, month, year).forEach((day: Day) => days.push(day))\r\n    } else { // get days of the intermediary month\r\n      getDaysWithinMonth(1, getMonthLength({ day: 1, month, year }), month, year).forEach((day: Day) => days.push(day))\r\n    }\r\n  })\r\n  return days\r\n}\r\n\r\nconst getDaysWithinOverlappingYears = (from: number, to: number, fromMonth: number, toMonth: number, years: number[]) => {\r\n  const { getMonthLength } = utils(\"en\")\r\n  const days: Day[] = []\r\n  years.forEach((year: number, index: number) => {\r\n    const months: number[] = []\r\n    if (index === 0) { // get days from first year\r\n      for (let idx = fromMonth; idx <= 12; idx++) {\r\n        months.push(idx)\r\n      }\r\n      getDaysWithinOverlappingMonths(from, getMonthLength({ day: 1, month: 12, year }), months, year).forEach((day: Day) => days.push(day))\r\n    } else if (index === years.length - 1) { // get days from last year\r\n      for (let idx = 1; idx <= toMonth; idx++) {\r\n        months.push(idx)\r\n      }\r\n      if (months.length > 1) {\r\n        getDaysWithinOverlappingMonths(1, to, months, year).forEach((day: Day) => days.push(day))\r\n      } else {\r\n        getDaysWithinMonth(1, to, months[ 0 ], year).forEach((day: Day) => days.push(day))\r\n      }\r\n    } else { // get days from intermediary year\r\n      const months = Array.from(Array(13).keys())\r\n      months.shift()\r\n      getDaysWithinOverlappingMonths(1, getMonthLength({ day: 1, month: 12, year }), months, year).forEach((day: Day) => days.push(day))\r\n    }\r\n  })\r\n  return days\r\n}\r\n\r\nexport const TransformDate = {\r\n  getDaysFromRange: (from: DayValue, to: DayValue): Day[] => {\r\n    if (from === undefined || from === null || to === undefined || to === null) {\r\n      return []\r\n    }\r\n    if (to.year === from.year) {\r\n      // processing within same year\r\n      if (to.month === from.month) {\r\n        // processing within same month\r\n        return getDaysWithinMonth(from.day, to.day, from.month, from.year)\r\n      } else {\r\n        // processing within overlapping months\r\n        const months = []\r\n        for (let index = from.month; index <= to.month; index++) {\r\n          months.push(index)\r\n        }\r\n        return getDaysWithinOverlappingMonths(from.day, to.day, months, from.year)\r\n      }\r\n    } else {\r\n      // processing within overlapping years\r\n      const years = []\r\n      for (let index = from.year; index <= to.year; index++) {\r\n        years.push(index)\r\n      }\r\n      return getDaysWithinOverlappingYears(from.day, to.day, from.month, to.month, years)\r\n    }\r\n  },\r\n  toLocaleString: (day: DayValue, defaultValue: string) => {\r\n    if (day === undefined || day === null) {\r\n      return defaultValue\r\n    }\r\n    return `${ day?.day } ${ CsCalendarLocale.months[ day.month - 1 ] } ${ day.year }`\r\n  }\r\n}\r\n","import { Day } from \"react-modern-calendar-datepicker\"\r\nimport { Moment } from \"moment\"\r\n\r\nexport type ReservationType = \"Závazná Rezervace\" | \"Nezávazná Rezervace\" | \"Aktuálně Ubytování\" | \"Obydlený Termín\"\r\nexport type ReservationTypeKey = \"BINDING\" | \"NONBINDING\" | \"ACCOMMODATED\" | \"INHABITED\"\r\nexport type ReserveDay = Day & { hour?: number, minute?: number }\r\n\r\nexport const Reservation = {\r\n  getType: (key: ReservationTypeKey): ReservationType => {\r\n    switch (key) {\r\n      case \"NONBINDING\":\r\n        return \"Nezávazná Rezervace\"\r\n      case \"ACCOMMODATED\":\r\n        return \"Aktuálně Ubytování\"\r\n      case \"INHABITED\":\r\n        return \"Obydlený Termín\"\r\n      case \"BINDING\":\r\n      default: return \"Závazná Rezervace\"\r\n    }\r\n  }\r\n}\r\n\r\nexport type DrawerType = \"guest\" | \"suite\"\r\n\r\nexport interface ReservationRange {\r\n  from: Moment\r\n  to: Moment\r\n}\r\n\r\nexport interface ReserveRange {\r\n  id?: number\r\n  from: ReserveDay\r\n  to: ReserveDay\r\n  type: ReservationTypeKey\r\n}\r\n\r\nexport interface Room {\r\n  id: number\r\n  name: string\r\n  reservedRanges: ReserveRange[]\r\n}\r\n\r\ninterface Address {\r\n  municipality?: string\r\n  psc?: number\r\n  street?: string\r\n}\r\n\r\ninterface Citizenship {\r\n  new?: string\r\n  selected?: string\r\n}\r\n\r\nexport interface GuestForm {\r\n  age: string,\r\n  address?: Address\r\n  citizenship?: Citizenship\r\n  email: string\r\n  gender?: string\r\n  id?: number\r\n  name: string\r\n  identity: string\r\n  phone: string\r\n  surname: string\r\n  visa?: string\r\n}\r\n\r\nexport interface GuestErrorResponse {\r\n  email: Array<string>\r\n  gender: Array<string>\r\n  identity: Array<string>\r\n  name: Array<string>\r\n  phone_number: Array<string>\r\n  surname: Array<string>\r\n}\r\n\r\nexport interface SuiteForm {\r\n  number: number,\r\n  title: string\r\n}\r\n\r\nexport interface OptionsType {\r\n  label: string,\r\n  value: string | number\r\n}","import { FormInstance, Rule } from \"antd/lib/form\";\r\nimport { OptionsType, Reservation, ReservationTypeKey } from \"../Types\";\r\n\r\ninterface OID {\r\n  id: number\r\n}\r\n\r\ninterface IReservationFormHelper {\r\n  getRequiredRule: (message: string) => Rule\r\n  guestValidators: (form: FormInstance) => Rule[]\r\n  mealOptions: OptionsType[]\r\n  reservationOptions: (OptionsType & { value: ReservationTypeKey })[]\r\n  roommateValidators: (form: FormInstance) => Rule[]\r\n}\r\n\r\nexport const ReservationFormHelper: IReservationFormHelper = {\r\n  mealOptions: [\r\n    {\r\n      label: \"Bez Stravy\",\r\n      value: \"NOMEAL\"\r\n    },\r\n    {\r\n      label: \"Jen Snídaně\",\r\n      value: \"BREAKFAST\"\r\n    },\r\n    {\r\n      label: \"Polopenze\",\r\n      value: \"HALFBOARD\"\r\n    }\r\n  ],\r\n  reservationOptions: [\r\n    {\r\n      label: Reservation.getType(\"BINDING\"),\r\n      value: \"BINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"NONBINDING\"),\r\n      value: \"NONBINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"ACCOMMODATED\"),\r\n      value: \"ACCOMMODATED\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"INHABITED\"),\r\n      value: \"INHABITED\"\r\n    }\r\n  ],\r\n  getRequiredRule: (message: string): Rule => {\r\n    return { required: true, message }\r\n  },\r\n  guestValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"host nemůže být stejný jako spolubydlící\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const roommates: Array<OID> = form.getFieldValue(\"roommates\")\r\n          if (roommates === undefined || roommates.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          const duplicate = roommates.filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicate === undefined || duplicate.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail guest validation, equals to roommate\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"vyberte hosta\",\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  roommateValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"spolubydlící je již vybrán\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const duplicates: Array<OID> = form.getFieldValue(\"roommates\").filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicates === undefined || duplicates.length <= 1) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, duplicate value\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"spolubydlící nemůže být stejný jako host\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          if (form.getFieldValue(\"guest\") !== value) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, equals to guest\"))\r\n        }\r\n      }\r\n    ]\r\n  },\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_RESERVATION = gql`\r\n  mutation CreateReservation($data: ReservationInput!) {\r\n    createReservation(data: $data) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_RESERVATION = gql`\r\n  mutation DeleteReservation($reservationId: ID!) {\r\n    deleteReservation(reservationId: $reservationId) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_RESERVATION = gql`\r\n  mutation UpdateReservation($data: ReservationInput!) {\r\n    updateReservation(data: $data) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { gql } from \"@apollo/client\";\r\n\r\nexport const GUESTS = gql`\r\n  query Guests {\r\n    guests {\r\n      id\r\n      name\r\n      surname\r\n    }\r\n  }\r\n`\r\n\r\nexport const GUESTS_FULL = gql`\r\n  query GuestsFull {\r\n    guests {\r\n      age\r\n      addressMunicipality\r\n      addressPsc\r\n      addressStreet\r\n      citizenship\r\n      email\r\n      gender\r\n      identity\r\n      id\r\n      name\r\n      phoneNumber\r\n      surname\r\n      visaNumber\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\r\nimport { Button, DatePicker, Form, Input, message, Modal, Popconfirm, Select, Space } from \"antd\"\r\nimport { Moment } from \"moment\"\r\nimport { ApolloError, ApolloQueryResult, useMutation, useQuery } from \"@apollo/client\"\r\nimport { Store } from \"rc-field-form/lib/interface\"\r\nimport { CloseCircleOutlined, CloseOutlined, EditOutlined, MinusCircleOutlined, PlusCircleOutlined, PlusOutlined } from \"@ant-design/icons\"\r\nimport \"./styles.css\"\r\nimport { OptionsType, ReservationRange, ReservationTypeKey } from \"../../lib/Types\"\r\nimport { ReservationFormHelper } from \"../../lib/components/ReservationFormHelper\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport { Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\r\nimport { CreateReservation, CreateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/CreateReservation\"\r\nimport { Guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { CREATE_RESERVATION, DELETE_RESERVATION, UPDATE_RESERVATION } from \"../../lib/graphql/mutations/Reservation\"\r\nimport { GUESTS } from \"../../lib/graphql/queries/Guests\"\r\nimport { SuiteReservations, SuiteReservations_suiteReservations } from \"../../lib/graphql/queries/Reservations/__generated__/SuiteReservations\"\r\nimport { UpdateReservation, UpdateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/UpdateReservation\"\r\nimport { ReservationInput } from \"../../lib/graphql/globalTypes\"\r\nimport { DeleteReservation, DeleteReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/DeleteReservation\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  isOpen: boolean\r\n  range: ReservationRange | undefined\r\n  refetchReservations: (variables?: Partial<SuiteReservations>) => Promise<ApolloQueryResult<SuiteReservations>>\r\n  reservation: SuiteReservations_suiteReservations | undefined\r\n  suite: Suites_suites\r\n}\r\n\r\nexport const ReservationModal = ({\r\n  close,\r\n  isOpen,\r\n  range,\r\n  refetchReservations,\r\n  reservation,\r\n  suite\r\n}: Props) => {\r\n\r\n  const { data: guestsQueryData } = useQuery<Guests>(GUESTS, {\r\n    onError: () => {\r\n      message.error(\"Chyba při načítání hostů, kontaktujte správce\")\r\n    }\r\n  })\r\n  const [ createReservation ] = useMutation<CreateReservation, CreateReservationVariables>(CREATE_RESERVATION, {\r\n    onCompleted: (): void => {\r\n      message.success(\"Rezervace byla vytvořena!\")\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n  const [ updateReservation ] = useMutation<UpdateReservation, UpdateReservationVariables>(UPDATE_RESERVATION, {\r\n    onCompleted: () => {\r\n      message.success(\"Rezervace byla aktualizována!\")\r\n    },\r\n    onError: (error: ApolloError) => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n  const [ deleteReservation ] = useMutation<DeleteReservation, DeleteReservationVariables>(DELETE_RESERVATION, {\r\n    onCompleted: () => {\r\n      message.success(\"Rezervace byla odstraněna!\")\r\n      refetchReservations()\r\n      close()\r\n    },\r\n    onError: (error: ApolloError) => {\r\n      message.error(error)\r\n    }\r\n  })\r\n\r\n  const [ guestOptions, setGuestOptions ] = useState<OptionsType[]>([])\r\n  const dateFormat = \"YYYY-MM-DD HH:mm\"\r\n  const [ form ] = Form.useForm()\r\n  const initialValues: Store & { type: ReservationTypeKey } = {\r\n    dates: range !== undefined ? [ range.from, range.to ] : [],\r\n    guest: reservation === undefined ? null : reservation.guest.id,\r\n    meal: reservation === undefined ? null : reservation.meal,\r\n    notes: reservation === undefined ? null : reservation.notes,\r\n    purpose: reservation === undefined ? null : reservation.purpose,\r\n    roommates: reservation === undefined ? [] : Array.from(reservation.roommates, roommate => {\r\n      return { id: roommate.id }\r\n    }),\r\n    type: reservation === undefined ? \"BINDING\" : reservation.type\r\n  }\r\n\r\n  const submitForm = (): void => {\r\n    const formData = form.getFieldsValue(true)\r\n    const [ from, to ]: Array<Moment> = form.getFieldValue(\"dates\")\r\n    const roommates = formData.roommates === undefined ? [] :\r\n      Array.from(formData.roommates, (data: { id: number }) => data.id)\r\n\r\n    const variables: ReservationInput = {\r\n      fromDate: from.format(dateFormat),\r\n      guest: formData.guest,\r\n      meal: formData.meal,\r\n      notes: formData.notes,\r\n      purpose: formData.purpose,\r\n      roommates: roommates,\r\n      suite: +suite.id,\r\n      toDate: to.format(dateFormat),\r\n      type: formData.type\r\n    }\r\n    if (reservation !== undefined && reservation.id !== undefined) {\r\n      updateReservation({ variables: { data: { ...variables, id: reservation.id } } })\r\n    } else {\r\n      createReservation({ variables: { data: variables } })\r\n    }\r\n    refetchReservations()\r\n    close()\r\n  }\r\n\r\n  const footerButtons = [\r\n    <Popconfirm\r\n      cancelText=\"Ne\"\r\n      key=\"cancel\"\r\n      okText=\"Ano\"\r\n      onConfirm={ () => {\r\n        if (reservation !== undefined) {\r\n          deleteReservation({ variables: { reservationId: reservation.id } })\r\n        }\r\n      } }\r\n      title=\"Odstranit rezervaci?\">\r\n      <Button\r\n        className=\"cancel-button\"\r\n        danger\r\n        icon={ <CloseCircleOutlined /> }>\r\n        Odstranit\r\n      </Button>\r\n    </Popconfirm>,\r\n    <Button\r\n      key=\"ok\"\r\n      icon={ reservation === undefined ? <PlusCircleOutlined /> : <EditOutlined /> }\r\n      onClick={ () => {\r\n        form.validateFields()\r\n          .then(submitForm)\r\n      } }\r\n      type=\"primary\">\r\n      { reservation === undefined ? \"Uložit\" : \"Upravit\" }\r\n    </Button>\r\n  ]\r\n\r\n  useEffect(() => {\r\n    if (guestsQueryData?.guests !== undefined && guestsQueryData?.guests !== null) {\r\n      setGuestOptions(Array.from(guestsQueryData?.guests, (guest: any): any => {\r\n        return {\r\n          label: `${ guest.name } ${ guest.surname }`,\r\n          value: guest.id\r\n        }\r\n      }))\r\n    }\r\n  }, [ guestsQueryData ])\r\n\r\n  // Reset form to update range, has to be after modal is opened,\r\n  // otherwise the form might not be initialized\r\n  useEffect(() => {\r\n    if (isOpen === true) {\r\n      form.resetFields()\r\n    }\r\n  }, [ form, isOpen, range ])\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onConfirm={ close }\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\">\r\n          <CloseOutlined />\r\n        </Popconfirm>\r\n      ) }\r\n      footer={ footerButtons }\r\n      title=\"Rezervační formulář\"\r\n      visible={ isOpen }>\r\n      <Form\r\n        form={ form }\r\n        initialValues={ initialValues }\r\n        layout=\"vertical\">\r\n        <Form.Item\r\n          label=\"Datum Rezervace\"\r\n          name=\"dates\"\r\n          required>\r\n          <DatePicker.RangePicker\r\n            format={ dateFormat }\r\n            showTime />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Host\"\r\n          name=\"guest\"\r\n          required\r\n          rules={ ReservationFormHelper.guestValidators(form) }>\r\n          <Select\r\n            filterOption={ (input, option): boolean => {\r\n              const match = option?.label?.toString().toLowerCase().indexOf(input.toLowerCase())\r\n              return match !== undefined && match >= 0\r\n            } }\r\n            options={ guestOptions }\r\n            showSearch />\r\n        </Form.Item>\r\n        <Form.List name=\"roommates\">\r\n          { (fields, { add, remove }) => (\r\n            <>\r\n              { fields.map(({ key, name, fieldKey, ...restField }) => (\r\n                <Space\r\n                  align=\"baseline\"\r\n                  className=\"roommate-list\"\r\n                  key={ key }>\r\n                  { console.log(name) }\r\n                  <Form.Item\r\n                    hasFeedback\r\n                    { ...restField }\r\n                    fieldKey={ [ fieldKey, 'first' ] }\r\n                    name={ [ name, \"id\" ] }\r\n                    rules={ ReservationFormHelper.roommateValidators(form) }>\r\n                    <Select\r\n                      options={ guestOptions }\r\n                      showSearch />\r\n                  </Form.Item>\r\n                  <MinusCircleOutlined onClick={ () => {\r\n                    remove(name)\r\n                    form.validateFields()\r\n                  } } />\r\n                </Space>\r\n              )) }\r\n              <Form.Item>\r\n                <Button\r\n                  disabled={ fields.length >= guestOptions.length }\r\n                  type=\"dashed\"\r\n                  onClick={ () => add() }\r\n                  block\r\n                  icon={ <PlusOutlined /> }>\r\n                  Přidat spolubydlícího\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          ) }\r\n        </Form.List>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Typ Rezervace\"\r\n          name=\"type\"\r\n          required\r\n          rules={ [ ReservationFormHelper.getRequiredRule(\"vyberte typ rezervace\") ] }>\r\n          <Select\r\n            options={ ReservationFormHelper.reservationOptions } />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Strava\"\r\n          name=\"meal\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Select\r\n            options={ ReservationFormHelper.mealOptions } />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Účel pobytu\"\r\n          name=\"purpose\">\r\n          <Input placeholder=\"účel pobytu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Poznámky\"\r\n          name=\"notes\">\r\n          <Input.TextArea\r\n            placeholder=\"zadejte text\"\r\n            allowClear />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal >\r\n  )\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const SUITE_RESERVATIONS = gql`\r\n  query SuiteReservations($suiteId: Int!) {\r\n    suiteReservations(suiteId: $suiteId) {\r\n      fromDate\r\n      guest {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      id\r\n      meal\r\n      notes\r\n      purpose\r\n      roommates {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      suite {\r\n        id\r\n        title\r\n        number\r\n      }\r\n      toDate\r\n      type\r\n    }\r\n  }\r\n`\r\n\r\nexport const RESERVATIONS = gql`\r\n  query Reservations {\r\n    reservations {\r\n      fromDate\r\n      guest {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      id\r\n      meal\r\n      notes\r\n      purpose\r\n      roommates {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      suite {\r\n        id\r\n        title\r\n        number\r\n      }\r\n      toDate\r\n      type\r\n    }\r\n  }\r\n`","import { useState, useEffect } from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport { Col } from 'antd'\r\nimport { Calendar, Day, DayValue } from 'react-modern-calendar-datepicker'\r\nimport { CsCalendarLocale, TransformDate } from '../../lib/components/CsCalendarLocale'\r\nimport './styles.css'\r\nimport { defaultArrivalHour, defaultDepartureHour } from '../../lib/Constants'\r\nimport { ReservationModal } from '../ReservationModal'\r\nimport { ReservationRange } from '../../lib/Types'\r\nimport { Suites_suites } from '../../lib/graphql/queries/Suites/__generated__/Suites'\r\nimport { SuiteReservations as ReservationsData, SuiteReservations_suiteReservations } from '../../lib/graphql/queries/Reservations/__generated__/SuiteReservations'\r\nimport { SUITE_RESERVATIONS } from '../../lib/graphql/queries/Reservations'\r\nimport { ReservationType } from '../../lib/graphql/globalTypes'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport moment, { Moment } from 'moment'\r\n\r\ninterface Props {\r\n  suite: Suites_suites\r\n}\r\ntype CustomDayClassNameItem = Day & { className: string, reservationId: string };\r\n\r\nexport const ReserveCalendar = ({\r\n  suite,\r\n}: Props) => {\r\n\r\n  const { data: reservationsData, refetch } = useQuery<ReservationsData>(SUITE_RESERVATIONS, {\r\n    variables: { suiteId: suite.id }\r\n  })\r\n  const [ reservedRange, setReservedRange ] = useState<ReservationRange>()\r\n  const [ modalOpen, setModalOpen ] = useState<boolean>(false)\r\n  const [ reservedDays, setReservedDays ] = useState<CustomDayClassNameItem[]>([])\r\n  const [ selectedReservation, setSelectedReservation ] = useState<SuiteReservations_suiteReservations>()\r\n\r\n  const getDayClassName = (type: ReservationType) => {\r\n    switch (type) {\r\n      case \"BINDING\":\r\n        return \"greenDay\"\r\n      case \"NONBINDING\":\r\n        return \"yellowDay\"\r\n      case \"ACCOMMODATED\":\r\n        return \"purpleDay\"\r\n      case \"INHABITED\":\r\n        return \"orangeDay\"\r\n      default: return \"greenDay\"\r\n    }\r\n  }\r\n\r\n  const setReservationRange = (dayValue: DayValue) => {\r\n    const rangeDay = reservedDays.find((day: CustomDayClassNameItem) => {\r\n      return day.year === dayValue?.year\r\n        && day.month === dayValue.month\r\n        && day.day === dayValue.day\r\n    })\r\n    if (rangeDay !== undefined) {\r\n      const reservation = reservationsData?.suiteReservations?.find(reservation => reservation?.id === rangeDay.reservationId)\r\n      if (reservation !== undefined && reservation !== null) {\r\n        setReservedRange({\r\n          from: moment(reservation.fromDate),\r\n          to: moment(reservation.toDate)\r\n        })\r\n        setSelectedReservation(reservation)\r\n      }\r\n    }\r\n    if (rangeDay === undefined && dayValue !== undefined && dayValue !== null) {\r\n      setReservedRange({\r\n        // Moment counts months from 0, so - 1 is required to get the current month\r\n        from: moment([ dayValue.year, dayValue.month - 1, dayValue.day, defaultArrivalHour, 0 ]),\r\n        // default range is the selected day + 1 day, default arrival and departure times\r\n        to: moment([ dayValue.year, dayValue.month - 1, dayValue.day + 1, defaultDepartureHour, 0 ])\r\n      })\r\n    }\r\n    setModalOpen(true)\r\n  }\r\n\r\n  // Add reserved days to calendar based on reservation data from server\r\n  useEffect(() => {\r\n    const reservedDays: CustomDayClassNameItem[] = []\r\n    reservationsData?.suiteReservations?.forEach((reservation: SuiteReservations_suiteReservations | null) => {\r\n      if (reservation !== null) {\r\n        const from: Moment = moment(reservation.fromDate)\r\n        const to: Moment = moment(reservation.toDate)\r\n        TransformDate.getDaysFromRange(\r\n          {\r\n            year: from.year(),\r\n            month: from.month() + 1,\r\n            day: from.date()\r\n          },\r\n          {\r\n            year: to.year(),\r\n            month: to.month() + 1,\r\n            day: to.date()\r\n          }).forEach((day: Day) => {\r\n            reservedDays.push({ className: getDayClassName(reservation.type), reservationId: reservation.id, ...day })\r\n          })\r\n      }\r\n    })\r\n    setReservedDays(reservedDays)\r\n  }, [ reservationsData ])\r\n\r\n  return (\r\n    <>\r\n      <Col\r\n        span={ 8 }\r\n        className=\"home__listing\">\r\n        <Title\r\n          level={ 4 }\r\n          className=\"home__listings-title\">\r\n          { suite.title }\r\n        </Title>\r\n        <div className=\"home__calendar\">\r\n          <Calendar\r\n            onChange={ setReservationRange }\r\n            locale={ CsCalendarLocale }\r\n            customDaysClassName={ reservedDays }\r\n            shouldHighlightWeekends />\r\n        </div>\r\n      </Col>\r\n      <ReservationModal\r\n        close={ () => {\r\n          setSelectedReservation(undefined)\r\n          setModalOpen(false)\r\n        } }\r\n        isOpen={ modalOpen }\r\n        range={ reservedRange }\r\n        refetchReservations={ refetch }\r\n        reservation={ selectedReservation }\r\n        suite={ suite } />\r\n    </>\r\n  )\r\n}","export const defaultArrivalHour: number = 14\r\nexport const defaultDepartureHour: number = 10","import { gql } from \"@apollo/client\";\r\n\r\nexport const SUITES = gql`\r\n  query Suites {\r\n    suites {\r\n      id\r\n      title\r\n      number\r\n    }\r\n  }\r\n`","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_SUITE = gql`\r\n  mutation CreateSuite($data: SuiteInput!) {\r\n    createSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_SUITE = gql`\r\n  mutation UpdateSuite($data: SuiteInput!) {\r\n    updateSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_SUITE = gql`\r\n  mutation DeleteSuite($suiteId: ID!) {\r\n    deleteSuite(suiteId: $suiteId) {\r\n      suite {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm } from \"antd\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport { CloseOutlined } from \"@ant-design/icons\"\r\nimport { Suites, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\r\nimport { Store } from \"antd/lib/form/interface\"\r\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\r\nimport { CreateSuite, CreateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/CreateSuite\"\r\nimport { CREATE_SUITE, UPDATE_SUITE } from \"../../lib/graphql/mutations/Suite\"\r\nimport { SuiteForm } from \"../../lib/Types\"\r\nimport { SuiteInput } from \"../../lib/graphql/globalTypes\"\r\nimport { UpdateSuite, UpdateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/UpdateSuite\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  refetch: ((variables?: Partial<OperationVariables>) => Promise<ApolloQueryResult<Suites>>)\r\n  suite: Suites_suites | undefined\r\n  visible: boolean\r\n}\r\n\r\nexport const SuiteDrawer = ({\r\n  close,\r\n  suite,\r\n  refetch,\r\n  visible\r\n}: Props) => {\r\n\r\n  const [ createSuite ] = useMutation<CreateSuite, CreateSuiteVariables>(CREATE_SUITE, {\r\n    onCompleted: (data: CreateSuite): void => {\r\n      message.success(`Apartmá ${ data.createSuite?.suite?.title } byla vytvořena`)\r\n      if (refetch !== undefined) {\r\n        refetch()\r\n      }\r\n      close()\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      console.log('Error creating: ', error)\r\n    }\r\n  })\r\n  const [ updateSuite ] = useMutation<UpdateSuite, UpdateSuiteVariables>(UPDATE_SUITE, {\r\n    onCompleted: (data: UpdateSuite): void => {\r\n      message.success(`Apartmá ${ data.updateSuite?.suite?.title } byla aktualizována`)\r\n      if (refetch !== undefined) {\r\n        refetch()\r\n      }\r\n      close()\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      console.log('Error updating: ', error)\r\n    }\r\n  })\r\n\r\n  const [ form ] = Form.useForm()\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n\r\n  const initialValues: Store = {\r\n    number: suite?.number,\r\n    title: suite?.title\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true) {\r\n      form.resetFields()\r\n    }\r\n  }, [ form, visible ])\r\n\r\n  const submitForm = () => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: SuiteForm = form.getFieldsValue(true)\r\n        const variables: { data: SuiteInput } = {\r\n          data: {\r\n            number: formData.number,\r\n            title: formData.title\r\n          }\r\n        }\r\n        if (suite === undefined) {\r\n          createSuite({ variables })\r\n        } else {\r\n          if (form.isFieldsTouched()) {\r\n            variables.data.id = suite.id\r\n            updateSuite({ variables })\r\n          }\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.error(\"Form validation failed\");\r\n      })\r\n  }\r\n\r\n  const closeDrawer = (): void => {\r\n    if (form.isFieldsTouched()) {\r\n      setConfirmClose(true)\r\n    } else {\r\n      close()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ closeDrawer } />\r\n        </Popconfirm>\r\n      ) }\r\n      footer={\r\n        <>\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            Vytvořit\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        textAlign: \"right\"\r\n      } }\r\n      placement=\"left\"\r\n      title=\"Nové apartmá\"\r\n      visible={ visible }\r\n      width={ 500 }>\r\n      <Form\r\n        form={ form }\r\n        initialValues={ initialValues }\r\n        layout=\"vertical\"\r\n        name=\"suite\">\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Název\"\r\n          name=\"title\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input placeholder=\"název apartmá\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Číslo\"\r\n          name=\"number\"\r\n          required\r\n          rules={ [\r\n            FormHelper.requiredRule,\r\n            {\r\n              message: \"zadejte číslo\",\r\n              pattern: /^[0-9]+$/\r\n            }\r\n          ] }>\r\n          <Input placeholder=\"číslo apartmá\" type=\"number\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  )\r\n}","import ReactDOM from 'react-dom'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport './index.css'\r\nimport { Affix, ConfigProvider, Layout } from 'antd'\r\nimport { AppHeader, Home, Overview } from './sections'\r\nimport { getCookie } from \"./lib/Cookie\"\r\nimport moment from 'moment'\r\nimport 'moment/locale/cs'\r\nimport csCZ from \"antd/lib/locale/cs_CZ\"\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\r\nimport { Suites } from './sections/Suites'\r\nimport { Guests } from './sections/Guests'\r\n\r\nmoment.locale(\"cs\")\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache({\r\n    typePolicies: {\r\n      Query: {\r\n        fields: {\r\n          guests: {\r\n            merge: false\r\n          },\r\n          reservations: {\r\n            merge: false\r\n          },\r\n          suiteReservations: {\r\n            merge: false\r\n          },\r\n          suites: {\r\n            merge: false\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }),\r\n  headers: {\r\n    \"X-CSRFToken\": getCookie(\"csrftoken\")\r\n  },\r\n  uri: \"/api\"\r\n})\r\n\r\nReactDOM.render(\r\n  <ConfigProvider locale={ csCZ }>\r\n    <ApolloProvider client={ client }>\r\n      <Router>\r\n        <Layout id=\"app\">\r\n          <Affix offsetTop={ 0 } className=\"app__affix-header\">\r\n            <AppHeader />\r\n          </Affix>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={ Home } />\r\n            <Route exact path=\"/apartma\" component={ Suites } />\r\n            <Route exact path=\"/guests\" component={ Guests } />\r\n            <Route exact path=\"/prehled\" component={ Overview } />\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n    </ApolloProvider>\r\n  </ConfigProvider >,\r\n  document.getElementById('root')\r\n);\r\n","export const getCookie = (name: string): string => {\r\n  let cookieValue = \"\"\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[ i ].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}","import { useQuery } from '@apollo/client'\r\nimport { Content } from 'antd/lib/layout/layout'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\"\r\nimport './styles.css'\r\nimport { ReserveCalendar } from '../ReserveCalendar'\r\nimport { Empty, message, Row, Skeleton } from 'antd'\r\nimport { Suites as SuitesData, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\r\nimport { SUITES } from '../../lib/graphql/queries/Suites'\r\n\r\nexport const Home = () => {\r\n\r\n  const { loading: suitesLoading, data: suitesData } = useQuery<SuitesData>(SUITES, {\r\n    onError: () => {\r\n      message.error(\"Chyba při načítání apartmá, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  const getContent = () => {\r\n    return suitesData?.suites?.length !== undefined && suitesData.suites.length > 0 ? (\r\n      <Row gutter={ 8 }>\r\n        {\r\n          suitesData.suites.map((suite: Suites_suites | null) => {\r\n            return suite !== null ? (\r\n              <ReserveCalendar\r\n                key={ suite.id }\r\n                suite={ suite } />\r\n            ) : null\r\n          })\r\n        }\r\n      </Row>\r\n    ) : <Empty />\r\n  }\r\n\r\n  return (\r\n    <Content className=\"app-content\">\r\n      <div className=\"home__listings\">\r\n        <Title level={ 3 } className=\"home__listings-title\">\r\n          Rezervace / Obsazenost\r\n        </Title>\r\n        <Skeleton\r\n          active\r\n          loading={ suitesLoading }>\r\n          { getContent() }\r\n        </Skeleton>\r\n      </div>\r\n    </Content >\r\n  );\r\n}","import { useEffect, useState } from \"react\"\r\nimport { PlusCircleOutlined, WarningOutlined } from \"@ant-design/icons\"\r\nimport { Button, List, message, Popconfirm, Skeleton } from \"antd\"\r\nimport { Content } from \"antd/lib/layout/layout\"\r\nimport { SuiteDrawer } from \"../SuiteDrawer\"\r\nimport { ApolloError, useMutation, useQuery } from \"@apollo/client\"\r\nimport { SUITES } from \"../../lib/graphql/queries/Suites\"\r\nimport { Suites as SuitesData, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport \"./styles.css\"\r\nimport { DELETE_SUITE } from \"../../lib/graphql/mutations/Suite\"\r\nimport { DeleteSuite, DeleteSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/DeleteSuite\"\r\n\r\nexport const Suites = () => {\r\n\r\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\r\n  const [ activeSuite, setActiveSuite ] = useState<Suites_suites>()\r\n  const [ suites, setSuites ] = useState<Suites_suites[]>([])\r\n\r\n  const { loading: queryLoading, data: queryData, refetch } = useQuery<SuitesData>(SUITES, {\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n  const [ deleteSuite, { loading: removeLoading, data: removeData } ] = useMutation<DeleteSuite, DeleteSuiteVariables>(DELETE_SUITE, {\r\n    onError: (error: ApolloError) => {\r\n      console.log('Error: ', error)\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const suitesData: Suites_suites[] = []\r\n    queryData?.suites?.forEach((suite: Suites_suites | null) => {\r\n      if (suite !== null) {\r\n        suitesData.push(suite)\r\n      }\r\n    })\r\n    setSuites(suitesData)\r\n  }, [ queryData ])\r\n\r\n  useEffect(() => {\r\n    refetch()\r\n  }, [ refetch, removeData ])\r\n\r\n  const editSuite = (suite: Suites_suites): void => {\r\n    setActiveSuite(suite)\r\n    setDrawerVisible(true)\r\n  }\r\n\r\n  const removeSuite = (suite: Suites_suites): void => {\r\n    deleteSuite({ variables: { suiteId: suite.id } })\r\n  }\r\n\r\n  return (\r\n    <Content className=\"app-content\">\r\n      <Title level={ 3 } className=\"home__listings-title\">\r\n        Seznam apartmá\r\n      </Title>\r\n      <List\r\n        className=\"suites-list\"\r\n        dataSource={ suites }\r\n        itemLayout=\"horizontal\"\r\n        loading={ queryLoading }\r\n        renderItem={ suite => (\r\n          <List.Item\r\n            actions={ [\r\n              <Button\r\n                key=\"edit\"\r\n                onClick={ () => editSuite(suite) }\r\n                type=\"link\">\r\n                upravit\r\n              </Button>,\r\n              <Popconfirm\r\n                cancelText=\"Ne\"\r\n                icon={ <WarningOutlined /> }\r\n                okText=\"Ano\"\r\n                onConfirm={ () => removeSuite(suite) }\r\n                title=\"opravdu odstranit?\">\r\n                <Button\r\n                  key=\"remove\"\r\n                  loading={ removeLoading }\r\n                  type=\"link\">\r\n                  odstranit\r\n                </Button>\r\n              </Popconfirm>\r\n            ] }>\r\n            <Skeleton title={ false } loading={ queryLoading } active>\r\n              <List.Item.Meta\r\n                title={ suite.title } />\r\n            </Skeleton>\r\n          </List.Item>\r\n        ) } />\r\n      <Button\r\n        icon={ <PlusCircleOutlined /> }\r\n        onClick={ () => {\r\n          setActiveSuite(undefined)\r\n          setDrawerVisible(true)\r\n        } }\r\n        type=\"primary\">\r\n        Přidat apartmá\r\n      </Button>\r\n      <SuiteDrawer\r\n        close={ () => setDrawerVisible(false) }\r\n        refetch={ refetch }\r\n        suite={ activeSuite }\r\n        visible={ drawerVisible } />\r\n    </Content>\r\n  )\r\n}","import { useState } from \"react\"\r\nimport { Button, List, message, Popconfirm } from \"antd\"\r\nimport { Content } from \"antd/lib/layout/layout\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { GuestsFull as GuestsData, GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { PlusCircleOutlined, WarningOutlined } from \"@ant-design/icons\"\r\nimport { useMutation, useQuery } from \"@apollo/client\"\r\nimport { GUESTS_FULL } from \"../../lib/graphql/queries/Guests\"\r\nimport { useEffect } from \"react\"\r\nimport { GuestDrawer } from \"../GuestDrawer\"\r\nimport { DELETE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { DeleteGuest, DeleteGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/DeleteGuest\"\r\n\r\nexport const Guests = () => {\r\n\r\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\r\n  const [ guests, setGuests ] = useState<GuestsFull_guests[]>([])\r\n  const [ selectedGuest, setSelectedGuest ] = useState<GuestsFull_guests | null>(null)\r\n\r\n  const { loading: queryLoading, data: queryData, refetch } = useQuery<GuestsData>(GUESTS_FULL, {\r\n    onError: () => {\r\n      message.error(\"Chyba při načítání hostů, kontaktujte správce\")\r\n    }\r\n  })\r\n  const [ deleteGuest, { loading: deleteLoading, data: deleteData } ] = useMutation<DeleteGuest, DeleteGuestVariables>(DELETE_GUEST, {\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const guestsData: GuestsFull_guests[] = []\r\n    queryData?.guests?.forEach((guest: GuestsFull_guests | null) => {\r\n      if (guest !== null) {\r\n        guestsData.push(guest)\r\n      }\r\n      setGuests(guestsData)\r\n    })\r\n  }, [ queryData ])\r\n\r\n  useEffect(() => {\r\n    refetch()\r\n  }, [ refetch, deleteData ])\r\n\r\n  return (\r\n    <Content className=\"app-content\">\r\n      <Title level={ 3 } className=\"home__listings-title\">\r\n        Hosté\r\n      </Title>\r\n      <List\r\n        className=\"suites-list\"\r\n        dataSource={ guests }\r\n        itemLayout=\"horizontal\"\r\n        loading={ queryLoading }\r\n        renderItem={ (guest: GuestsFull_guests) => (\r\n          <List.Item\r\n            actions={ [\r\n              <Button\r\n                key=\"edit\"\r\n                onClick={ () => {\r\n                  setSelectedGuest(guest)\r\n                  setDrawerVisible(true)\r\n                } }\r\n                type=\"link\">\r\n                upravit\r\n              </Button>,\r\n              <Popconfirm\r\n                cancelText=\"Ne\"\r\n                icon={ <WarningOutlined /> }\r\n                okText=\"Ano\"\r\n                onConfirm={ () => {\r\n                  deleteGuest({ variables: { guestId: guest.id } })\r\n                } }\r\n                title=\"opravdu odstranit?\">\r\n                <Button\r\n                  key=\"remove\"\r\n                  loading={ deleteLoading }\r\n                  type=\"link\">\r\n                  odstranit\r\n                </Button>\r\n              </Popconfirm>\r\n            ] }>\r\n            <List.Item.Meta title={ `${ guest.name } ${ guest.surname }` } />\r\n          </List.Item>\r\n        ) } />\r\n      <Button\r\n        icon={ <PlusCircleOutlined /> }\r\n        onClick={ () => {\r\n          // setActiveSuite(undefined)\r\n          setDrawerVisible(true)\r\n        } }\r\n        type=\"primary\">\r\n        Přidat hosta\r\n      </Button>\r\n      <GuestDrawer\r\n        close={ () => setDrawerVisible(false) }\r\n        guest={ selectedGuest }\r\n        refetch={ refetch }\r\n        visible={ drawerVisible } />\r\n    </Content>\r\n  )\r\n}","import { useQuery } from \"@apollo/client\"\r\nimport { Empty } from \"antd\"\r\nimport { Content } from \"antd/lib/layout/layout\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { ApexOptions } from \"apexcharts\"\r\nimport { useEffect, useState } from \"react\"\r\nimport ReactApexChart from \"react-apexcharts\"\r\nimport { RESERVATIONS } from \"../../lib/graphql/queries/Reservations\"\r\nimport { Reservations, Reservations_reservations } from \"../../lib/graphql/queries/Reservations/__generated__/Reservations\"\r\nimport { Reservation } from \"../../lib/Types\"\r\nimport \"./styles.css\"\r\n\r\n// https://apexcharts.com/react-chart-demos/timeline-charts/multiple-series-group-rows/\r\nexport const Overview = () => {\r\n\r\n  const [ series, setSeries ] = useState<any[]>([])\r\n  const getColor = (reservationType: string): string => {\r\n    switch (reservationType) {\r\n      case \"Nezávazná Rezervace\":\r\n        return \"#e4e724\"\r\n      case \"Aktuálně Ubytování\":\r\n        return \"#9c88ff\"\r\n      case \"Obydlený Termín\":\r\n        return \"#db913c\"\r\n      case \"Závazná Rezervace\":\r\n      default: return \"#0eca2d\"\r\n    }\r\n  }\r\n  const getTimePadded = (hours: number, minutes: number) => {\r\n    let time = ''\r\n    time += (hours < 10 ? '0' : '') + hours\r\n    time += ':'\r\n    time += (minutes < 10 ? '0' : '') + minutes\r\n    return time\r\n  }\r\n\r\n  const { data, refetch } = useQuery<Reservations>(RESERVATIONS)\r\n\r\n  useEffect(() => {\r\n    const series: any[] = []\r\n    data?.reservations?.forEach((reservation: Reservations_reservations | null) => {\r\n      if (reservation !== null) {\r\n        series.push({\r\n          data: [\r\n            {\r\n              x: `${ reservation.suite.title } (${ reservation.suite.number })`,\r\n              y: [\r\n                new Date(reservation.fromDate).getTime(),\r\n                new Date(reservation.toDate).getTime()\r\n              ]\r\n            }\r\n          ],\r\n          name: Reservation.getType(reservation.type),\r\n          reservation: reservation.id,\r\n          suite: reservation.suite.id\r\n        })\r\n      }\r\n    })\r\n    setSeries(series)\r\n  }, [ data ])\r\n\r\n  useEffect(() => {\r\n    refetch()\r\n  }, [ refetch ])\r\n\r\n  const locateSeries = (index: number) => {\r\n    if (index !== -1) {\r\n      console.warn('Reservation ', series[ index ])\r\n    }\r\n  }\r\n\r\n  const options: ApexOptions = {\r\n    chart: {\r\n      events: {\r\n        click: (_e, _chart, config) => {\r\n          locateSeries(config.seriesIndex)\r\n        }\r\n      },\r\n      height: 350,\r\n      locales: [ {\r\n        name: \"en\",\r\n        options: {\r\n          months: [ \"Leden\", \"Únor\", \"Březen\", \"Duben\", \"Květen\", \"Červen\", \"Červenec\", \"Srpen\", \"Září\", \"Říjen\", \"Listopad\", \"Prosinec\" ],\r\n          shortMonths: [ \"Leden\", \"Únor\", \"Březen\", \"Duben\", \"Květen\", \"Červen\", \"Červenec\", \"Srpen\", \"Září\", \"Říjen\", \"Listopad\", \"Prosinec\" ],\r\n          toolbar: {\r\n            download: \"Stáhnout\",\r\n            pan: \"Panoráma\",\r\n            reset: \"Resetovat Přiblížení\",\r\n            selectionZoom: \"Zvětšení Výběru\",\r\n            zoomIn: \"Přiblížit\",\r\n            zoomOut: \"Oddálit\"\r\n          }\r\n        }\r\n      } ],\r\n      type: \"rangeBar\" as const\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        barHeight: '80%',\r\n        rangeBarGroupRows: true\r\n      }\r\n    },\r\n    colors: [ ({ seriesIndex, w }: { seriesIndex: any, w: any }) => {\r\n      return getColor(w.config.series[ seriesIndex ].name)\r\n    }\r\n    ],\r\n    fill: {\r\n      type: 'solid'\r\n    },\r\n    xaxis: {\r\n      type: 'datetime' as const\r\n    },\r\n    legend: {\r\n      customLegendItems: [\r\n        \"Závazná Rezervace\",\r\n        \"Nezávazná Rezervace\",\r\n        \"Aktuálně Ubytování\",\r\n        \"Obydlený Termín\"\r\n      ],\r\n      markers: {\r\n        width: 12,\r\n        height: 12,\r\n        strokeWidth: 0,\r\n        strokeColor: '#fff',\r\n        fillColors: [\r\n          \"#0eca2d\",\r\n          \"#e4e724\",\r\n          \"#9c88ff\",\r\n          \"#db913c\"\r\n        ],\r\n        radius: 12,\r\n        customHTML: undefined,\r\n        onClick: undefined,\r\n        offsetX: 0,\r\n        offsetY: 0\r\n      },\r\n      position: 'top' as const\r\n    },\r\n    stroke: {\r\n      width: 1\r\n    },\r\n    tooltip: {\r\n      custom: (options) => {\r\n        const tooltipValues = options.ctx.rangeBar.getTooltipValues(options)\r\n        const seriesName = tooltipValues.seriesName.trim().substring(0, tooltipValues.seriesName.trim().length - 1)\r\n        const reservationName = tooltipValues.ylabel.trim().substring(0, tooltipValues.ylabel.trim().length - 1)\r\n        const from = new Date(tooltipValues.start)\r\n        const to = new Date(tooltipValues.end)\r\n        return '<div class=\"apexcharts-tooltip-rangebar\"><div>' +\r\n          `<span class=\"series-name\" style=\"font-weight: bold\">${ reservationName }</span>` +\r\n          '</div><div>' +\r\n          `<span class=\"category\" style=\"color:${ getColor(seriesName) }\">${ tooltipValues.seriesName }</span>` +\r\n          `<span class=\"value start-value\" style=\"font-weight: bold\">${ tooltipValues.startVal } ${ getTimePadded(from.getHours(), from.getMinutes()) }</span>` +\r\n          '<span class=\"separator\"> - </span>' +\r\n          `<span class=\"value end-value\" style=\"font-weight: bold\">${ tooltipValues.endVal } ${ getTimePadded(to.getHours(), to.getMinutes()) }</span>` +\r\n          '</div></div></div>'\r\n      }\r\n    }\r\n  }\r\n\r\n  const getContent = () => {\r\n    return series.length > 0 ? (\r\n      <div id=\"chart\">\r\n        <ReactApexChart series={ series } options={ options } type=\"rangeBar\" height={ 350 }></ReactApexChart>\r\n      </div>\r\n    ) : <Empty />\r\n  }\r\n\r\n  return (\r\n    <Content className=\"app-content\">\r\n      <Title level={ 3 } className=\"home__listings-title\">\r\n        Přehled\r\n      </Title>\r\n      { getContent() }\r\n    </Content>\r\n  )\r\n}"],"sourceRoot":""}