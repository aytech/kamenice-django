{"version":3,"sources":["lib/Types.ts","lib/Cookie.ts","sections/Header/assets/mill.svg","lib/components/Colors.ts","lib/components/UrlHelper.ts","lib/Constants.ts","lib/graphql/mutations/Token/index.ts","sections/Header/components/MenuItems.tsx","sections/Header/index.tsx","sections/NotFound/index.tsx","sections/Reservations/components/ReservationItem/index.tsx","lib/components/ReservationFormHelper.ts","index.tsx","lib/components/FormHelper.ts","lib/components/GuestFormHelper.ts","lib/graphql/mutations/Guest/index.ts","sections/GuestDrawer/index.tsx","lib/graphql/queries/Guests/index.ts","lib/graphql/mutations/Reservation/index.ts","sections/ReservationModal/index.tsx","lib/graphql/queries/Suites/index.ts","sections/Reservations/index.tsx","sections/Guests/components/GuestItem.tsx","sections/Guests/index.tsx","lib/graphql/mutations/Suite/index.ts","sections/SuiteDrawer/index.tsx","sections/Suites/components/AddSuite/index.tsx","sections/Suites/index.tsx","sections/Login/index.tsx","lib/graphql/queries/ReservationGuests/index.ts","lib/graphql/mutations/Contact/index.ts","sections/ReservationGuests/components/Error/index.tsx","sections/ReservationGuests/components/Host/index.tsx","lib/graphql/mutations/ReservationGuest/index.ts","sections/ReservationGuests/components/ReservationGuestDrawer/index.tsx","sections/ReservationGuests/components/Roommates/index.tsx","sections/ReservationGuests/index.tsx","sections/App/components/PageTitle/index.tsx","sections/App/index.tsx"],"names":["GuestAge","GuestGender","getCookie","name","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","Colors","colors","getRandomColor","Math","floor","random","getReservationColor","reservationType","UrlHelper","urlParts","window","location","search","undefined","dateFormat","errorMessages","pageTitles","paths","refreshTokenName","tokenName","usernameKey","TOKEN_AUTH","gql","TOKEN_REFRESH","TOKEN_REVOKE","MenuItems","withRouter","history","username","localStorage","getItem","useMutation","revokeToken","revokeLoading","loading","redirectToLogin","useCallback","removeItem","push","userAvatar","size","style","backgroundColor","toUpperCase","spinning","mode","Item","icon","BookOutlined","to","IdcardOutlined","HomeOutlined","className","SubMenu","title","LogoutOutlined","onClick","refreshToken","variables","then","finally","Header","src","logo","alt","NotFound","Content","status","subTitle","extra","type","ReservationItem","item","itemContext","getItemProps","getResizeProps","leftResizeProps","left","rightResizeProps","right","itemProps","useResizeHandle","content","color","fontWeight","start_time","format","end_time","maxHeight","dimensions","height","strong","Reservation","key","apolloClient","ReservationFormHelper","mealOptions","label","value","reservationOptions","getRequiredRule","message","required","guestValidators","form","validator","_rule","roommates","getFieldValue","Promise","resolve","duplicate","filter","id","reject","Error","roommateValidators","duplicates","FormHelper","requiredRule","GuestFormHelper","ageOptions","getGuestResponseErrorList","errorString","Array","from","Object","values","JSON","parse","replaceAll","list","error","phoneCodeRequiredRules","pattern","transform","requiredAlphaRules","requiredNumericRules","CREATE_GUEST","UPDATE_GUEST","DELETE_GUEST","GuestDrawer","addGuest","close","guest","removeGuest","visible","Form","useForm","createGuest","createLoading","updateGuest","updateLoading","deleteGuest","deleteLoading","useState","confirmClose","setConfirmClose","initialValues","age","address","municipality","addressMunicipality","psc","addressPsc","street","addressStreet","citizenship","selected","email","gender","identity","phone","phoneNumber","surname","visa","visaNumber","emailPrefixIcon","noStyle","MailOutlined","useEffect","resetFields","closeIcon","onCancel","onConfirm","placement","CloseOutlined","isFieldsTouched","width","footer","cancelText","WarningOutlined","okText","guestId","data","success","danger","float","validateFields","formData","getFieldsValue","new","String","catch","footerStyle","padding","textAlign","active","paragraph","rows","layout","level","hasFeedback","rules","placeholder","addonBefore","options","Option","Group","compact","marginBottom","GUESTS","CREATE_RESERVATION","DELETE_RESERVATION","UPDATE_RESERVATION","ReservationModal","addOrUpdateReservation","isOpen","clearReservation","reservation","createReservation","deleteReservation","updateReservation","useLazyQuery","getGuests","guestsLoading","guestsData","deleteConfirmVisible","setDeleteConfirmVisible","guestDrawerOpen","setGuestDrawerOpen","guestOptions","setGuestOptions","dates","fromDate","toDate","meal","notes","purpose","roommate","getGuestOption","submitForm","suite","footerButtons","reservationId","CloseCircleOutlined","PlusCircleOutlined","EditOutlined","guests","forEach","RangePicker","showTime","filterOption","input","option","match","toString","toLowerCase","indexOf","showSearch","List","fields","add","remove","map","fieldKey","restField","align","MinusCircleOutlined","disabled","block","PlusOutlined","TextArea","allowClear","concat","SUITES","SUITES_WITH_RESERVATIONS","Reservations","setPageTitle","groups","setGroups","items","setItems","setReservation","reservationModalOpen","setReservationModalOpen","dataLoading","setDataLoading","reservationsData","useQuery","onCompleted","getTimelineReservationItem","moment","group","background","border","reservationList","suiteList","suites","reservations","canChangeGroup","canMove","canResize","defaultTimeEnd","defaultTimeStart","groupRenderer","itemRenderer","props","lineHeight","onCanvasClick","groupId","time","selectedGroup","find","onItemClick","itemId","timelineItem","getRootProps","unit","styles","date","existingReservations","GuestItem","openGuestDrawer","selectGuest","actions","Meta","avatar","gap","description","Guests","drawerVisible","setDrawerVisible","setGuests","selectedGuest","setSelectedGuest","guestsList","bordered","dataSource","header","itemLayout","renderItem","existingGuests","cachedGuest","CREATE_SUITE","UPDATE_SUITE","DELETE_SUITE","SuiteDrawer","addOrUpdateSuite","clearSuite","createSuite","deleteSuite","updateSuite","number","suiteId","console","tip","AddSuite","onAdd","Suites","activeSuite","setActiveSuite","setSuites","suitesData","suitesList","cachedSuite","labelCol","lg","md","sm","wrapperCol","tailLayout","offset","span","xs","Login","token","tokenAuth","setItem","payload","exp","refreshExpiresIn","onError","reason","getToken","loginLoading","onFinish","password","htmlType","RESERVATION_GUESTS","CONTACT_MESSAGE","show","createContactMessage","creatingMessage","Host","openDrawer","UPDATE_RESERVATON_GUEST","ReservationGuestDrawer","reservationHash","hash","updateReservationGuest","Roommates","ReservationGuests","useParams","setGuest","setRoommates","showError","setShowError","roommateList","reservationGuests","reservationGuest","PageTitle","borderBottom","paddingBottom","App","pageTitle","offsetTop","exact","path","locale","httpLink","HttpLink","uri","authMiddleware","ApolloLink","operation","forward","csrftoken","setContext","headers","errorLink","graphQLErrors","networkError","fromPromise","mutate","mutation","flatMap","authToken","replace","ApolloClient","cache","InMemoryCache","typePolicies","Query","merge","suiteReservations","link","ReactDOM","render","ApolloProvider","client","csCZ","getElementById"],"mappings":"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","file":"static/js/main.1fbdcdfa.chunk.js","sourcesContent":["import { Moment } from \"moment\"\n\nexport type AppReferrer = \"/\" | \"/apartma\" | \"/guests\"\nexport type ReservationType = \"Závazná Rezervace\" | \"Nezávazná Rezervace\" | \"Aktuálně Ubytování\" | \"Obydlený Termín\"\nexport type ReservationTypeKey = \"BINDING\" | \"NONBINDING\" | \"ACCOMMODATED\" | \"INHABITED\"\n\nexport const Reservation = {\n  getType: (key: ReservationTypeKey): ReservationType => {\n    switch (key) {\n      case \"NONBINDING\":\n        return \"Nezávazná Rezervace\"\n      case \"ACCOMMODATED\":\n        return \"Aktuálně Ubytování\"\n      case \"INHABITED\":\n        return \"Obydlený Termín\"\n      case \"BINDING\":\n      default: return \"Závazná Rezervace\"\n    }\n  }\n}\n\nexport type ReservationMeal = \"BREAKFAST\" | \"HALFBOARD\" | \"NOMEAL\"\n\ninterface Address {\n  municipality?: string\n  psc?: number\n  street?: string\n}\n\ninterface Citizenship {\n  new?: string\n  selected?: string\n}\n\nexport interface GuestForm {\n  age: string,\n  address?: Address\n  citizenship?: Citizenship\n  email: string\n  gender?: string\n  id?: number\n  name: string\n  identity: string\n  phone: string\n  surname: string\n  visa?: string\n}\n\nexport interface Guest {\n  id?: number | string\n  name: string\n  surname: string\n}\n\nexport interface Suite {\n  id: number | string\n  number?: number | null\n  title?: string\n}\n\nexport interface IReservation {\n  fromDate: Moment\n  guest?: Guest\n  meal?: ReservationMeal\n  id?: number | string\n  notes?: string | null\n  purpose?: string | null\n  roommates: Array<Guest>\n  suite: Suite\n  toDate: Moment\n  type?: ReservationTypeKey\n}\n\nexport interface SuiteForm {\n  number: number,\n  title: string\n}\n\nexport interface OptionsType {\n  label: string,\n  value: string | number\n}\n\nexport interface CustomGroupFields {\n  number: number | null\n  title: string\n}\n\nexport interface CustomItemFields {\n  color?: string\n  guest: Guest\n  meal: ReservationMeal\n  notes: string | null\n  purpose: string | null\n  roommates: Guest[]\n  suite: Suite\n  type?: ReservationTypeKey\n}\n\nexport enum GuestAge {\n  ADULT = \"ADULT\",\n  CHILD = \"CHILD\",\n  INFANT = \"INFANT\",\n  YOUNG = \"YOUNG\",\n}\n\nexport enum GuestGender {\n  F = \"F\",\n  M = \"M\",\n}\n\nexport interface ReservationGuest {\n  __typename?: string;\n  age?: GuestAge | null;\n  addressMunicipality?: string | null;\n  addressPsc?: number | null;\n  addressStreet?: string | null;\n  citizenship?: string | null;\n  email?: string;\n  gender?: GuestGender | null;\n  identity?: string | null;\n  id?: number | string;\n  name: string;\n  phoneNumber?: string | null;\n  surname?: string;\n  visaNumber?: string | null;\n}","export const getCookie = (name: string): string | null => {\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[ i ].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        return decodeURIComponent(cookie.substring(name.length + 1));\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport const setCookie = (name: string, value: string): void => {\r\n  if (document.cookie && document.cookie !== '') {\r\n    document.cookie = `${ name }=${ value };path=/`\r\n  }\r\n}\r\n\r\nexport const deleteCookie = (name: string): void => {\r\n  const cookie = getCookie(name)\r\n  if (cookie !== null) {\r\n    setCookie(name, `${ cookie };expires=Thu, 01 Jan 1970 00:00:01 GMT`)\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/mill.1f872c17.svg\";","import { ReservationTypeKey } from \"../Types\"\r\n\r\ninterface Props {\r\n  colors: string[]\r\n  getRandomColor: () => string\r\n  getReservationColor: (reservationType: ReservationTypeKey) => string\r\n}\r\n\r\nexport const Colors: Props = {\r\n  colors: [\r\n    \"#f5222d\", // red\r\n    \"#fa541c\", // volcano\r\n    \"#fa8c16\", // orange\r\n    \"#faad14\", // gold\r\n    \"#fadb14\", // yellow\r\n    \"#a0d911\", // lime\r\n    \"#52c41a\", // green\r\n    \"#13c2c2\", // cyan\r\n    \"#1890ff\", // blue\r\n    \"#2f54eb\", // geekblue\r\n    \"#722ed1\", // purple\r\n    \"#eb2f96\", // magenta\r\n  ],\r\n  getRandomColor: () => {\r\n    return Colors.colors[ Math.floor(Math.random() * Colors.colors.length) ]\r\n  },\r\n  getReservationColor: (reservationType: ReservationTypeKey): string => {\r\n    switch (reservationType) {\r\n      case \"NONBINDING\":\r\n        return \"rgb(254, 223, 3)\"\r\n      case \"ACCOMMODATED\":\r\n        return \"rgb(0, 133, 182)\"\r\n      case \"INHABITED\":\r\n        return \"rgb(254, 127, 45)\"\r\n      case \"BINDING\":\r\n      default: return \"rgb(0, 212, 157)\"\r\n    }\r\n  }\r\n}","import { AppReferrer } from \"../Types\";\r\n\r\ninterface IUrlHelper {\r\n  getReferrer: () => AppReferrer\r\n}\r\n\r\nexport const UrlHelper: IUrlHelper = {\r\n  getReferrer: (): AppReferrer => {\r\n    const urlParts = window.location.search.substring(1).split(\"=\")\r\n    if (urlParts.length >= 2 && urlParts[ 1 ] !== undefined) {\r\n      return urlParts[ 1 ] as AppReferrer\r\n    }\r\n    return \"/\"\r\n  }\r\n}","export const apolloErrorUnauthorized: string = \"Unauthorized\"\nexport const csrfTokenName: string = \"csrftoken\"\nexport const defaultArrivalHour: number = 14\nexport const defaultDepartureHour: number = 10\nexport const dateFormat = \"YYYY-MM-DD HH:mm\"\nexport const errorMessages = {\n  invalidCredentials: \"Please enter valid credentials\",\n  refreshTokenExpired: \"Refresh token is expired\",\n  signatureExpired: \"Signature has expired\",\n  unauthorized: \"Unauthorized\"\n}\nexport const pageTitles = {\n  guests: \"Hosté\",\n  home: \"Rezervace / Obsazenost\",\n  reservation_guests_management: \"Správa hostů\",\n  suites: \"Apartmá\"\n}\nexport const paths = {\n  guests: \"/guests\",\n  login: \"/login\",\n  reservation_guests: \"/rezervace/:hash/hoste\",\n  root: \"/\",\n  suites: \"/apartma\"\n}\nexport const refreshTokenName: string = \"refreshToken\"\nexport const tokenName: string = \"token\"\nexport const usernameKey: string = \"username\"","import { gql } from \"@apollo/client\";\r\n\r\nexport const TOKEN_AUTH = gql`\r\n  mutation TokenAuth($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      payload\r\n      refreshExpiresIn\r\n      refreshToken\r\n      token\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOKEN_REFRESH = gql`\r\n  mutation RefreshToken($refreshToken: String!) {\r\n    refreshToken(refreshToken: $refreshToken) {\r\n      payload\r\n      refreshExpiresIn\r\n      refreshToken\r\n      token\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOKEN_REVOKE = gql`\r\n  mutation RevokeToken($refreshToken: String!) {\r\n    revokeToken(refreshToken: $refreshToken) {\r\n      revoked\r\n    }\r\n  }\r\n`","import { BookOutlined, HomeOutlined, IdcardOutlined, LogoutOutlined } from \"@ant-design/icons\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { Avatar, Menu, Spin } from \"antd\"\r\nimport { useCallback } from \"react\"\r\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\"\r\nimport { Colors } from \"../../../lib/components/Colors\"\r\nimport { UrlHelper } from \"../../../lib/components/UrlHelper\"\r\nimport { refreshTokenName, tokenName, usernameKey } from \"../../../lib/Constants\"\r\nimport { TOKEN_REVOKE } from \"../../../lib/graphql/mutations/Token\"\r\nimport { RevokeToken, RevokeTokenVariables } from \"../../../lib/graphql/mutations/Token/__generated__/RevokeToken\"\r\n\r\nexport const MenuItems = withRouter(({ history }: RouteComponentProps) => {\r\n\r\n  const username = localStorage.getItem(usernameKey)\r\n\r\n  const [ revokeToken, { loading: revokeLoading } ] = useMutation<RevokeToken, RevokeTokenVariables>(TOKEN_REVOKE)\r\n\r\n  const redirectToLogin = useCallback(() => {\r\n    localStorage.removeItem(usernameKey)\r\n    history.push(`/login?next=${ UrlHelper.getReferrer() }`)\r\n  }, [ history ])\r\n\r\n  const logout = (): void => {\r\n    const refreshToken = localStorage.getItem(refreshTokenName)\r\n    if (refreshToken !== null) {\r\n      revokeToken({ variables: { refreshToken } })\r\n        .then(() => {\r\n          localStorage.removeItem(tokenName)\r\n          localStorage.removeItem(refreshTokenName)\r\n        })\r\n        .finally(() => redirectToLogin())\r\n    } else {\r\n      redirectToLogin()\r\n    }\r\n  }\r\n\r\n  const userAvatar = username !== null ? (\r\n    <Avatar\r\n      size={ 32 }\r\n      style={ {\r\n        backgroundColor: Colors.getRandomColor()\r\n      } }>\r\n      { username.substring(0, 1).toUpperCase() }\r\n    </Avatar>\r\n  ) : null\r\n\r\n  return username !== null ? (\r\n    <>\r\n      <Spin\r\n        spinning={ revokeLoading }>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item key=\"reservation\" icon={ <BookOutlined /> }>\r\n            <Link to=\"/\">Rezervace</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"guests\" icon={ <IdcardOutlined /> }>\r\n            <Link to=\"/guests\">Hosté</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"suites\" icon={ <HomeOutlined /> }>\r\n            <Link to=\"/apartma\">Apartmá</Link>\r\n          </Menu.Item>\r\n        </Menu >\r\n      </Spin>\r\n      <Menu className=\"user\" mode=\"horizontal\">\r\n        <Menu.SubMenu\r\n          key=\"user-sub\"\r\n          title={ userAvatar }>\r\n          <Menu.Item\r\n            key=\"logout\"\r\n            icon={ <LogoutOutlined /> }\r\n            onClick={ logout }>\r\n            Odhlásit\r\n          </Menu.Item>\r\n        </Menu.SubMenu>\r\n      </Menu>\r\n    </>\r\n  ) : null\r\n})","import { Link } from 'react-router-dom'\nimport './styles.css'\nimport logo from './assets/mill.svg'\nimport { MenuItems } from './components/MenuItems'\nimport { PageHeader } from 'antd'\n\nexport const Header = () => {\n  return (\n    <PageHeader>\n      <Link to=\"/\">\n        <img className=\"logo\" src={ logo } alt=\"Kamenice logo\" />\n      </Link>\n      <MenuItems />\n    </PageHeader>\n  )\n}","import { Button, Layout, Result } from \"antd\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\n\r\nexport const NotFound = withRouter(({ history }: RouteComponentProps) => {\r\n  return (\r\n    <Layout>\r\n      <Layout.Content>\r\n        <Result\r\n          status=\"404\"\r\n          title=\"Jejda!\"\r\n          subTitle=\"hledáme vaší stránku... ale nemůžeme ji najít...\"\r\n          extra={\r\n            <Button\r\n              onClick={ () => history.push(\"/\") }\r\n              type=\"primary\">\r\n              Přejít na úvod\r\n            </Button>\r\n          } />\r\n      </Layout.Content>\r\n    </Layout>\r\n  )\r\n})","import { Popover } from \"antd\"\r\nimport { Moment } from \"moment\"\r\nimport { ReactCalendarItemRendererProps, TimelineItem } from \"react-calendar-timeline\"\r\nimport Text from \"antd/lib/typography/Text\"\r\nimport { CustomItemFields } from \"../../../../lib/Types\"\r\n\r\nexport const ReservationItem = ({\r\n  item,\r\n  itemContext,\r\n  getItemProps,\r\n  getResizeProps\r\n}: ReactCalendarItemRendererProps<TimelineItem<CustomItemFields, Moment>>) => {\r\n  const { left: leftResizeProps, right: rightResizeProps } = getResizeProps()\r\n  return item.itemProps !== undefined ? (\r\n    <div { ...getItemProps(item.itemProps) }>\r\n      { itemContext.useResizeHandle ? <div { ...leftResizeProps } /> : '' }\r\n      <Popover title={ item.title } content={ (\r\n        <>\r\n          <div style={ { color: item.color, fontWeight: 700 } }>\r\n            { item.type }\r\n          </div>\r\n          <div>\r\n            Od: <strong>{ item.start_time.format(\"DD MMM HH:mm\") }</strong>\r\n          </div>\r\n          <div>\r\n            Do: <strong>{ item.end_time.format(\"DD MMM HH:mm\") }</strong>\r\n          </div>\r\n        </>\r\n      ) }>\r\n        <div\r\n          className=\"rct-item-content\"\r\n          style={ { maxHeight: `${ itemContext.dimensions.height }` } }>\r\n          <Text strong>{ item.title }</Text>\r\n        </div>\r\n      </Popover>\r\n      { itemContext.useResizeHandle ? <div { ...rightResizeProps } /> : '' }\r\n    </div>\r\n  ) : null\r\n}","import { FormInstance, Rule } from \"antd/lib/form\";\r\nimport { OptionsType, Reservation, ReservationTypeKey } from \"../Types\";\r\n\r\ninterface OID {\r\n  id: number\r\n}\r\n\r\ninterface IReservationFormHelper {\r\n  getRequiredRule: (message: string) => Rule\r\n  guestValidators: (form: FormInstance) => Rule[]\r\n  mealOptions: OptionsType[]\r\n  reservationOptions: (OptionsType & { value: ReservationTypeKey })[]\r\n  roommateValidators: (form: FormInstance) => Rule[]\r\n}\r\n\r\nexport const ReservationFormHelper: IReservationFormHelper = {\r\n  mealOptions: [\r\n    {\r\n      label: \"Bez Stravy\",\r\n      value: \"NOMEAL\"\r\n    },\r\n    {\r\n      label: \"Jen Snídaně\",\r\n      value: \"BREAKFAST\"\r\n    },\r\n    {\r\n      label: \"Polopenze\",\r\n      value: \"HALFBOARD\"\r\n    }\r\n  ],\r\n  reservationOptions: [\r\n    {\r\n      label: Reservation.getType(\"BINDING\"),\r\n      value: \"BINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"NONBINDING\"),\r\n      value: \"NONBINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"ACCOMMODATED\"),\r\n      value: \"ACCOMMODATED\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"INHABITED\"),\r\n      value: \"INHABITED\"\r\n    }\r\n  ],\r\n  getRequiredRule: (message: string): Rule => {\r\n    return { required: true, message }\r\n  },\r\n  guestValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"host nemůže být stejný jako spolubydlící\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const roommates: Array<OID> = form.getFieldValue(\"roommates\")\r\n          if (roommates === undefined || roommates.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          const duplicate = roommates.filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicate === undefined || duplicate.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail guest validation, equals to roommate\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"vyberte hosta\",\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  roommateValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"spolubydlící je již vybrán\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const duplicates: Array<OID> = form.getFieldValue(\"roommates\").filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicates === undefined || duplicates.length <= 1) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, duplicate value\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"spolubydlící nemůže být stejný jako host\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          if (form.getFieldValue(\"guest\") !== value) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, equals to guest\"))\r\n        }\r\n      }\r\n    ]\r\n  },\r\n}","import ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport './index.css'\nimport { getCookie } from \"./lib/Cookie\"\nimport moment from 'moment'\nimport 'moment/locale/cs'\nimport { ApolloClient, ApolloError, ApolloLink, ApolloProvider, FetchResult, from, fromPromise, HttpLink, InMemoryCache } from '@apollo/client'\nimport { onError } from '@apollo/client/link/error'\nimport { App } from './sections/App'\nimport { ConfigProvider } from 'antd'\nimport csCZ from \"antd/lib/locale/cs_CZ\"\nimport { csrfTokenName, errorMessages, paths, refreshTokenName, tokenName, usernameKey } from './lib/Constants'\nimport { RefreshToken, RefreshToken_refreshToken } from './lib/graphql/mutations/Token/__generated__/RefreshToken'\nimport { TOKEN_REFRESH } from './lib/graphql/mutations/Token'\n\nmoment.locale(\"cs\")\n\nlet apolloClient: any\n\nconst httpLink = new HttpLink({\n  uri: '/api'\n});\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  const token = localStorage.getItem(tokenName)\n  const csrftoken = getCookie(csrfTokenName)\n  operation.setContext(({ headers = {} }) => ({\n    headers: {\n      ...headers,\n      \"Authorization\": token === null ? \"\" : `JWT ${ token }`,\n      \"X-CSRFToken\": csrftoken === null ? \"\" : csrftoken\n    }\n  }));\n  return forward(operation);\n})\n\nconst refreshToken = () => {\n  return apolloClient\n    .mutate({ mutation: TOKEN_REFRESH, variables: { refreshToken: localStorage.getItem(refreshTokenName) } })\n    .then((value: FetchResult<RefreshToken>) => {\n      return value.data?.refreshToken\n    })\n}\n\nconst errorLink = onError(\n  ({ graphQLErrors, networkError, operation, forward }) => {\n    if (graphQLErrors) {\n      for (let reason of graphQLErrors) {\n        switch (reason.message) {\n          case errorMessages.signatureExpired:\n            return fromPromise(\n              refreshToken()\n                .catch((reason: ApolloError) => console.error(reason))\n            )\n              .flatMap(authToken => {\n                const token = authToken as RefreshToken_refreshToken\n                localStorage.setItem(tokenName, token.token)\n                localStorage.setItem(refreshTokenName, token.refreshToken)\n                localStorage.setItem(usernameKey, token.payload.username)\n                // for debugging only\n                localStorage.setItem(\"tokenExpiresIn\", token.payload.exp.toString())\n                localStorage.setItem(\"refreshTokenExpiresIn\", token.refreshExpiresIn.toString())\n                // --- / ---\n                return forward(operation)\n              })\n          case errorMessages.refreshTokenExpired:\n          case errorMessages.unauthorized:\n            localStorage.removeItem(tokenName)\n            localStorage.removeItem(refreshTokenName)\n            localStorage.removeItem(usernameKey)\n            window.location.replace(paths.login)\n        }\n      }\n    }\n    if (networkError) {\n      console.error(networkError);\n    }\n  }\n)\n\napolloClient = new ApolloClient({\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          guests: {\n            merge: false\n          },\n          reservations: {\n            merge: false\n          },\n          suiteReservations: {\n            merge: false\n          },\n          suites: {\n            merge: false\n          }\n        }\n      },\n      Reservation: {\n        fields: {\n          roommates: { merge: false }\n        }\n      }\n    }\n  }),\n  link: from([\n    errorLink,\n    authMiddleware,\n    httpLink\n  ]),\n})\n\nReactDOM.render(\n  <ApolloProvider client={ apolloClient }>\n    <ConfigProvider locale={ csCZ }>\n      <Router>\n        <App />\n      </Router>\n    </ConfigProvider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n","import { Rule } from \"antd/lib/form\"\r\n\r\ninterface IFormHelper {\r\n  requiredRule: Rule\r\n  trim: (value: string | undefined) => string | undefined\r\n}\r\nexport const FormHelper: IFormHelper = {\r\n  requiredRule: {\r\n    required: true,\r\n    message: \"pole je povinné\"\r\n  },\r\n  trim: (value: string | undefined): string | undefined => {\r\n    return value === undefined ? value : value.trim()\r\n  }\r\n}","import { Rule } from \"antd/lib/form\";\nimport { OptionsType } from \"../Types\";\nimport { FormHelper } from \"./FormHelper\";\n\ninterface IGuestFormHelper {\n  ageOptions: OptionsType[]\n  getGuestResponseErrorList: (errorString: string) => Array<string>\n  phoneCodeRequiredRules: Rule[]\n  requiredAlphaRules: Rule[]\n  requiredNumericRules: Rule[]\n}\n\nexport const GuestFormHelper: IGuestFormHelper = {\n  ageOptions: [\n    {\n      label: \"12+\",\n      value: \"YOUNG\"\n    },\n    {\n      label: \"3-12 let\",\n      value: \"CHILD\"\n    },\n    {\n      label: \"Do 3 let\",\n      value: \"INFANT\"\n    },\n    {\n      label: \"Dospělý\",\n      value: \"ADULT\"\n    }\n  ],\n  getGuestResponseErrorList: (errorString: string) => {\n    try {\n      return Array.from(\n        Object.values(\n          JSON.parse(errorString.replaceAll(\"'\", \"\\\"\"))\n        ), ((list: any) => list[ 0 ])\n      )\n    } catch (error) {\n      return [ \"Chyba serveru, kontaktujte správce\" ]\n    }\n  },\n  phoneCodeRequiredRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte kód ve formátu 420, +420 nebo (420)\",\n      pattern: /^\\+?\\(?[0-9]*\\)?$/,\n      transform: FormHelper.trim\n    }\n  ],\n  requiredAlphaRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte pouze text\",\n      pattern: /^([A-Za-z\\sáÁčČďĎéÉěĚíÍňŇřŘšŠťŤúÚůŮýÝžŽóÓ])+$/,\n      transform: FormHelper.trim\n    }\n  ],\n  requiredNumericRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte pouze čísla\",\n      pattern: /^[\\d\\s]+$/,\n      transform: FormHelper.trim\n    }\n  ]\n}","import { gql } from \"@apollo/client\"\n\nexport const CREATE_GUEST = gql`\n  mutation CreateGuest($data: GuestInput!) {\n    createGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        age\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const UPDATE_GUEST = gql`\n  mutation UpdateGuest($data: GuestInput!) {\n    updateGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        age\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const DELETE_GUEST = gql`\n  mutation DeleteGuest($guestId: ID!) {\n    deleteGuest(guestId: $guestId) {\n      guest {\n        id\n      }\n    }\n  }\n`","import { useState } from \"react\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm, Select, Skeleton } from \"antd\"\r\nimport { CloseOutlined, MailOutlined, WarningOutlined } from \"@ant-design/icons\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { Store } from \"rc-field-form/lib/interface\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport \"./styles.css\"\r\nimport { FetchResult, useMutation } from \"@apollo/client\"\r\nimport { CREATE_GUEST, DELETE_GUEST, UPDATE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuest, CreateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuest\"\r\nimport { GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { Guests_guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { UpdateGuest, UpdateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/UpdateGuest\"\r\nimport { useEffect } from \"react\"\r\nimport { DeleteGuest, DeleteGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/DeleteGuest\"\r\n\r\ninterface Props {\r\n  addGuest: (guest: Guests_guests) => void\r\n  close: () => void\r\n  guest?: GuestsFull_guests | null\r\n  removeGuest?: (guestId: string) => void\r\n  visible: boolean\r\n}\r\n\r\nexport const GuestDrawer = ({\r\n  addGuest,\r\n  close,\r\n  guest,\r\n  removeGuest,\r\n  visible\r\n}: Props) => {\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ createGuest, { loading: createLoading } ] = useMutation<CreateGuest, CreateGuestVariables>(CREATE_GUEST)\r\n  const [ updateGuest, { loading: updateLoading } ] = useMutation<UpdateGuest, UpdateGuestVariables>(UPDATE_GUEST)\r\n  const [ deleteGuest, { loading: deleteLoading } ] = useMutation<DeleteGuest, DeleteGuestVariables>(DELETE_GUEST)\r\n\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n  const initialValues: Store = {\r\n    age: guest?.age,\r\n    address: {\r\n      municipality: guest?.addressMunicipality,\r\n      psc: guest?.addressPsc,\r\n      street: guest?.addressStreet\r\n    },\r\n    citizenship: {\r\n      selected: guest?.citizenship\r\n    },\r\n    email: guest?.email,\r\n    gender: guest?.gender,\r\n    identity: guest?.identity,\r\n    name: guest?.name,\r\n    phone: guest?.phoneNumber,\r\n    surname: guest?.surname,\r\n    visa: guest?.visaNumber\r\n  }\r\n  const emailPrefixIcon = (\r\n    <Form.Item name=\"email-prefix\" noStyle>\r\n      <MailOutlined />\r\n    </Form.Item>\r\n  )\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          age: formData.age,\r\n          addressMunicipality: formData.address?.municipality,\r\n          addressPsc: formData.address?.psc,\r\n          addressStreet: formData.address?.street,\r\n          citizenship: formData.citizenship?.selected === undefined ? formData.citizenship?.new : formData.citizenship.selected,\r\n          email: formData.email,\r\n          gender: formData.gender,\r\n          identity: formData.identity,\r\n          name: formData.name,\r\n          phoneNumber: formData.phone,\r\n          surname: formData.surname,\r\n          visaNumber: formData.visa\r\n        }\r\n        if (guest === undefined || guest === null) {\r\n          createGuest({ variables: { data: { ...variables } } })\r\n            .then((value: FetchResult<CreateGuest>) => {\r\n              const guest = value.data?.createGuest?.guest\r\n              if (guest !== undefined && guest !== null) {\r\n                addGuest(guest)\r\n                message.success(`Host ${ guest.name } ${ guest.surname } přidán!`)\r\n              }\r\n              close()\r\n            })\r\n        } else {\r\n          updateGuest({ variables: { data: { id: String(guest.id), ...variables } } })\r\n            .then((value: FetchResult<UpdateGuest>) => {\r\n              const guest = value.data?.updateGuest?.guest\r\n              if (guest !== undefined && guest !== null) {\r\n                addGuest(guest)\r\n                message.success(`Host ${ guest.name } ${ guest.surname } aktualizován!`)\r\n              }\r\n              close()\r\n            })\r\n        }\r\n      })\r\n      .catch(() => message.error(\"Formulář nelze odeslat, opravte prosím chyby\"))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true) {\r\n      form.resetFields()\r\n    }\r\n  }, [ form, visible ])\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ () => {\r\n            if (form.isFieldsTouched()) {\r\n              setConfirmClose(true)\r\n            } else {\r\n              close()\r\n            }\r\n          } } />\r\n        </Popconfirm>\r\n      ) }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      width={ 500 }\r\n      visible={ visible }\r\n      footer={\r\n        <>\r\n          { guest !== undefined && guest !== null &&\r\n            <Popconfirm\r\n              cancelText=\"Ne\"\r\n              icon={ <WarningOutlined /> }\r\n              okText=\"Ano\"\r\n              onConfirm={ () => {\r\n                deleteGuest({ variables: { guestId: guest.id } })\r\n                  .then((value: FetchResult<DeleteGuest>) => {\r\n                    const guest = value.data?.deleteGuest?.guest\r\n                    if (removeGuest !== undefined && guest !== undefined && guest !== null) {\r\n                      removeGuest(guest.id)\r\n                      message.success(\"Host byl smazán\")\r\n                      close()\r\n                    }\r\n                  })\r\n              } }\r\n              title=\"opravdu odstranit?\">\r\n              <Button\r\n                danger\r\n                style={ {\r\n                  float: \"left\"\r\n                } }\r\n                type=\"primary\">\r\n                Odstranit\r\n              </Button>\r\n            </Popconfirm>\r\n          }\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            { (guest === undefined || guest === null) ? \"Vytvořit\" : \"Upravit\" }\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        padding: \"16px 20px\",\r\n        textAlign: \"right\"\r\n      } }>\r\n      <Skeleton\r\n        active\r\n        loading={ createLoading || updateLoading || deleteLoading }\r\n        paragraph={ { rows: 15 } }>\r\n        <Form\r\n          form={ form }\r\n          initialValues={ initialValues }\r\n          layout=\"vertical\"\r\n          name=\"guest\">\r\n          <Title level={ 5 }>Osobní údaje</Title>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Jméno\"\r\n            name=\"name\"\r\n            required\r\n            rules={ GuestFormHelper.requiredAlphaRules }>\r\n            <Input placeholder=\"Vaše Jméno\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Příjmení\"\r\n            name=\"surname\"\r\n            required\r\n            rules={ GuestFormHelper.requiredAlphaRules }>\r\n            <Input placeholder=\"Vaše Příjmení\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"E-Mail\"\r\n            name=\"email\"\r\n            required\r\n            rules={ [ FormHelper.requiredRule ] }>\r\n            <Input\r\n              addonBefore={ emailPrefixIcon }\r\n              placeholder=\"e-mail\"\r\n              type=\"email\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Číslo OP\"\r\n            name=\"identity\">\r\n            <Input placeholder=\"číslo občanského průkazu\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Telefonní Číslo\"\r\n            name=\"phone\">\r\n            <Input placeholder=\"číslo\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Věk\"\r\n            name=\"age\">\r\n            <Select\r\n              options={ GuestFormHelper.ageOptions }\r\n              placeholder=\"vyberte ze seznamu\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Pohlaví\"\r\n            name=\"gender\">\r\n            <Select\r\n              placeholder=\"vyberte ze seznamu\">\r\n              <Select.Option value=\"M\">Muž</Select.Option>\r\n              <Select.Option value=\"F\">Žena</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Číslo viza\"\r\n            name=\"visa\">\r\n            <Input placeholder=\"číslo visa\" />\r\n          </Form.Item>\r\n          <Title level={ 5 }>Trvalé bydliště</Title>\r\n          <Form.Item\r\n            label=\"Ulice\"\r\n            name={ [ \"address\", \"street\" ] }>\r\n            <Input placeholder=\"ulice\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"PSČ/Obec\">\r\n            <Input.Group compact>\r\n              <Form.Item\r\n                style={ { marginBottom: 0, width: \"50%\" } }\r\n                name={ [ \"address\", \"psc\" ] }>\r\n                <Input placeholder=\"PSČ\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                style={ { marginBottom: 0, width: \"50%\" } }\r\n                name={ [ \"address\", \"municipality\" ] }>\r\n                <Input placeholder=\"Obec\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Občanství\">\r\n            <Input.Group compact>\r\n              <Form.Item\r\n                style={ { width: \"50%\" } }\r\n                name={ [ \"citizenship\", \"selected\" ] }>\r\n                <Select style={ { width: \"100%\" } } placeholder=\"ze seznamu\">\r\n                  <Select.Option value=\"cze\">CZE</Select.Option>\r\n                  <Select.Option value=\"sk\">SK</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                style={ { width: \"50%\" } }\r\n                name={ [ \"citizenship\", \"new\" ] }>\r\n                <Input placeholder=\"ručně\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n        </Form>\r\n      </Skeleton>\r\n    </Drawer>\r\n  )\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const GUESTS = gql`\r\n  query Guests {\r\n    guests {\r\n      age\r\n      addressMunicipality\r\n      addressPsc\r\n      addressStreet\r\n      citizenship\r\n      email\r\n      gender\r\n      identity\r\n      id\r\n      name\r\n      phoneNumber\r\n      surname\r\n      visaNumber\r\n    }\r\n  }\r\n`","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_RESERVATION = gql`\r\n  mutation CreateReservation($data: ReservationInput!) {\r\n    createReservation(data: $data) {\r\n      reservation {\r\n        fromDate\r\n        id\r\n        guest {\r\n          id\r\n          name\r\n          surname\r\n        }\r\n        meal\r\n        notes\r\n        purpose\r\n        roommates {\r\n          id\r\n          name\r\n          surname\r\n        }\r\n        suite {\r\n          id\r\n          number\r\n          title\r\n        }\r\n        toDate\r\n        type\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_RESERVATION = gql`\r\n  mutation DeleteReservation($reservationId: ID!) {\r\n    deleteReservation(reservationId: $reservationId) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_RESERVATION = gql`\r\n  mutation UpdateReservation($data: ReservationInput!) {\r\n    updateReservation(data: $data) {\r\n      reservation {\r\n        fromDate\r\n        id\r\n        guest {\r\n          id\r\n          name\r\n          surname\r\n        }\r\n        meal\r\n        notes\r\n        purpose\r\n        roommates {\r\n          id\r\n          name\r\n          surname\r\n        }\r\n        suite {\r\n          id\r\n          number\r\n          title\r\n        }\r\n        toDate\r\n        type\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\nimport { Button, DatePicker, Form, Input, message, Modal, Popconfirm, Select, Skeleton, Space } from \"antd\"\nimport { Moment } from \"moment\"\nimport { FetchResult, useLazyQuery, useMutation } from \"@apollo/client\"\nimport { Store } from \"rc-field-form/lib/interface\"\nimport { CloseCircleOutlined, CloseOutlined, EditOutlined, MinusCircleOutlined, PlusCircleOutlined, PlusOutlined } from \"@ant-design/icons\"\nimport \"./styles.css\"\nimport { IReservation, OptionsType, ReservationTypeKey } from \"../../lib/Types\"\nimport { ReservationFormHelper } from \"../../lib/components/ReservationFormHelper\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { ReservationInput } from \"../../lib/graphql/globalTypes\"\nimport { dateFormat } from \"../../lib/Constants\"\nimport { GuestDrawer } from \"../GuestDrawer\"\nimport { Guests, Guests_guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\nimport { GUESTS } from \"../../lib/graphql/queries/Guests\"\nimport { CreateReservation, CreateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/CreateReservation\"\nimport { CREATE_RESERVATION, DELETE_RESERVATION, UPDATE_RESERVATION } from \"../../lib/graphql/mutations/Reservation\"\nimport { UpdateReservation, UpdateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/UpdateReservation\"\nimport { DeleteReservation, DeleteReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/DeleteReservation\"\nimport { SuitesWithReservations_reservations } from \"../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations\"\n\ninterface Props {\n  addOrUpdateReservation: (reservation?: SuitesWithReservations_reservations | null) => void\n  close: () => void\n  isOpen: boolean\n  clearReservation: (reservationId?: string | null) => void\n  reservation?: IReservation\n}\n\nexport const ReservationModal = ({\n  addOrUpdateReservation,\n  close,\n  isOpen,\n  clearReservation,\n  reservation,\n}: Props) => {\n\n  const [ createReservation ] = useMutation<CreateReservation, CreateReservationVariables>(CREATE_RESERVATION)\n  const [ deleteReservation ] = useMutation<DeleteReservation, DeleteReservationVariables>(DELETE_RESERVATION)\n  const [ updateReservation ] = useMutation<UpdateReservation, UpdateReservationVariables>(UPDATE_RESERVATION)\n  const [ getGuests, { loading: guestsLoading, data: guestsData } ] = useLazyQuery<Guests>(GUESTS)\n\n  const [ deleteConfirmVisible, setDeleteConfirmVisible ] = useState<boolean>(false)\n  const [ guestDrawerOpen, setGuestDrawerOpen ] = useState<boolean>(false)\n  const [ guestOptions, setGuestOptions ] = useState<OptionsType[]>([])\n\n  const [ form ] = Form.useForm()\n\n  const initialValues: Store & { type?: ReservationTypeKey } = reservation !== undefined ? {\n    dates: [ reservation.fromDate, reservation.toDate ],\n    guest: reservation.guest === undefined ? null : reservation.guest.id,\n    meal: reservation.meal,\n    notes: reservation.notes,\n    purpose: reservation.purpose,\n    roommates: Array.from(reservation.roommates, roommate => {\n      return { id: roommate.id }\n    }),\n    type: reservation.type\n  } : { type: \"NONBINDING\" }\n\n  const getGuestOption = (guest: Guests_guests) => {\n    return {\n      label: `${ guest.name } ${ guest.surname }`,\n      value: guest.id\n    }\n  }\n\n  const addGuestOption = (guest: Guests_guests) => {\n    setGuestOptions(guestOptions.concat(getGuestOption(guest)))\n  }\n\n  const submitForm = (): void => {\n    const formData = form.getFieldsValue(true)\n    const [ from, to ]: Array<Moment> = form.getFieldValue(\"dates\")\n    const roommates = formData.roommates === undefined ? [] :\n      Array.from(formData.roommates, (data: { id: number }) => data.id)\n\n    const variables: ReservationInput = {\n      fromDate: from.format(dateFormat),\n      guest: formData.guest,\n      meal: formData.meal,\n      notes: formData.notes,\n      purpose: formData.purpose,\n      roommates: roommates,\n      suite: reservation !== undefined ? +reservation.suite.id : null,\n      toDate: to.format(dateFormat),\n      type: formData.type\n    }\n    if (reservation !== undefined && reservation.id !== undefined) {\n      updateReservation({ variables: { data: { id: String(reservation.id), ...variables } } })\n        .then((value: FetchResult<UpdateReservation>) => {\n          addOrUpdateReservation(value.data?.updateReservation?.reservation)\n          message.success(\"Rezervace byla aktualizována!\")\n          close()\n        })\n    } else {\n      createReservation({ variables: { data: { ...variables } } })\n        .then((value: FetchResult<CreateReservation>) => {\n          addOrUpdateReservation(value.data?.createReservation?.reservation)\n          message.success(\"Rezervace byla vytvořena!\")\n          close()\n        })\n    }\n  }\n\n  const getRemoveButton = () => {\n    return reservation !== undefined && reservation.id !== undefined ? (\n      <Popconfirm\n        cancelText=\"Ne\"\n        key=\"remove\"\n        okText=\"Ano\"\n        onConfirm={ () => {\n          if (reservation.id !== undefined) {\n            deleteReservation({ variables: { reservationId: String(reservation.id) } })\n              .then((value: FetchResult<DeleteReservation>) => {\n                clearReservation(value.data?.deleteReservation?.reservation?.id)\n                message.success(\"Rezervace byla odstraněna!\")\n                close()\n              })\n          }\n        } }\n        title=\"Odstranit rezervaci?\">\n        <Button\n          className=\"cancel-button\"\n          danger\n          icon={ <CloseCircleOutlined /> }>\n          Odstranit\n        </Button>\n      </Popconfirm>\n    ) : null\n  }\n\n  const footerButtons = [\n    getRemoveButton(),\n    <Button\n      key=\"guest\"\n      onClick={ () => setGuestDrawerOpen(true) }>\n      Přidat hosta\n    </Button>,\n    <Button\n      key=\"create\"\n      icon={ reservation === undefined ? <PlusCircleOutlined /> : <EditOutlined /> }\n      onClick={ () => {\n        form.validateFields()\n          .then(submitForm)\n      } }\n      type=\"primary\">\n      { (reservation !== undefined && reservation.id !== undefined) ? \"Upravit\" : \"Uložit\" }\n    </Button>\n  ]\n\n  useEffect(() => {\n    // Form instance is created on page load (before modal is open),\n    // but the component is rendered only when modal is opened\n    if (isOpen === true) {\n      form.resetFields()\n      getGuests()\n    }\n  }, [ form, getGuests, isOpen, reservation ])\n\n  useEffect(() => {\n    if (guestsData !== undefined && guestsData.guests !== null) {\n      const options: OptionsType[] = []\n      guestsData.guests.forEach((guest: Guests_guests | null) => {\n        if (guest !== null) {\n          options.push(getGuestOption(guest))\n        }\n      })\n      setGuestOptions(options)\n    }\n  }, [ guestsData ])\n\n  return (\n    <>\n      <Modal\n        closeIcon={ (\n          <Popconfirm\n            onCancel={ () => setDeleteConfirmVisible(false) }\n            onConfirm={ close }\n            title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n            visible={ deleteConfirmVisible }>\n            <CloseOutlined onClick={ () => {\n              if (form.isFieldsTouched()) {\n                setDeleteConfirmVisible(true)\n              } else {\n                setDeleteConfirmVisible(false)\n                close()\n              }\n            } } />\n          </Popconfirm>\n        ) }\n        footer={ footerButtons }\n        title=\"Rezervační formulář\"\n        visible={ isOpen }>\n        <Skeleton\n          active\n          loading={ guestsLoading }\n          paragraph={ { rows: 5 } }>\n          <Form\n            form={ form }\n            initialValues={ initialValues }\n            layout=\"vertical\">\n            <Form.Item\n              label=\"Datum Rezervace\"\n              name=\"dates\"\n              required>\n              <DatePicker.RangePicker\n                format={ dateFormat }\n                showTime />\n            </Form.Item>\n            <Form.Item\n              hasFeedback\n              label=\"Host\"\n              name=\"guest\"\n              required\n              rules={ ReservationFormHelper.guestValidators(form) }>\n              <Select\n                filterOption={ (input, option): boolean => {\n                  const match = option?.label?.toString().toLowerCase().indexOf(input.toLowerCase())\n                  return match !== undefined && match >= 0\n                } }\n                options={ guestOptions }\n                showSearch />\n            </Form.Item>\n            <Form.List name=\"roommates\">\n              { (fields, { add, remove }) => (\n                <>\n                  { fields.map(({ key, name, fieldKey, ...restField }) => (\n                    <Space\n                      align=\"baseline\"\n                      className=\"roommate-list\"\n                      key={ key }>\n                      <Form.Item\n                        hasFeedback\n                        { ...restField }\n                        fieldKey={ [ fieldKey, 'first' ] }\n                        name={ [ name, \"id\" ] }\n                        rules={ ReservationFormHelper.roommateValidators(form) }>\n                        <Select\n                          options={ guestOptions }\n                          showSearch />\n                      </Form.Item>\n                      <MinusCircleOutlined onClick={ () => {\n                        remove(name)\n                        form.validateFields()\n                      } } />\n                    </Space>\n                  )) }\n                  <Form.Item>\n                    <Button\n                      disabled={ fields.length >= guestOptions.length }\n                      type=\"dashed\"\n                      onClick={ () => add() }\n                      block\n                      icon={ <PlusOutlined /> }>\n                      Přidat spolubydlícího\n                    </Button>\n                  </Form.Item>\n                </>\n              ) }\n            </Form.List>\n            <Form.Item\n              hasFeedback\n              label=\"Typ Rezervace\"\n              name=\"type\"\n              required\n              rules={ [ ReservationFormHelper.getRequiredRule(\"vyberte typ rezervace\") ] }>\n              <Select\n                options={ ReservationFormHelper.reservationOptions } />\n            </Form.Item>\n            <Form.Item\n              hasFeedback\n              label=\"Strava\"\n              name=\"meal\"\n              required\n              rules={ [ FormHelper.requiredRule ] }>\n              <Select\n                options={ ReservationFormHelper.mealOptions } />\n            </Form.Item>\n            <Form.Item\n              label=\"Účel pobytu\"\n              name=\"purpose\">\n              <Input placeholder=\"účel pobytu\" />\n            </Form.Item>\n            <Form.Item\n              label=\"Poznámky\"\n              name=\"notes\">\n              <Input.TextArea\n                placeholder=\"zadejte text\"\n                allowClear />\n            </Form.Item>\n          </Form>\n        </Skeleton>\n      </Modal>\n      <GuestDrawer\n        close={ () => setGuestDrawerOpen(false) }\n        addGuest={ addGuestOption }\n        visible={ guestDrawerOpen } />\n    </>\n  )\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const SUITES = gql`\r\n  query Suites {\r\n    suites {\r\n      id\r\n      title\r\n      number\r\n    }\r\n  }\r\n`\r\n\r\nexport const SUITES_WITH_RESERVATIONS = gql`\r\n  query SuitesWithReservations {\r\n    guests {\r\n      id\r\n      name\r\n      surname\r\n    }\r\n    suites {\r\n      id\r\n      number\r\n      title\r\n    }\r\n    reservations {\r\n      fromDate\r\n      id\r\n      guest {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      meal\r\n      notes\r\n      purpose\r\n      roommates {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      suite {\r\n        id\r\n      }\r\n      toDate\r\n      type\r\n    }\r\n  }\r\n`","import { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport Title from \"antd/lib/typography/Title\"\nimport Timeline, { CursorMarker, DateHeader, SidebarHeader, TimelineGroup, TimelineHeaders, TimelineItem } from \"react-calendar-timeline\"\nimport { useEffect, useState } from \"react\"\nimport \"react-calendar-timeline/lib/Timeline.css\"\nimport \"./styles.css\"\nimport moment, { Moment } from \"moment\"\nimport { CustomGroupFields, CustomItemFields, IReservation } from \"../../lib/Types\"\nimport { Colors } from \"../../lib/components/Colors\"\nimport { ReservationItem } from \"./components/ReservationItem\"\nimport { ReservationModal } from \"../ReservationModal\"\nimport { useQuery } from \"@apollo/client\"\nimport { Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport { SUITES_WITH_RESERVATIONS } from \"../../lib/graphql/queries/Suites\"\nimport { SuitesWithReservations, SuitesWithReservations_reservations } from \"../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations\"\nimport { Skeleton } from \"antd\"\nimport { pageTitles } from \"../../lib/Constants\"\n\ninterface Props {\n  setPageTitle: (title: string) => void\n}\n\n// https://github.com/namespace-ee/react-calendar-timeline\nexport const Reservations = withRouter(({\n  setPageTitle\n}: RouteComponentProps & Props) => {\n\n  const [ groups, setGroups ] = useState<TimelineGroup<CustomGroupFields>[]>([])\n  const [ items, setItems ] = useState<TimelineItem<CustomItemFields, Moment>[]>([])\n  const [ reservation, setReservation ] = useState<IReservation>()\n  const [ reservationModalOpen, setReservationModalOpen ] = useState<boolean>(false)\n  const [ dataLoading, setDataLoading ] = useState<boolean>(true)\n\n  const { data: reservationsData } = useQuery<SuitesWithReservations>(SUITES_WITH_RESERVATIONS, {\n    onCompleted: () => {\n      setPageTitle(pageTitles.home)\n      setDataLoading(false)\n    }\n  })\n\n  const getTimelineReservationItem = (reservation: SuitesWithReservations_reservations): TimelineItem<CustomItemFields, Moment> => {\n    return {\n      color: Colors.getReservationColor(reservation.type),\n      end_time: moment(reservation.toDate),\n      group: reservation.suite.id,\n      guest: reservation.guest,\n      id: reservation.id,\n      itemProps: {\n        className: 'reservation-item',\n        style: {\n          background: Colors.getReservationColor(reservation.type),\n          border: \"none\"\n        }\n      },\n      meal: reservation.meal,\n      notes: reservation.notes,\n      purpose: reservation.purpose,\n      roommates: reservation.roommates,\n      start_time: moment(reservation.fromDate),\n      suite: reservation.suite,\n      title: `${ reservation.guest.name } ${ reservation.guest.surname }`,\n      type: reservation.type\n    }\n  }\n\n  const addOrUpdateReservation = (reservation?: SuitesWithReservations_reservations | null) => {\n    if (reservation !== undefined && reservation !== null) {\n      const existingReservations = items.filter(item => item.id !== reservation.id)\n      setItems(existingReservations.concat(getTimelineReservationItem(reservation)))\n    }\n  }\n\n  const clearReservation = (reservationId?: string | null) => {\n    if (reservationId !== undefined && reservationId !== null) {\n      setItems(items.filter(item => item.id !== reservationId))\n    }\n    setReservation(undefined)\n  }\n\n  useEffect(() => {\n    const reservationList: TimelineItem<CustomItemFields, Moment>[] = []\n    const suiteList: TimelineGroup<CustomGroupFields>[] = []\n    reservationsData?.suites?.forEach((suite: Suites_suites | null) => {\n      if (suite !== null) {\n        suiteList.push(suite)\n      }\n    })\n    reservationsData?.reservations?.forEach((reservation: SuitesWithReservations_reservations | null) => {\n      if (reservation !== null) {\n        reservationList.push(getTimelineReservationItem(reservation))\n      }\n    })\n    setItems(reservationList)\n    setGroups(suiteList)\n  }, [ reservationsData ])\n\n  // Click on timeline outside of any reservation, \n  // opens modal for new reservation\n  const onCanvasClick = (groupId: number, time: number) => {\n    const selectedGroup = groups.find(group => group.id === groupId)\n    if (selectedGroup !== undefined) {\n      setReservation({\n        fromDate: moment(time),\n        suite: { ...selectedGroup },\n        roommates: [],\n        toDate: moment(time).add(1, \"day\"),\n        type: \"NONBINDING\"\n      })\n      setReservationModalOpen(true)\n    }\n  }\n\n  // Click on item on the timeline opens modal\n  // with existing reservation for editing\n  const onItemClick = (itemId: number) => {\n    const timelineItem = items.find(item => item.id === itemId)\n    if (timelineItem !== undefined) {\n      setReservation({\n        fromDate: moment(timelineItem.start_time),\n        guest: timelineItem.guest,\n        id: timelineItem.id,\n        meal: timelineItem.meal,\n        notes: timelineItem.notes,\n        purpose: timelineItem.purpose,\n        roommates: timelineItem.roommates,\n        suite: timelineItem.suite,\n        toDate: moment(timelineItem.end_time),\n        type: timelineItem.type\n      })\n      setReservationModalOpen(true)\n    }\n  }\n\n  return (\n    <>\n      <Skeleton\n        active\n        loading={ dataLoading }\n        paragraph={ { rows: 5 } }>\n        <Timeline\n          canChangeGroup={ false }\n          canMove={ false }\n          canResize={ false }\n          defaultTimeEnd={ moment().add(12, \"day\") }\n          defaultTimeStart={ moment().add(-12, \"day\") }\n          groupRenderer={ ({ group }) => {\n            return (\n              <>\n                <Title level={ 5 }>{ group.title }</Title>\n              </>\n            )\n          } }\n          groups={ groups }\n          itemRenderer={ props => <ReservationItem { ...props } /> }\n          items={ items }\n          lineHeight={ 60 }\n          onCanvasClick={ onCanvasClick }\n          onItemClick={ onItemClick }>\n          <TimelineHeaders>\n            <SidebarHeader>\n              { ({ getRootProps }) => {\n                return (\n                  <div\n                    { ...getRootProps() }\n                    className=\"side-header\" />\n                )\n              } }\n            </SidebarHeader>\n            <DateHeader unit=\"primaryHeader\" />\n            <DateHeader\n              className=\"days\"\n              unit=\"day\" />\n          </TimelineHeaders>\n          <CursorMarker>\n            {\n              ({ styles, date }) => {\n                return (\n                  <div style={ { ...styles, backgroundColor: \"rgba(136, 136, 136, 0.5)\", color: \"#888\" } }>\n                    <div className=\"rt-marker__label\">\n                      <div className=\"rt-marker__content\">\n                        { moment(date).format(\"DD MMM HH:mm\") }\n                      </div>\n                    </div>\n                  </div>\n                )\n              }\n            }\n          </CursorMarker>\n        </Timeline>\n      </Skeleton>\n      <ReservationModal\n        addOrUpdateReservation={ addOrUpdateReservation }\n        close={ () => {\n          setReservation(undefined)\n          setReservationModalOpen(false)\n        } }\n        isOpen={ reservationModalOpen }\n        clearReservation={ clearReservation }\n        reservation={ reservation } />\n    </>\n  )\n})","import { Avatar, Button, List } from \"antd\"\r\nimport { Colors } from \"../../../lib/components/Colors\"\r\nimport { Guests_guests } from \"../../../lib/graphql/queries/Guests/__generated__/Guests\"\r\n\r\ninterface Props {\r\n  guest: Guests_guests\r\n  openGuestDrawer: () => void\r\n  selectGuest: (guest: Guests_guests) => void\r\n}\r\n\r\nexport const GuestItem = ({\r\n  guest,\r\n  openGuestDrawer,\r\n  selectGuest\r\n}: Props) => {\r\n  return (\r\n    <List.Item\r\n      actions={ [\r\n        <Button\r\n          key=\"edit\"\r\n          onClick={ () => {\r\n            selectGuest(guest)\r\n            openGuestDrawer()\r\n          } }\r\n          type=\"link\">\r\n          upravit\r\n        </Button>,\r\n      ] }>\r\n      <List.Item.Meta\r\n        avatar={\r\n          <Avatar\r\n            gap={ 4 }\r\n            size=\"large\"\r\n            style={ {\r\n              backgroundColor: Colors.getRandomColor()\r\n            } }>\r\n            { guest.name.substring(0, 1).toUpperCase() }\r\n          </Avatar>\r\n        }\r\n        description={ guest.email }\r\n        title={ `${ guest.name } ${ guest.surname }` } />\r\n    </List.Item>\r\n  )\r\n}","import { useState } from \"react\"\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport { Button, List, Skeleton } from \"antd\"\nimport { GUESTS } from \"../../lib/graphql/queries/Guests\"\nimport { Guests as GuestsData, Guests_guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\nimport { PlusCircleOutlined } from \"@ant-design/icons\"\nimport { useQuery } from \"@apollo/client\"\nimport { useEffect } from \"react\"\nimport { GuestDrawer } from \"../GuestDrawer\"\nimport \"./styles.css\"\nimport { GuestItem } from \"./components/GuestItem\"\nimport { pageTitles } from \"../../lib/Constants\"\n\ninterface Props {\n  setPageTitle: (title: string) => void\n}\n\nexport const Guests = withRouter(({\n  setPageTitle\n}: RouteComponentProps & Props) => {\n\n  const [ dataLoading, setDataLoading ] = useState<boolean>(true)\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\n  const [ guests, setGuests ] = useState<Guests_guests[]>([])\n  const [ selectedGuest, setSelectedGuest ] = useState<Guests_guests | null>(null)\n\n  const { data: guestsData } = useQuery<GuestsData>(GUESTS, {\n    onCompleted: () => {\n      setDataLoading(false)\n      setPageTitle(pageTitles.guests)\n    }\n  })\n\n  useEffect(() => {\n    const guestsList: Guests_guests[] = []\n    if (guestsData !== undefined && guestsData?.guests !== null) {\n      guestsData.guests.forEach((guest: Guests_guests | null) => {\n        if (guest !== null) {\n          guestsList.push(guest)\n        }\n      })\n      setGuests(guestsList)\n    }\n  }, [ guestsData ])\n\n  const addOrRemoveGuest = (guest: Guests_guests) => {\n    const existingGuests = guests.filter(cachedGuest => cachedGuest.id !== guest.id)\n    setGuests(existingGuests.concat(guest))\n  }\n\n  const removeGuest = (guestId: string) =>\n    setGuests(guests.filter(cachedGuest => cachedGuest.id !== guestId))\n\n  return (\n    <>\n      <Skeleton\n        active\n        loading={ dataLoading }\n        paragraph={ { rows: 5 } }>\n        <List\n          bordered={ true }\n          className=\"guests-list\"\n          dataSource={ guests }\n          footer={\n            <Button\n              icon={ <PlusCircleOutlined /> }\n              onClick={ () => {\n                setSelectedGuest(null)\n                setDrawerVisible(true)\n              } }\n              type=\"primary\">\n              Přidat hosta\n            </Button>\n          }\n          header={ <h4>Seznam hostů</h4> }\n          itemLayout=\"horizontal\"\n          renderItem={ (guest: Guests_guests) => (\n            <GuestItem\n              guest={ guest }\n              openGuestDrawer={ () => setDrawerVisible(true) }\n              selectGuest={ setSelectedGuest } />\n          ) } />\n      </Skeleton>\n      <GuestDrawer\n        addGuest={ addOrRemoveGuest }\n        close={ () => setDrawerVisible(false) }\n        guest={ selectedGuest }\n        removeGuest={ removeGuest }\n        visible={ drawerVisible } />\n    </>\n  )\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_SUITE = gql`\r\n  mutation CreateSuite($data: SuiteInput!) {\r\n    createSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_SUITE = gql`\r\n  mutation UpdateSuite($data: SuiteInput!) {\r\n    updateSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_SUITE = gql`\r\n  mutation DeleteSuite($suiteId: ID!) {\r\n    deleteSuite(suiteId: $suiteId) {\r\n      suite {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\nimport { Button, Drawer, Form, Input, message, Popconfirm, Spin } from \"antd\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { CloseOutlined, WarningOutlined } from \"@ant-design/icons\"\nimport { Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport { Store } from \"antd/lib/form/interface\"\nimport { SuiteForm } from \"../../lib/Types\"\nimport { FetchResult, useMutation } from \"@apollo/client\"\nimport { CreateSuite, CreateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/CreateSuite\"\nimport { CREATE_SUITE, DELETE_SUITE, UPDATE_SUITE } from \"../../lib/graphql/mutations/Suite\"\nimport { UpdateSuite, UpdateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/UpdateSuite\"\nimport { DeleteSuite, DeleteSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/DeleteSuite\"\n\ninterface Props {\n  addOrUpdateSuite: (suite: Suites_suites) => void\n  clearSuite: (suiteId: string) => void\n  close: () => void\n  suite?: Suites_suites\n  visible: boolean\n}\n\nexport const SuiteDrawer = ({\n  addOrUpdateSuite,\n  clearSuite,\n  close,\n  suite,\n  visible\n}: Props) => {\n\n  const [ createSuite, { loading: createLoading } ] = useMutation<CreateSuite, CreateSuiteVariables>(CREATE_SUITE)\n  const [ deleteSuite, { loading: deleteLoading } ] = useMutation<DeleteSuite, DeleteSuiteVariables>(DELETE_SUITE)\n  const [ updateSuite, { loading: updateLoading } ] = useMutation<UpdateSuite, UpdateSuiteVariables>(UPDATE_SUITE)\n\n  const [ form ] = Form.useForm()\n\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\n\n  const initialValues: Store = {\n    number: suite?.number,\n    title: suite?.title\n  }\n\n  const submitForm = () => {\n    form.validateFields()\n      .then(() => {\n        const formData: SuiteForm = form.getFieldsValue(true)\n        const variables = {\n          number: formData.number,\n          title: formData.title\n        }\n        if (suite === undefined) {\n          createSuite({ variables: { data: { ...variables } } })\n            .then((value: FetchResult<CreateSuite>) => {\n              const suite = value.data?.createSuite?.suite\n              if (suite !== undefined && suite !== null) {\n                addOrUpdateSuite(suite)\n                message.success(\"Apartmá byla vytvořena\")\n                close()\n              }\n            })\n        } else {\n          updateSuite({ variables: { data: { id: suite.id, ...variables } } })\n            .then((value: FetchResult<UpdateSuite>) => {\n              const suite = value.data?.updateSuite?.suite\n              if (suite !== undefined && suite !== null) {\n                addOrUpdateSuite(suite)\n                message.success(\"Apartmá byla aktualizována\")\n                close()\n              }\n            })\n        }\n      })\n      .catch(() => {\n        console.error(\"Form validation failed\");\n      })\n  }\n\n  const closeDrawer = (): void => {\n    if (form.isFieldsTouched()) {\n      setConfirmClose(true)\n    } else {\n      close()\n    }\n  }\n\n  useEffect(() => {\n    if (visible === true) {\n      form.resetFields()\n    }\n  }, [ form, visible ])\n\n  return (\n    <Drawer\n      closeIcon={ (\n        <Popconfirm\n          onCancel={ () => setConfirmClose(false) }\n          onConfirm={ () => {\n            setConfirmClose(false)\n            close()\n          } }\n          placement=\"rightTop\"\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n          visible={ confirmClose }>\n          <CloseOutlined onClick={ closeDrawer } />\n        </Popconfirm>\n      ) }\n      footer={\n        <>\n          { suite !== undefined &&\n            <Popconfirm\n              cancelText=\"Ne\"\n              icon={ <WarningOutlined /> }\n              okText=\"Ano\"\n              onConfirm={ () => {\n                deleteSuite({ variables: { suiteId: suite.id } })\n                  .then((value: FetchResult<DeleteSuite>) => {\n                    const suiteId = value.data?.deleteSuite?.suite?.id\n                    if (suiteId !== undefined) {\n                      clearSuite(suiteId)\n                      message.success(\"Apartmá byla odstraněna\")\n                      close()\n                    }\n                  })\n              } }\n              title=\"opravdu odstranit?\">\n              <Button\n                danger\n                style={ {\n                  float: \"left\"\n                } }\n                type=\"primary\">\n                Odstranit\n              </Button>\n            </Popconfirm>\n          }\n          <Button\n            onClick={ submitForm }\n            type=\"primary\">\n            { suite === undefined ? \"Vytvořit\" : \"Upravit\" }\n          </Button>\n        </>\n      }\n      footerStyle={ {\n        textAlign: \"right\"\n      } }\n      placement=\"left\"\n      title=\"Nové apartmá\"\n      visible={ visible }\n      width={ 500 }>\n      <Spin\n        size=\"large\"\n        spinning={\n          createLoading\n          || deleteLoading\n          || updateLoading\n        }\n        tip=\"Načítám...\">\n        <Form\n          form={ form }\n          initialValues={ initialValues }\n          layout=\"vertical\"\n          name=\"suite\">\n          <Form.Item\n            hasFeedback\n            label=\"Název\"\n            name=\"title\"\n            required\n            rules={ [ FormHelper.requiredRule ] }>\n            <Input placeholder=\"název apartmá\" />\n          </Form.Item>\n          <Form.Item\n            hasFeedback\n            label=\"Číslo\"\n            name=\"number\"\n            required\n            rules={ [\n              FormHelper.requiredRule,\n              {\n                message: \"zadejte číslo\",\n                pattern: /^[0-9]+$/\n              }\n            ] }>\n            <Input placeholder=\"číslo apartmá\" type=\"number\" />\n          </Form.Item>\n        </Form>\n      </Spin>\n    </Drawer>\n  )\n}","import { PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\n\r\ninterface Props {\r\n  onAdd: () => void\r\n}\r\n\r\nexport const AddSuite = ({\r\n  onAdd\r\n}: Props) => {\r\n  return (\r\n    <Button\r\n      icon={ <PlusCircleOutlined /> }\r\n      onClick={ onAdd }\r\n      type=\"primary\">\r\n      Přidat apartmá\r\n    </Button>\r\n  )\r\n}","import { useEffect, useState } from \"react\"\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport { HomeOutlined } from \"@ant-design/icons\"\nimport { Avatar, Button, List, Skeleton } from \"antd\"\nimport { SuiteDrawer } from \"../SuiteDrawer\"\nimport { Suites as SuitesData, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport \"./styles.css\"\nimport { AddSuite } from \"./components/AddSuite\"\nimport { useQuery } from \"@apollo/client\"\nimport { SUITES } from \"../../lib/graphql/queries/Suites\"\nimport { pageTitles } from \"../../lib/Constants\"\n\ninterface Props {\n  setPageTitle: (title: string) => void\n}\n\nexport const Suites = withRouter(({\n  setPageTitle\n}: RouteComponentProps & Props) => {\n\n  const [ dataLoading, setDataLoading ] = useState<boolean>(true)\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\n  const [ activeSuite, setActiveSuite ] = useState<Suites_suites>()\n  const [ suites, setSuites ] = useState<Suites_suites[]>([])\n\n  const { data: suitesData } = useQuery<SuitesData>(SUITES, {\n    onCompleted: () => {\n      setDataLoading(false)\n      setPageTitle(pageTitles.suites)\n    }\n  })\n\n  const addOrUpdateSuite = (suite: Suites_suites) => {\n    setSuites(suites.filter(cachedSuite => cachedSuite.id !== suite.id).concat(suite))\n  }\n\n  const clearSuite = (suiteId: string) => {\n    setSuites(suites.filter(suite => suite.id !== suiteId))\n  }\n\n  useEffect(() => {\n    const suitesList: Suites_suites[] = []\n    suitesData?.suites?.forEach((suite: Suites_suites | null) => {\n      if (suite !== null) {\n        suitesList.push(suite)\n      }\n    })\n    setSuites(suitesList)\n  }, [ suitesData ])\n\n  return (\n    <>\n      <Skeleton\n        active\n        loading={ dataLoading }\n        paragraph={ { rows: 5 } }>\n        <List\n          bordered={ true }\n          className=\"suites-list\"\n          dataSource={ suites }\n          footer={\n            <AddSuite\n              onAdd={ () => {\n                setActiveSuite(undefined)\n                setDrawerVisible(true)\n              } } />\n          }\n          header={ <h4>Seznam apartmá</h4> }\n          itemLayout=\"horizontal\"\n          renderItem={ suite => (\n            <List.Item\n              actions={ [\n                <Button\n                  key=\"edit\"\n                  onClick={ () => {\n                    setActiveSuite(suite)\n                    setDrawerVisible(true)\n                  } }\n                  type=\"link\">\n                  upravit\n                </Button>\n              ] }>\n              <List.Item.Meta\n                avatar={\n                  <Avatar gap={ 4 } size=\"large\">\n                    <HomeOutlined />\n                  </Avatar>\n                }\n                description={ `číslo pokoje - ${ suite.number }` }\n                title={ suite.title } />\n            </List.Item>\n          ) } />\n      </Skeleton>\n      <SuiteDrawer\n        addOrUpdateSuite={ addOrUpdateSuite }\n        clearSuite={ clearSuite }\n        close={ () => setDrawerVisible(false) }\n        suite={ activeSuite }\n        visible={ drawerVisible } />\n    </>\n  )\n})","import { ApolloError, useMutation } from \"@apollo/client\"\r\nimport { Button, Form, FormProps, Input, Layout, message, Spin } from \"antd\"\r\nimport { useEffect } from \"react\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport { UrlHelper } from \"../../lib/components/UrlHelper\"\r\nimport { errorMessages, refreshTokenName, tokenName, usernameKey } from \"../../lib/Constants\"\r\nimport { TOKEN_AUTH } from \"../../lib/graphql/mutations/Token\"\r\nimport { TokenAuth, TokenAuthVariables } from \"../../lib/graphql/mutations/Token/__generated__/TokenAuth\"\r\nimport \"./styles.css\"\r\n\r\ninterface Props {\r\n  setPageTitle: (title: string) => void\r\n}\r\n\r\nconst layout: FormProps = {\r\n  labelCol: {\r\n    lg: 8,\r\n    md: 8,\r\n    sm: 8\r\n  },\r\n  wrapperCol: {\r\n    lg: 16,\r\n    md: 16,\r\n    sm: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    lg: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n    xs: {\r\n      offset: 0,\r\n      span: 24\r\n    }\r\n  },\r\n};\r\n\r\nexport const Login = withRouter(({\r\n  history,\r\n  setPageTitle\r\n}: RouteComponentProps & Props) => {\r\n\r\n  const [ getToken, { loading: loginLoading } ] = useMutation<TokenAuth, TokenAuthVariables>(TOKEN_AUTH, {\r\n    onCompleted: (token: TokenAuth) => {\r\n      if (token.tokenAuth !== null) {\r\n        localStorage.setItem(tokenName, token.tokenAuth.token)\r\n        localStorage.setItem(refreshTokenName, token.tokenAuth.refreshToken)\r\n        localStorage.setItem(usernameKey, token.tokenAuth.payload.username)\r\n        // for debugging only\r\n        localStorage.setItem(\"tokenExpiresIn\", token.tokenAuth.payload.exp)\r\n        localStorage.setItem(\"refreshTokenExpiresIn\", token.tokenAuth.refreshExpiresIn.toString())\r\n        // --- / ---\r\n        history.push(UrlHelper.getReferrer())\r\n      }\r\n    },\r\n    onError: (reason: ApolloError) => {\r\n      switch (reason.message) {\r\n        case errorMessages.invalidCredentials:\r\n          message.error(\"Prosím zadejte platné přihlašovací údaje\")\r\n          break\r\n        default:\r\n          message.error(\"Chyba serveru, kontaktujte správce\")\r\n      }\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    setPageTitle(\"Přihlášení\")\r\n  }, [ history, setPageTitle ])\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const login = (data: { password: string, username: string }): void => {\r\n    getToken({\r\n      variables: {\r\n        password: data.password.trim(),\r\n        username: data.username.trim()\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Layout.Content>\r\n      <Spin spinning={ loginLoading } tip=\"Přihlašování...\">\r\n        <Form\r\n          { ...layout }\r\n          className=\"login\"\r\n          form={ form }\r\n          name=\"login\"\r\n          onFinish={ login }>\r\n          <Form.Item\r\n            label=\"Jméno\"\r\n            name=\"username\"\r\n            rules={ [ FormHelper.requiredRule ] }>\r\n            <Input type=\"text\" placeholder=\"uživatelské jméno\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Heslo\"\r\n            name=\"password\"\r\n            rules={ [ FormHelper.requiredRule ] }>\r\n            <Input type=\"password\" placeholder=\"heslo\" />\r\n          </Form.Item>\r\n          <Form.Item { ...tailLayout }>\r\n            <Button type=\"default\" htmlType=\"button\" onClick={ () => form.resetFields() }>\r\n              Reset\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Přihlásit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Spin>\r\n    </Layout.Content>\r\n  )\r\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const RESERVATION_GUESTS = gql`\r\n  query ReservationGuests($reservationHash: String!) {\r\n    reservationGuests(reservationHash: $reservationHash) {\r\n      guest {\r\n        addressMunicipality\r\n        addressPsc\r\n        addressStreet\r\n        age\r\n        citizenship\r\n        email\r\n        gender\r\n        identity\r\n        id\r\n        name\r\n        phoneNumber\r\n        surname\r\n        visaNumber\r\n      }\r\n      roommates {\r\n        addressMunicipality\r\n        addressPsc\r\n        addressStreet\r\n        age\r\n        citizenship\r\n        email\r\n        gender\r\n        identity\r\n        id\r\n        name\r\n        phoneNumber\r\n        surname\r\n        visaNumber\r\n      }\r\n    }\r\n  }\r\n`","import { gql } from \"@apollo/client\";\r\n\r\nexport const CONTACT_MESSAGE = gql`\r\n  mutation CreateContactMessage($data: ContactInput!) {\r\n    createContactMessage(data: $data) {\r\n      contact {\r\n        message\r\n      }\r\n    }\r\n  }\r\n`","import { useMutation } from \"@apollo/client\"\r\nimport { Button, Form, Input, message, Result, Spin } from \"antd\"\r\nimport { CONTACT_MESSAGE } from \"../../../../lib/graphql/mutations/Contact\"\r\nimport { CreateContactMessage, CreateContactMessageVariables } from \"../../../../lib/graphql/mutations/Contact/__generated__/CreateContactMessage\"\r\n\r\ninterface Props {\r\n  show: boolean\r\n}\r\n\r\nexport const Error = ({\r\n  show\r\n}: Props) => {\r\n\r\n  const [ createContactMessage, { loading: creatingMessage } ] = useMutation<CreateContactMessage, CreateContactMessageVariables>(CONTACT_MESSAGE)\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const submitForm = () => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        createContactMessage({ variables: { data: { message: form.getFieldValue(\"message\") } } })\r\n        .then(() => {\r\n          message.success(\"Vaše zpráva byla odeslána, děkujeme!\")\r\n          form.resetFields()\r\n        })\r\n      })\r\n      .catch(() => message.error(\"Formulář nelze odeslat, opravte prosím chyby\"))\r\n  }\r\n\r\n  return show === true ? (\r\n    <Spin\r\n      spinning={ creatingMessage }\r\n      tip=\"Posílám zprávu\">\r\n      <Result\r\n        status=\"error\"\r\n        title=\"Rezervace nenalezena\"\r\n        subTitle=\"Zanechte nám prosím zprávu, nebo nám zavolejte na +420 XXX XXX XXX\"\r\n        extra={\r\n          <Form\r\n            form={ form }\r\n            name=\"contact\"\r\n            onFinish={ submitForm }\r\n            wrapperCol={ {\r\n              offset: 6,\r\n              span: 12\r\n            } }>\r\n            <Form.Item\r\n              name=\"message\"\r\n              rules={ [\r\n                {\r\n                  required: true,\r\n                  message: \"Zadejte text zprávy\"\r\n                }\r\n              ] }>\r\n              <Input.TextArea rows={ 4 } />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Odeslat\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        } />\r\n    </Spin>\r\n  ) : null\r\n}","import { Avatar, Button, List } from \"antd\"\r\nimport { Colors } from \"../../../../lib/components/Colors\"\r\nimport { ReservationGuest } from \"../../../../lib/Types\"\r\n\r\ninterface Props {\r\n  guest?: ReservationGuest[]\r\n  loading: boolean\r\n  openDrawer: (guest: ReservationGuest) => void\r\n}\r\n\r\nexport const Host = ({\r\n  guest,\r\n  loading,\r\n  openDrawer\r\n}: Props) => {\r\n  return guest === undefined ? null : (\r\n    <List\r\n      bordered={ true }\r\n      className=\"guests-list\"\r\n      dataSource={ guest }\r\n      header={ <h4>Host</h4> }\r\n      itemLayout=\"horizontal\"\r\n      renderItem={ (guest: ReservationGuest) => (\r\n        <List.Item\r\n          key={ guest.id }\r\n          actions={\r\n            loading ? [] : [\r\n              <Button\r\n                key=\"edit\"\r\n                onClick={ () => {\r\n                  openDrawer(guest)\r\n                  // setSelectedGuest(guest)\r\n                  // setDrawerVisible(true)\r\n                } }\r\n                type=\"link\">\r\n                upravit\r\n              </Button>,\r\n            ]\r\n          }>\r\n          <List.Item.Meta\r\n            avatar={\r\n              <Avatar\r\n                gap={ 4 }\r\n                size=\"large\"\r\n                style={ {\r\n                  backgroundColor: Colors.getRandomColor()\r\n                } }>\r\n                { guest.name.substring(0, 1).toUpperCase() }\r\n              </Avatar>\r\n            }\r\n            description={ guest.email }\r\n            title={ `${ guest.name } ${ guest.surname }` } />\r\n        </List.Item>\r\n      ) } />\r\n  )\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const UPDATE_RESERVATON_GUEST = gql`\r\n  mutation UpdateReservationGuest($data: ReservationGuestInput!) {\r\n    updateReservationGuest(data: $data) {\r\n      guest {\r\n        addressMunicipality\r\n        addressPsc\r\n        addressStreet\r\n        age\r\n        citizenship\r\n        email\r\n        gender\r\n        identity\r\n        id\r\n        name\r\n        phoneNumber\r\n        surname\r\n        visaNumber\r\n      }\r\n    }\r\n  }\r\n`","import { CloseOutlined, MailOutlined } from \"@ant-design/icons\"\r\nimport { ApolloError, FetchResult, useMutation } from \"@apollo/client\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm, Select, Skeleton } from \"antd\"\r\nimport { Store } from \"antd/lib/form/interface\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { FormHelper } from \"../../../../lib/components/FormHelper\"\r\nimport { GuestFormHelper } from \"../../../../lib/components/GuestFormHelper\"\r\nimport { UPDATE_RESERVATON_GUEST } from \"../../../../lib/graphql/mutations/ReservationGuest\"\r\nimport { UpdateReservationGuest, UpdateReservationGuestVariables } from \"../../../../lib/graphql/mutations/ReservationGuest/__generated__/UpdateReservationGuest\"\r\nimport { GuestForm, ReservationGuest } from \"../../../../lib/Types\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  guest?: ReservationGuest\r\n  reservationHash: string\r\n  visible: boolean\r\n}\r\n\r\nexport const ReservationGuestDrawer = ({\r\n  close,\r\n  guest,\r\n  reservationHash,\r\n  visible\r\n}: Props) => {\r\n\r\n  const [ updateGuest, { loading: updateLoading } ] = useMutation<UpdateReservationGuest, UpdateReservationGuestVariables>(UPDATE_RESERVATON_GUEST)\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const initialValues: Store = {\r\n    age: guest?.age,\r\n    address: {\r\n      municipality: guest?.addressMunicipality,\r\n      psc: guest?.addressPsc,\r\n      street: guest?.addressStreet\r\n    },\r\n    citizenship: {\r\n      selected: guest?.citizenship\r\n    },\r\n    email: guest?.email,\r\n    gender: guest?.gender,\r\n    identity: guest?.identity,\r\n    name: guest?.name,\r\n    phone: guest?.phoneNumber,\r\n    surname: guest?.surname,\r\n    visa: guest?.visaNumber\r\n  }\r\n  const emailPrefixIcon = (\r\n    <Form.Item name=\"email-prefix\" noStyle>\r\n      <MailOutlined />\r\n    </Form.Item>\r\n  )\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          age: formData.age,\r\n          addressMunicipality: formData.address?.municipality,\r\n          addressPsc: formData.address?.psc,\r\n          addressStreet: formData.address?.street,\r\n          citizenship: formData.citizenship?.selected === undefined ? formData.citizenship?.new : formData.citizenship.selected,\r\n          email: formData.email,\r\n          gender: formData.gender,\r\n          identity: formData.identity,\r\n          name: formData.name,\r\n          phoneNumber: formData.phone,\r\n          surname: formData.surname,\r\n          visaNumber: formData.visa\r\n        }\r\n        updateGuest({ variables: { data: { id: String(guest?.id), hash: reservationHash, ...variables } } })\r\n          .then((value: FetchResult<UpdateReservationGuest>) => {\r\n            const guest = value.data?.updateReservationGuest?.guest\r\n            if (guest !== undefined && guest !== null) {\r\n              message.success(`Host ${ guest.name } ${ guest.surname } aktualizován!`)\r\n            }\r\n            close()\r\n          })\r\n          .catch((reason: ApolloError) => message.error(reason.message))\r\n      })\r\n      .catch(() => message.error(\"Formulář nelze odeslat, opravte prosím chyby\"))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true) {\r\n      form.resetFields()\r\n    }\r\n  }, [ form, visible ])\r\n\r\n  return guest === undefined ? null : (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ () => {\r\n            if (form.isFieldsTouched()) {\r\n              setConfirmClose(true)\r\n            } else {\r\n              close()\r\n            }\r\n          } } />\r\n        </Popconfirm>\r\n      ) }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      width={ 500 }\r\n      visible={ visible }\r\n      footer={\r\n        <Button\r\n          onClick={ submitForm }\r\n          type=\"primary\">\r\n          Uložit\r\n        </Button>\r\n      }\r\n      footerStyle={ {\r\n        padding: \"16px 20px\",\r\n        textAlign: \"right\"\r\n      } }>\r\n      <Skeleton\r\n        active\r\n        loading={ updateLoading }\r\n        paragraph={ { rows: 15 } }>\r\n        <Form\r\n          form={ form }\r\n          initialValues={ initialValues }\r\n          layout=\"vertical\"\r\n          name=\"guest\">\r\n          <Title level={ 5 }>Osobní údaje</Title>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Jméno\"\r\n            name=\"name\"\r\n            required\r\n            rules={ GuestFormHelper.requiredAlphaRules }>\r\n            <Input placeholder=\"Vaše Jméno\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Příjmení\"\r\n            name=\"surname\"\r\n            required\r\n            rules={ GuestFormHelper.requiredAlphaRules }>\r\n            <Input placeholder=\"Vaše Příjmení\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"E-Mail\"\r\n            name=\"email\"\r\n            required\r\n            rules={ [ FormHelper.requiredRule ] }>\r\n            <Input\r\n              addonBefore={ emailPrefixIcon }\r\n              placeholder=\"e-mail\"\r\n              type=\"email\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Číslo OP\"\r\n            name=\"identity\">\r\n            <Input placeholder=\"číslo občanského průkazu\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Telefonní Číslo\"\r\n            name=\"phone\">\r\n            <Input placeholder=\"číslo\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Věk\"\r\n            name=\"age\">\r\n            <Select\r\n              options={ GuestFormHelper.ageOptions }\r\n              placeholder=\"vyberte ze seznamu\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Pohlaví\"\r\n            name=\"gender\">\r\n            <Select\r\n              placeholder=\"vyberte ze seznamu\">\r\n              <Select.Option value=\"M\">Muž</Select.Option>\r\n              <Select.Option value=\"F\">Žena</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            label=\"Číslo viza\"\r\n            name=\"visa\">\r\n            <Input placeholder=\"číslo visa\" />\r\n          </Form.Item>\r\n          <Title level={ 5 }>Trvalé bydliště</Title>\r\n          <Form.Item\r\n            label=\"Ulice\"\r\n            name={ [ \"address\", \"street\" ] }>\r\n            <Input placeholder=\"ulice\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"PSČ/Obec\">\r\n            <Input.Group compact>\r\n              <Form.Item\r\n                style={ { marginBottom: 0, width: \"50%\" } }\r\n                name={ [ \"address\", \"psc\" ] }>\r\n                <Input placeholder=\"PSČ\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                style={ { marginBottom: 0, width: \"50%\" } }\r\n                name={ [ \"address\", \"municipality\" ] }>\r\n                <Input placeholder=\"Obec\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Občanství\">\r\n            <Input.Group compact>\r\n              <Form.Item\r\n                style={ { width: \"50%\" } }\r\n                name={ [ \"citizenship\", \"selected\" ] }>\r\n                <Select style={ { width: \"100%\" } } placeholder=\"ze seznamu\">\r\n                  <Select.Option value=\"cze\">CZE</Select.Option>\r\n                  <Select.Option value=\"sk\">SK</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                style={ { width: \"50%\" } }\r\n                name={ [ \"citizenship\", \"new\" ] }>\r\n                <Input placeholder=\"ručně\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n        </Form>\r\n      </Skeleton>\r\n    </Drawer>\r\n  )\r\n}","import { Avatar, Button, List } from \"antd\"\r\nimport { Colors } from \"../../../../lib/components/Colors\"\r\nimport { ReservationGuest } from \"../../../../lib/Types\"\r\n\r\ninterface Props {\r\n  loading: boolean\r\n  openDrawer: (guest: ReservationGuest) => void\r\n  roommates?: ReservationGuest[]\r\n}\r\n\r\nexport const Roommates = ({\r\n  loading,\r\n  openDrawer,\r\n  roommates\r\n}: Props) => {\r\n  return roommates === undefined ? null : (\r\n    <List\r\n      bordered={ true }\r\n      className=\"guests-list\"\r\n      dataSource={ roommates }\r\n      header={ <h4>Spolubydlící</h4> }\r\n      itemLayout=\"horizontal\"\r\n      renderItem={ (roommate: ReservationGuest) => (\r\n        <List.Item\r\n          key={ roommate.id }\r\n          actions={\r\n            loading ? [] : [\r\n              <Button\r\n                key=\"edit\"\r\n                onClick={ () => {\r\n                  openDrawer(roommate)\r\n                  // setSelectedGuest(roommate)\r\n                  // setDrawerVisible(true)\r\n                } }\r\n                type=\"link\">\r\n                upravit\r\n              </Button>,\r\n            ]\r\n          }>\r\n          <List.Item.Meta\r\n            avatar={\r\n              <Avatar\r\n                gap={ 4 }\r\n                size=\"large\"\r\n                style={ {\r\n                  backgroundColor: Colors.getRandomColor()\r\n                } }>\r\n                { roommate.name.substring(0, 1).toUpperCase() }\r\n              </Avatar>\r\n            }\r\n            description={ roommate.email }\r\n            title={ `${ roommate.name } ${ roommate.surname }` } />\r\n        </List.Item>\r\n      ) } />\r\n  )\r\n}","import { useQuery } from \"@apollo/client\"\r\nimport { Spin } from \"antd\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { pageTitles } from \"../../lib/Constants\"\r\nimport { Guests_guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { RESERVATION_GUESTS } from \"../../lib/graphql/queries/ReservationGuests\"\r\nimport { ReservationGuests as ReservationGuestsData, ReservationGuestsVariables, ReservationGuests_reservationGuests_roommates } from \"../../lib/graphql/queries/ReservationGuests/__generated__/ReservationGuests\"\r\nimport { ReservationGuest } from \"../../lib/Types\"\r\nimport { Error } from \"./components/Error\"\r\nimport { Host } from \"./components/Host\"\r\nimport { ReservationGuestDrawer } from \"./components/ReservationGuestDrawer\"\r\nimport { Roommates } from \"./components/Roommates\"\r\n\r\ninterface Props {\r\n  setPageTitle: (title: string | null) => void\r\n}\r\n\r\nexport const ReservationGuests = ({ setPageTitle }: Props) => {\r\n\r\n  let { hash }: { hash: string } = useParams()\r\n\r\n  const [ guest, setGuest ] = useState<ReservationGuest[]>()\r\n  const [ roommates, setRoommates ] = useState<ReservationGuest[]>()\r\n  const [ selectedGuest, setSelectedGuest ] = useState<ReservationGuest>()\r\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\r\n  const [ showError, setShowError ] = useState<boolean>(false)\r\n\r\n  const { loading: dataLoading, data } = useQuery<ReservationGuestsData, ReservationGuestsVariables>(RESERVATION_GUESTS, {\r\n    variables: { reservationHash: hash },\r\n    onCompleted: () => {\r\n      setPageTitle(pageTitles.reservation_guests_management)\r\n      setShowError(false)\r\n    },\r\n    onError: () => {\r\n      setPageTitle(null)\r\n      setShowError(true)\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const roommateList: Guests_guests[] = []\r\n    const guest = data?.reservationGuests?.guest\r\n    const roommates = data?.reservationGuests?.roommates\r\n    if (guest !== undefined && guest !== null) {\r\n      setGuest([ guest ])\r\n    }\r\n    if (roommates !== undefined && roommates !== null) {\r\n      roommates.forEach((roommate: ReservationGuests_reservationGuests_roommates | null) => {\r\n        if (roommate !== null) {\r\n          roommateList.push(roommate)\r\n        }\r\n      })\r\n      setRoommates(roommateList)\r\n    }\r\n  }, [ data ])\r\n\r\n  return (\r\n    <>\r\n      <Spin\r\n        spinning={ dataLoading }>\r\n        <Host\r\n          guest={ guest }\r\n          loading={ dataLoading }\r\n          openDrawer={ (reservationGuest: ReservationGuest) => {\r\n            setSelectedGuest(reservationGuest)\r\n            setDrawerVisible(true)\r\n          } } />\r\n        <Roommates\r\n          loading={ dataLoading }\r\n          openDrawer={ (roommate: ReservationGuest) => {\r\n            setSelectedGuest(roommate)\r\n            setDrawerVisible(true)\r\n          } }\r\n          roommates={ roommates } />\r\n        <Error show={ showError } />\r\n      </Spin>\r\n      <ReservationGuestDrawer\r\n        close={ () => setDrawerVisible(false) }\r\n        guest={ selectedGuest }\r\n        reservationHash={ hash }\r\n        visible={ drawerVisible } />\r\n    </>\r\n  )\r\n}","import Title from \"antd/lib/typography/Title\"\r\n\r\ninterface Props {\r\n  title: string | null\r\n}\r\n\r\nexport const PageTitle = ({\r\n  title\r\n}: Props) => {\r\n  return title === null ? null : (\r\n    <Title\r\n      level={ 3 }\r\n      style={ {\r\n        borderBottom: \"1px solid #e1e1e1\",\r\n        paddingBottom: \".3em\"\r\n      } }>\r\n      { title }\r\n    </Title>\r\n  )\r\n}","import { Affix, Layout } from \"antd\"\nimport { useState } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport { Header } from \"../Header\"\nimport { NotFound } from \"../NotFound\"\nimport { Reservations } from \"../Reservations\"\nimport { Guests } from \"../Guests\"\nimport { Suites } from \"../Suites\"\nimport { Login } from \"../Login\"\nimport { paths } from \"../../lib/Constants\"\nimport { ReservationGuests } from \"../ReservationGuests\"\nimport { PageTitle } from \"./components/PageTitle\"\n\nexport const App = () => {\n\n  const [ pageTitle, setPageTitle ] = useState<string | null>(\"Načítám...\")\n\n  return (\n    <Layout id=\"app\">\n      <Affix offsetTop={ 0 } className=\"app__affix-header\">\n        <Header />\n      </Affix>\n      <Layout.Header>\n        <PageTitle title={ pageTitle } />\n      </Layout.Header>\n      <Layout.Content className=\"app-content\">\n        <Switch>\n          <Route exact path={ paths.root }>\n            <Reservations\n              setPageTitle={ setPageTitle } />\n          </Route>\n          <Route exact path={ paths.suites }>\n            <Suites\n              setPageTitle={ setPageTitle } />\n          </Route>\n          <Route exact path={ paths.guests }>\n            <Guests\n              setPageTitle={ setPageTitle } />\n          </Route>\n          <Route exact path={ paths.login }>\n            <Login\n              setPageTitle={ setPageTitle } />\n          </Route>\n          <Route exact path={ paths.reservation_guests }>\n            <ReservationGuests\n              setPageTitle={ setPageTitle } />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Layout.Content>\n    </Layout >\n  )\n}"],"sourceRoot":""}