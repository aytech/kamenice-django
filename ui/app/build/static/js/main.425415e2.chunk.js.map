{"version":3,"sources":["lib/Cookie.ts","sections/Header/assets/mill.svg","sections/Header/components/MenuItems.tsx","lib/Constants.ts","sections/Header/index.tsx","lib/graphql/queries/Guests/index.ts","lib/components/FormHelper.ts","lib/components/GuestFormHelper.ts","lib/graphql/mutations/Guest/index.ts","sections/GuestDrawer/index.tsx","lib/components/Colors.ts","sections/Guests/components/GuestItem.tsx","sections/Guests/index.tsx","lib/graphql/mutations/User/index.ts","lib/graphql/queries/User/index.ts","sections/Login/index.tsx","sections/NotFound/index.tsx","lib/Types.ts","sections/GuestDrawerSmall/index.tsx","lib/graphql/queries/Suites/index.ts","lib/components/ReservationFormHelper.ts","lib/graphql/mutations/Reservation/index.ts","sections/ReservationModal/index.tsx","sections/Reservations/index.tsx","lib/graphql/mutations/Suite/index.ts","sections/SuiteDrawer/index.tsx","sections/Suites/index.tsx","sections/App/index.tsx","index.tsx"],"names":["getCookie","name","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","setCookie","value","MenuItems","logout","mode","Item","icon","BookOutlined","to","IdcardOutlined","HomeOutlined","LogoutOutlined","onClick","authToken","dateFormat","Header","withRouter","history","location","isAuthenticated","setIsAuthenticated","className","src","logo","alt","deleteCookie","push","pathname","GUESTS_FULL","gql","FormHelper","requiredRule","required","message","undefined","GuestFormHelper","ageOptions","label","getGuestResponseErrorList","errorString","Array","from","Object","values","JSON","parse","replaceAll","list","error","phoneCodeRequiredRules","pattern","transform","requiredAlphaRules","requiredNumericRules","CREATE_GUEST","CREATE_GUEST_BASIC","UPDATE_GUEST","DELETE_GUEST","GuestDrawer","close","guest","refetch","visible","Form","useForm","form","useMutation","onCompleted","data","success","createGuest","surname","resetFields","onError","updateGuest","useState","confirmClose","setConfirmClose","initialValues","age","address","municipality","addressMunicipality","psc","addressPsc","street","addressStreet","citizenship","selected","email","gender","identity","phone","phoneNumber","visa","visaNumber","emailPrefixIcon","noStyle","MailOutlined","useEffect","closeIcon","onCancel","onConfirm","placement","title","CloseOutlined","isFieldsTouched","width","footer","validateFields","then","formData","getFieldsValue","variables","new","id","catch","type","footerStyle","padding","textAlign","layout","level","hasFeedback","rules","placeholder","addonBefore","options","Option","Group","compact","style","marginBottom","Colors","colors","getRandomColor","Math","floor","random","GuestItem","deleteGuest","loading","openGuestDrawer","selectGuest","actions","cancelText","WarningOutlined","okText","Meta","avatar","gap","size","backgroundColor","toUpperCase","description","Guests","drawerVisible","setDrawerVisible","guests","setGuests","selectedGuest","setSelectedGuest","useLazyQuery","getData","queryLoading","queryData","deleteLoading","deleteData","guestsData","forEach","Content","bordered","dataSource","PlusCircleOutlined","header","itemLayout","renderItem","guestId","JWT_TOKEN","USER","labelCol","lg","md","sm","wrapperCol","tailLayout","offset","span","xs","Login","spinnerTip","setSpinnerTip","referrer","setReferrer","urlParts","search","tokenAuth","token","reason","console","getToken","loginLoading","userLoading","useQuery","whoami","username","spinning","tip","onFinish","password","htmlType","NotFound","status","subTitle","extra","Reservation","key","GuestDrawerSmall","open","SUITES","SUITES_WITH_RESERVATIONS","ReservationFormHelper","mealOptions","reservationOptions","getRequiredRule","guestValidators","validator","_rule","roommates","getFieldValue","Promise","resolve","duplicate","filter","reject","Error","roommateValidators","duplicates","CREATE_RESERVATION","DELETE_RESERVATION","UPDATE_RESERVATION","ReservationModal","isOpen","reservation","createReservation","updateReservation","deleteReservation","deleteConfirmVisible","setDeleteConfirmVisible","guestOptions","setGuestOptions","dates","fromDate","toDate","meal","notes","purpose","roommate","closeModal","setTimeout","submitForm","format","suite","String","footerButtons","reservationId","danger","CloseCircleOutlined","EditOutlined","RangePicker","showTime","filterOption","input","option","match","toString","toLowerCase","indexOf","showSearch","List","fields","add","remove","map","fieldKey","restField","align","MinusCircleOutlined","disabled","block","PlusOutlined","TextArea","allowClear","Reservations","getReservationColor","reservationType","groups","setGroups","guestDrawerOpen","setGuestDrawerOpen","items","setItems","reservationModalOpen","setReservationModalOpen","selectedReservation","setSelectedReservation","suites","reservations","stackItems","color","end_time","moment","group","itemProps","background","border","start_time","canChangeGroup","canMove","canResize","defaultTimeEnd","defaultTimeStart","groupRenderer","itemRenderer","item","itemContext","getItemProps","getResizeProps","leftResizeProps","left","rightResizeProps","right","useResizeHandle","content","fontWeight","maxHeight","dimensions","height","strong","lineHeight","onCanvasClick","groupId","time","selectedGroup","find","onItemClick","itemId","_e","entry","getRootProps","unit","styles","date","CREATE_SUITE","UPDATE_SUITE","DELETE_SUITE","SuiteDrawer","createSuite","updateSuite","number","Suites","activeSuite","setActiveSuite","setSuites","deleteSuite","removeLoading","removeData","suitesData","editSuite","suiteId","removeSuite","active","App","locale","csCZ","offsetTop","exact","path","httpLink","HttpLink","uri","authMiddleware","ApolloLink","operation","forward","authtoken","csrftoken","setContext","headers","authorization","client","ApolloClient","cache","InMemoryCache","typePolicies","Query","merge","suiteReservations","link","concat","ReactDOM","render","ApolloProvider","getElementById"],"mappings":"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","file":"static/js/main.425415e2.chunk.js","sourcesContent":["export const getCookie = (name: string): string | null => {\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[ i ].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        return decodeURIComponent(cookie.substring(name.length + 1));\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport const setCookie = (name: string, value: string): void => {\r\n  if (document.cookie && document.cookie !== '') {\r\n    document.cookie = `${ name }=${ value };path=/`\r\n  }\r\n}\r\n\r\nexport const deleteCookie = (name: string): void => {\r\n  const cookie = getCookie(name)\r\n  if (cookie !== null) {\r\n    setCookie(name, `${ cookie };expires=Thu, 01 Jan 1970 00:00:01 GMT`)\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/mill.1f872c17.svg\";","import { BookOutlined, HomeOutlined, IdcardOutlined, LogoutOutlined } from \"@ant-design/icons\"\r\nimport { Menu } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\ninterface Props {\r\n  logout: () => void\r\n}\r\n\r\nexport const MenuItems = ({ logout }: Props) => {\r\n  return (\r\n    <Menu mode=\"horizontal\">\r\n      <Menu.Item key=\"reservation\" icon={ <BookOutlined /> }>\r\n        <Link to=\"/\">Rezervace</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"guests\" icon={ <IdcardOutlined /> }>\r\n        <Link to=\"/guests\">Hosté</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"suites\" icon={ <HomeOutlined /> }>\r\n        <Link to=\"/apartma\">Apartmá</Link>\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        key=\"logout\"\r\n        icon={ <LogoutOutlined /> }\r\n        onClick={ logout }>\r\n        Odhlásit\r\n      </Menu.Item>\r\n    </Menu >\r\n  )\r\n}","export const authToken = \"authtoken\"\r\nexport const defaultArrivalHour: number = 14\r\nexport const defaultDepartureHour: number = 10\r\nexport const dateFormat = \"YYYY-MM-DD HH:mm\"","import { Link, RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport './styles.css'\r\nimport logo from './assets/mill.svg'\r\nimport { MenuItems } from './components/MenuItems'\r\nimport { PageHeader } from 'antd'\r\nimport { deleteCookie } from '../../lib/Cookie'\r\nimport { authToken } from '../../lib/Constants'\r\n\r\ninterface Props {\r\n  isAuthenticated: boolean,\r\n  setIsAuthenticated: (status: boolean) => void\r\n}\r\n\r\nexport const Header = withRouter(({\r\n  history,\r\n  location,\r\n  isAuthenticated,\r\n  setIsAuthenticated\r\n}: RouteComponentProps & Props) => {\r\n\r\n  const logout = (): void => {\r\n    deleteCookie(authToken)\r\n    setIsAuthenticated(false)\r\n    history.push(`/login?next=${ location.pathname }`)\r\n  }\r\n\r\n  return (\r\n    <PageHeader className=\"app-header\">\r\n      <div className=\"app-header__container\">\r\n        <div className=\"app-header__logo\">\r\n          <Link to=\"/\">\r\n            <img src={ logo } alt=\"Kamenice logo\" />\r\n          </Link>\r\n        </div>\r\n        {\r\n          isAuthenticated === true &&\r\n          <div className=\"app-header__menu-section\">\r\n            <MenuItems logout={ logout } />\r\n          </div>\r\n        }\r\n      </div>\r\n    </PageHeader>\r\n  )\r\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const GUESTS = gql`\r\n  query Guests {\r\n    guests {\r\n      id\r\n      name\r\n      surname\r\n    }\r\n  }\r\n`\r\n\r\nexport const GUESTS_FULL = gql`\r\n  query GuestsFull {\r\n    guests {\r\n      age\r\n      addressMunicipality\r\n      addressPsc\r\n      addressStreet\r\n      citizenship\r\n      email\r\n      gender\r\n      identity\r\n      id\r\n      name\r\n      phoneNumber\r\n      surname\r\n      visaNumber\r\n    }\r\n  }\r\n`","import { Rule } from \"antd/lib/form\"\r\n\r\ninterface IFormHelper {\r\n  requiredRule: Rule\r\n  trim: (value: string | undefined) => string | undefined\r\n}\r\nexport const FormHelper: IFormHelper = {\r\n  requiredRule: {\r\n    required: true,\r\n    message: \"pole je povinné\"\r\n  },\r\n  trim: (value: string | undefined): string | undefined => {\r\n    return value === undefined ? value : value.trim()\r\n  }\r\n}","import { Rule } from \"antd/lib/form\";\nimport { OptionsType } from \"../Types\";\nimport { FormHelper } from \"./FormHelper\";\n\ninterface IGuestFormHelper {\n  ageOptions: OptionsType[]\n  getGuestResponseErrorList: (errorString: string) => Array<string>\n  phoneCodeRequiredRules: Rule[]\n  requiredAlphaRules: Rule[]\n  requiredNumericRules: Rule[]\n}\n\nexport const GuestFormHelper: IGuestFormHelper = {\n  ageOptions: [\n    {\n      label: \"12+\",\n      value: \"YOUNG\"\n    },\n    {\n      label: \"3-12 let\",\n      value: \"CHILD\"\n    },\n    {\n      label: \"Do 3 let\",\n      value: \"INFANT\"\n    },\n    {\n      label: \"Dospělý\",\n      value: \"ADULT\"\n    }\n  ],\n  getGuestResponseErrorList: (errorString: string) => {\n    try {\n      return Array.from(\n        Object.values(\n          JSON.parse(errorString.replaceAll(\"'\", \"\\\"\"))\n        ), ((list: any) => list[ 0 ])\n      )\n    } catch (error) {\n      return [ \"Chyba serveru, kontaktujte správce\" ]\n    }\n  },\n  phoneCodeRequiredRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte kód ve formátu 420, +420 nebo (420)\",\n      pattern: /^\\+?\\(?[0-9]*\\)?$/,\n      transform: FormHelper.trim\n    }\n  ],\n  requiredAlphaRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte pouze text\",\n      pattern: /^([A-Za-z\\sáÁčČďĎéÉěĚíÍňŇřŘšŠťŤúÚůŮýÝžŽóÓ])+$/,\n      transform: FormHelper.trim\n    }\n  ],\n  requiredNumericRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte pouze čísla\",\n      pattern: /^[\\d\\s]+$/,\n      transform: FormHelper.trim\n    }\n  ]\n}","import { gql } from \"@apollo/client\"\n\nexport const CREATE_GUEST = gql`\n  mutation CreateGuest($data: GuestInput!) {\n    createGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const CREATE_GUEST_BASIC = gql`\n  mutation CreateGuestBasic($data: GuestInput!) {\n    createGuest(data: $data) {\n      guest {\n        email\n        name\n        surname\n      }\n    }\n  }\n`\n\nexport const UPDATE_GUEST = gql`\n  mutation UpdateGuest($data: GuestInput!) {\n    updateGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const DELETE_GUEST = gql`\n  mutation DeleteGuest($guestId: ID!) {\n    deleteGuest(guestId: $guestId) {\n      guest {\n        id\n      }\n    }\n  }\n`","import { useState } from \"react\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm, Select } from \"antd\"\r\nimport { CloseOutlined, MailOutlined } from \"@ant-design/icons\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { Store } from \"rc-field-form/lib/interface\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport \"./styles.css\"\r\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\r\nimport { CREATE_GUEST, UPDATE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuest, CreateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuest\"\r\nimport { GuestsFull, GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { Guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { UpdateGuest, UpdateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/UpdateGuest\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  guest: GuestsFull_guests | null\r\n  refetch: ((variables?: Partial<OperationVariables>) => Promise<ApolloQueryResult<Guests | GuestsFull>>) | undefined\r\n  visible: boolean\r\n}\r\n\r\nexport const GuestDrawer = ({\r\n  close,\r\n  guest,\r\n  refetch,\r\n  visible\r\n}: Props) => {\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ createGuest ] = useMutation<CreateGuest, CreateGuestVariables>(CREATE_GUEST, {\r\n    onCompleted: (data: CreateGuest) => {\r\n      message.success(`Host ${ data.createGuest?.guest?.name } ${ data.createGuest?.guest?.surname } byl přidán`)\r\n      if (refetch !== undefined) {\r\n        refetch()\r\n      }\r\n      form.resetFields()\r\n      close()\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n  const [ updateGuest ] = useMutation<UpdateGuest, UpdateGuestVariables>(UPDATE_GUEST, {\r\n    onCompleted: (data: UpdateGuest) => {\r\n      message.success(`Host ${ data.updateGuest?.guest?.name } ${ data.updateGuest?.guest?.surname } byl upraven`)\r\n      form.resetFields()\r\n      close()\r\n    },\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n  const initialValues: Store = {\r\n    age: guest?.age,\r\n    address: {\r\n      municipality: guest?.addressMunicipality,\r\n      psc: guest?.addressPsc,\r\n      street: guest?.addressStreet\r\n    },\r\n    citizenship: {\r\n      selected: guest?.citizenship\r\n    },\r\n    email: guest?.email,\r\n    gender: guest?.gender,\r\n    identity: guest?.identity,\r\n    name: guest?.name,\r\n    phone: guest?.phoneNumber,\r\n    surname: guest?.surname,\r\n    visa: guest?.visaNumber\r\n  }\r\n  const emailPrefixIcon = (\r\n    <Form.Item name=\"email-prefix\" noStyle>\r\n      <MailOutlined />\r\n    </Form.Item>\r\n  )\r\n\r\n  const closeDrawer = (): void => {\r\n    if (form.isFieldsTouched()) {\r\n      setConfirmClose(true)\r\n    } else {\r\n      close()\r\n    }\r\n  }\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          age: formData.age,\r\n          addressMunicipality: formData.address?.municipality,\r\n          addressPsc: formData.address?.psc,\r\n          addressStreet: formData.address?.street,\r\n          citizenship: formData.citizenship?.selected === undefined ? formData.citizenship?.new : formData.citizenship.selected,\r\n          email: formData.email,\r\n          gender: formData.gender,\r\n          identity: formData.identity,\r\n          name: formData.name,\r\n          phoneNumber: formData.phone,\r\n          surname: formData.surname,\r\n          visaNumber: formData.visa\r\n        }\r\n        if (guest === null) {\r\n          createGuest({ variables: { data: { ...variables } } })\r\n        } else {\r\n          updateGuest({ variables: { data: { id: guest.id, ...variables } } })\r\n        }\r\n      })\r\n      .catch(() => message.error(\"Formulář nelze odeslat, opravte prosím chyby\"))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true) {\r\n      form.resetFields()\r\n    }\r\n  }, [ form, visible ])\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ closeDrawer } />\r\n        </Popconfirm>\r\n      ) }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      width={ 500 }\r\n      visible={ visible }\r\n      footer={\r\n        <>\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            { guest === null ? \"Vytvořit\" : \"Upravit\" }\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        padding: \"16px 20px\",\r\n        textAlign: \"right\"\r\n      } }>\r\n      <Form\r\n        form={ form }\r\n        initialValues={ initialValues }\r\n        layout=\"vertical\"\r\n        name=\"guest\">\r\n        <Title level={ 5 }>Osobní údaje</Title>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Jméno\"\r\n          name=\"name\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Jméno\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Příjmení\"\r\n          name=\"surname\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Příjmení\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Číslo OP\"\r\n          name=\"identity\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input placeholder=\"číslo občanského průkazu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Telefonní Číslo\"\r\n          name=\"phone\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input placeholder=\"číslo\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"E-Mail\"\r\n          name=\"email\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input\r\n            addonBefore={ emailPrefixIcon }\r\n            placeholder=\"e-mail\"\r\n            type=\"email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Věk\"\r\n          name=\"age\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Select\r\n            options={ GuestFormHelper.ageOptions }\r\n            placeholder=\"vyberte ze seznamu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Pohlaví\"\r\n          name=\"gender\">\r\n          <Select\r\n            placeholder=\"vyberte ze seznamu\">\r\n            <Select.Option value=\"M\">Muž</Select.Option>\r\n            <Select.Option value=\"F\">Žena</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Číslo viza\"\r\n          name=\"visa\">\r\n          <Input placeholder=\"číslo visa\" />\r\n        </Form.Item>\r\n        <Title level={ 5 }>Trvalé bydliště</Title>\r\n        <Form.Item\r\n          label=\"Ulice\"\r\n          name={ [ \"address\", \"street\" ] }>\r\n          <Input placeholder=\"ulice\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"PSČ/Obec\">\r\n          <Input.Group compact>\r\n            <Form.Item\r\n              style={ { marginBottom: 0, width: \"50%\" } }\r\n              name={ [ \"address\", \"psc\" ] }>\r\n              <Input placeholder=\"PSČ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={ { marginBottom: 0, width: \"50%\" } }\r\n              name={ [ \"address\", \"municipality\" ] }>\r\n              <Input placeholder=\"Obec\" />\r\n            </Form.Item>\r\n          </Input.Group>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Občanství\">\r\n          <Input.Group compact>\r\n            <Form.Item\r\n              style={ { width: \"50%\" } }\r\n              name={ [ \"citizenship\", \"selected\" ] }>\r\n              <Select style={ { width: \"100%\" } } placeholder=\"ze seznamu\">\r\n                <Select.Option value=\"cze\">CZE</Select.Option>\r\n                <Select.Option value=\"sk\">SK</Select.Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={ { width: \"50%\" } }\r\n              name={ [ \"citizenship\", \"new\" ] }>\r\n              <Input placeholder=\"ručně\" />\r\n            </Form.Item>\r\n          </Input.Group>\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  )\r\n}","interface Props {\r\n  colors: string[]\r\n  getRandomColor: () => string\r\n}\r\n\r\nexport const Colors: Props = {\r\n  colors: [\r\n    \"#f5222d\", // red\r\n    \"#fa541c\", // volcano\r\n    \"#fa8c16\", // orange\r\n    \"#faad14\", // gold\r\n    \"#fadb14\", // yellow\r\n    \"#a0d911\", // lime\r\n    \"#52c41a\", // green\r\n    \"#13c2c2\", // cyan\r\n    \"#1890ff\", // blue\r\n    \"#2f54eb\", // geekblue\r\n    \"#722ed1\", // purple\r\n    \"#eb2f96\", // magenta\r\n  ],\r\n  getRandomColor: () => {\r\n    return Colors.colors[ Math.floor(Math.random() * Colors.colors.length) ]\r\n  }\r\n}","import { WarningOutlined } from \"@ant-design/icons\"\r\nimport { Avatar, Button, List, Popconfirm } from \"antd\"\r\nimport { Colors } from \"../../../lib/components/Colors\"\r\nimport { GuestsFull_guests } from \"../../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\n\r\ninterface Props {\r\n  deleteGuest: (id: string) => void\r\n  guest: GuestsFull_guests\r\n  loading: boolean\r\n  openGuestDrawer: () => void\r\n  selectGuest: (guest: GuestsFull_guests) => void\r\n}\r\n\r\nexport const GuestItem = ({\r\n  deleteGuest,\r\n  guest,\r\n  loading,\r\n  openGuestDrawer,\r\n  selectGuest\r\n}: Props) => {\r\n  return (\r\n    <List.Item\r\n      actions={ [\r\n        <Button\r\n          key=\"edit\"\r\n          onClick={ () => {\r\n            selectGuest(guest)\r\n            openGuestDrawer()\r\n          } }\r\n          type=\"link\">\r\n          upravit\r\n        </Button>,\r\n        <Popconfirm\r\n          cancelText=\"Ne\"\r\n          icon={ <WarningOutlined /> }\r\n          okText=\"Ano\"\r\n          onConfirm={ () => deleteGuest(guest.id) }\r\n          title=\"opravdu odstranit?\">\r\n          <Button\r\n            key=\"remove\"\r\n            loading={ loading }\r\n            type=\"link\">\r\n            odstranit\r\n          </Button>\r\n        </Popconfirm>\r\n      ] }>\r\n      <List.Item.Meta\r\n        avatar={\r\n          <Avatar\r\n            gap={ 4 }\r\n            size=\"large\"\r\n            style={ {\r\n              backgroundColor: Colors.getRandomColor()\r\n            } }>\r\n            { guest.name.substring(0, 1).toUpperCase() }\r\n          </Avatar>\r\n        }\r\n        description={ guest.email }\r\n        title={ `${ guest.name } ${ guest.surname }` } />\r\n    </List.Item>\r\n  )\r\n}","import { useState } from \"react\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\nimport { Button, Layout, List, message } from \"antd\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { GuestsFull as GuestsData, GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { PlusCircleOutlined } from \"@ant-design/icons\"\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\"\r\nimport { GUESTS_FULL } from \"../../lib/graphql/queries/Guests\"\r\nimport { useEffect } from \"react\"\r\nimport { GuestDrawer } from \"../GuestDrawer\"\r\nimport { DELETE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { DeleteGuest, DeleteGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/DeleteGuest\"\r\nimport \"./styles.css\"\r\nimport { GuestItem } from \"./components/GuestItem\"\r\n\r\ninterface Props {\r\n  isAuthenticated: boolean\r\n}\r\n\r\nexport const Guests = withRouter(({ history, isAuthenticated }: RouteComponentProps & Props) => {\r\n\r\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\r\n  const [ guests, setGuests ] = useState<GuestsFull_guests[]>([])\r\n  const [ selectedGuest, setSelectedGuest ] = useState<GuestsFull_guests | null>(null)\r\n\r\n  const [ getData, { loading: queryLoading, data: queryData, refetch } ] = useLazyQuery<GuestsData>(GUESTS_FULL, {\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n  const [ deleteGuest, { loading: deleteLoading, data: deleteData } ] = useMutation<DeleteGuest, DeleteGuestVariables>(DELETE_GUEST, {\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated === true) {\r\n      getData()\r\n    } else {\r\n      history.push(\"/login?next=/guests\")\r\n    }\r\n  }, [ getData, history, isAuthenticated ])\r\n\r\n  useEffect(() => {\r\n    const guestsData: GuestsFull_guests[] = []\r\n    queryData?.guests?.forEach((guest: GuestsFull_guests | null) => {\r\n      if (guest !== null) {\r\n        guestsData.push(guest)\r\n      }\r\n    })\r\n    setGuests(guestsData)\r\n  }, [ queryData ])\r\n\r\n  useEffect(() => {\r\n    if (refetch !== undefined) {\r\n      refetch()\r\n    }\r\n  }, [ refetch, deleteData ])\r\n\r\n  return (\r\n    <Layout>\r\n      <Layout.Header>\r\n        <Title level={ 3 } className=\"home__listings-title\">\r\n          Hosté\r\n        </Title>\r\n      </Layout.Header>\r\n      <Layout.Content className=\"app-content\">\r\n        <List\r\n          bordered={ true }\r\n          className=\"guests-list\"\r\n          dataSource={ guests }\r\n          footer={\r\n            <Button\r\n              icon={ <PlusCircleOutlined /> }\r\n              onClick={ () => {\r\n                setSelectedGuest(null)\r\n                setDrawerVisible(true)\r\n              } }\r\n              type=\"primary\">\r\n              Přidat hosta\r\n            </Button>\r\n          }\r\n          header={ <h4>Seznam hostů</h4> }\r\n          itemLayout=\"horizontal\"\r\n          loading={ queryLoading }\r\n          renderItem={ (guest: GuestsFull_guests) => (\r\n            <GuestItem\r\n              deleteGuest={ (id: string) => deleteGuest({ variables: { guestId: id } }) }\r\n              guest={ guest }\r\n              loading={ deleteLoading }\r\n              openGuestDrawer={ () => setDrawerVisible(true) }\r\n              selectGuest={ setSelectedGuest } />\r\n          ) } />\r\n        <GuestDrawer\r\n          close={ () => setDrawerVisible(false) }\r\n          guest={ selectedGuest }\r\n          refetch={ refetch }\r\n          visible={ drawerVisible } />\r\n      </Layout.Content>\r\n    </Layout>\r\n  )\r\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const JWT_TOKEN = gql`\r\n  mutation RetrieveToken($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  } \r\n`","import { gql } from \"@apollo/client\";\r\n\r\nexport const USER = gql`\r\n  query Whoami {\r\n    whoami {\r\n      username\r\n    }\r\n  }\r\n`","import { ApolloError, useMutation, useQuery } from \"@apollo/client\"\r\nimport { Button, Form, FormProps, Input, Layout, message, Spin } from \"antd\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport { authToken } from \"../../lib/Constants\"\r\nimport { setCookie } from \"../../lib/Cookie\"\r\nimport { JWT_TOKEN } from \"../../lib/graphql/mutations/User\"\r\nimport { RetrieveToken, RetrieveTokenVariables } from \"../../lib/graphql/mutations/User/__generated__/RetrieveToken\"\r\nimport { USER } from \"../../lib/graphql/queries/User\"\r\nimport { Whoami } from \"../../lib/graphql/queries/User/__generated__/Whoami\"\r\nimport \"./styles.css\"\r\n\r\ninterface Props {\r\n  setIsAuthenticated: (state: boolean) => void\r\n}\r\n\r\nconst layout: FormProps = {\r\n  labelCol: {\r\n    lg: 8,\r\n    md: 8,\r\n    sm: 8\r\n  },\r\n  wrapperCol: {\r\n    lg: 16,\r\n    md: 16,\r\n    sm: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    lg: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n    xs: {\r\n      offset: 0,\r\n      span: 24\r\n    }\r\n  },\r\n};\r\n\r\nexport const Login = withRouter(({ history, location, setIsAuthenticated }: RouteComponentProps & Props) => {\r\n\r\n  const [ spinnerTip, setSpinnerTip ] = useState<string>(\"Načítám...\")\r\n  const [ referrer, setReferrer ] = useState<string>(\"/\")\r\n\r\n  useEffect(() => {\r\n    const urlParts = location.search.substring(1).split(\"=\")\r\n    if (urlParts.length >= 2 && urlParts[ 1 ] !== undefined) {\r\n      setReferrer(urlParts[ 1 ])\r\n    }\r\n  }, [ location ])\r\n\r\n  const [ getToken, { loading: loginLoading } ] = useMutation<RetrieveToken, RetrieveTokenVariables>(JWT_TOKEN, {\r\n    onCompleted: (data: RetrieveToken) => {\r\n      if (data.tokenAuth?.token !== undefined) {\r\n        setCookie(authToken, data.tokenAuth.token)\r\n        setIsAuthenticated(true)\r\n        history.push(referrer)\r\n      }\r\n    },\r\n    onError: (reason: ApolloError) => {\r\n      console.error(reason);\r\n      message.error(\"Nesprávné přihlašovací údaje\")\r\n    }\r\n  })\r\n\r\n  const { loading: userLoading } = useQuery<Whoami>(USER, {\r\n    onCompleted: (data: Whoami) => {\r\n      if (data?.whoami?.username !== undefined) {\r\n        setIsAuthenticated(true)\r\n        history.push(referrer)\r\n      }\r\n    },\r\n    onError: (reason: ApolloError) => {\r\n      console.error(reason)\r\n    }\r\n  })\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const submitForm = (data: { password: string, username: string }): void => {\r\n    setSpinnerTip(\"Přihlašování...\")\r\n    getToken({\r\n      variables: {\r\n        password: data.password.trim(),\r\n        username: data.username.trim()\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Layout.Header>\r\n        <Title level={ 3 } className=\"home__listings-title\">\r\n          Přihlášení\r\n        </Title>\r\n      </Layout.Header>\r\n      <Layout.Content>\r\n        <Spin spinning={ userLoading || loginLoading } tip={ spinnerTip }>\r\n          <Form\r\n            { ...layout }\r\n            className=\"login\"\r\n            form={ form }\r\n            name=\"login\"\r\n            onFinish={ submitForm }>\r\n            <Form.Item\r\n              label=\"Jméno\"\r\n              name=\"username\"\r\n              rules={ [ FormHelper.requiredRule ] }>\r\n              <Input type=\"text\" placeholder=\"uživatelské jméno\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Heslo\"\r\n              name=\"password\"\r\n              rules={ [ FormHelper.requiredRule ] }>\r\n              <Input type=\"password\" placeholder=\"heslo\" />\r\n            </Form.Item>\r\n            <Form.Item { ...tailLayout }>\r\n              <Button type=\"default\" htmlType=\"button\" onClick={ () => form.resetFields() }>\r\n                Reset\r\n              </Button>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Přihlásit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Spin>\r\n      </Layout.Content>\r\n    </Layout>\r\n  )\r\n})","import { Button, Layout, Result } from \"antd\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\n\r\nexport const NotFound = withRouter(({ history }: RouteComponentProps) => {\r\n  return (\r\n    <Layout>\r\n      <Layout.Content>\r\n        <Result\r\n          status=\"404\"\r\n          title=\"Jejda!\"\r\n          subTitle=\"hledáme vaší stránku... ale nemůžeme ji najít...\"\r\n          extra={\r\n            <Button\r\n              onClick={ () => history.push(\"/\") }\r\n              type=\"primary\">\r\n              Přejít na úvod\r\n            </Button>\r\n          } />\r\n      </Layout.Content>\r\n    </Layout>\r\n  )\r\n})","import { Moment } from \"moment\"\n\nexport type ReservationType = \"Závazná Rezervace\" | \"Nezávazná Rezervace\" | \"Aktuálně Ubytování\" | \"Obydlený Termín\"\nexport type ReservationTypeKey = \"BINDING\" | \"NONBINDING\" | \"ACCOMMODATED\" | \"INHABITED\"\n\nexport const Reservation = {\n  getType: (key: ReservationTypeKey): ReservationType => {\n    switch (key) {\n      case \"NONBINDING\":\n        return \"Nezávazná Rezervace\"\n      case \"ACCOMMODATED\":\n        return \"Aktuálně Ubytování\"\n      case \"INHABITED\":\n        return \"Obydlený Termín\"\n      case \"BINDING\":\n      default: return \"Závazná Rezervace\"\n    }\n  }\n}\n\nexport type DrawerType = \"guest\" | \"suite\"\nexport type ReservationMeal = \"BREAKFAST\" | \"HALFBOARD\" | \"NOMEAL\"\n\nexport interface ReservationRange {\n  from: Moment\n  to: Moment\n}\n\ninterface Address {\n  municipality?: string\n  psc?: number\n  street?: string\n}\n\ninterface Citizenship {\n  new?: string\n  selected?: string\n}\n\nexport interface GuestForm {\n  age: string,\n  address?: Address\n  citizenship?: Citizenship\n  email: string\n  gender?: string\n  id?: number\n  name: string\n  identity: string\n  phone: string\n  surname: string\n  visa?: string\n}\n\nexport interface GuestErrorResponse {\n  email: Array<string>\n  gender: Array<string>\n  identity: Array<string>\n  name: Array<string>\n  phone_number: Array<string>\n  surname: Array<string>\n}\n\nexport interface Guest {\n  id?: number | string\n  name: string\n  surname: string\n}\n\nexport interface Suite {\n  id: number | string\n  number?: number | null\n  title?: string\n}\n\nexport interface IReservation {\n  fromDate: Moment\n  guest?: Guest\n  meal?: ReservationMeal\n  id?: number\n  notes?: string | null\n  purpose?: string | null\n  roommates: Array<Guest>\n  suite: Suite\n  toDate: Moment\n  type: ReservationTypeKey\n}\n\nexport interface SuiteForm {\n  number: number,\n  title: string\n}\n\nexport interface OptionsType {\n  label: string,\n  value: string | number\n}\n\nexport interface CustomGroupFields {\n  number: number | null\n  title: string\n}\n\nexport interface CustomItemFields {\n  color?: string\n  type?: string\n}","import { CloseOutlined, MailOutlined } from \"@ant-design/icons\"\r\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm } from \"antd\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { useState } from \"react\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { CREATE_GUEST_BASIC } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuestBasic, CreateGuestBasicVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuestBasic\"\r\nimport { SuitesWithReservations } from \"../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  open: boolean\r\n  refetch: ((variables?: Partial<OperationVariables> | undefined) => Promise<ApolloQueryResult<SuitesWithReservations>>) | undefined\r\n}\r\n\r\nexport const GuestDrawerSmall = ({\r\n  close,\r\n  open,\r\n  refetch\r\n}: Props) => {\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n\r\n  const [ createGuest ] = useMutation<CreateGuestBasic, CreateGuestBasicVariables>(CREATE_GUEST_BASIC, {\r\n    onCompleted: (data: CreateGuestBasic) => {\r\n      message.success(`Host ${ data.createGuest?.guest?.name } ${ data.createGuest?.guest?.surname } byl přidán`)\r\n      if (refetch !== undefined) {\r\n        refetch()\r\n      }\r\n      close()\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          email: formData.email,\r\n          name: formData.name,\r\n          surname: formData.surname\r\n        }\r\n        createGuest({ variables: { data: variables } })\r\n      })\r\n      .catch(() => console.error(\"Formulář nelze odeslat\"))\r\n  }\r\n\r\n  const closeDrawer = (): void => {\r\n    if (form.isFieldsTouched()) {\r\n      setConfirmClose(true)\r\n    } else {\r\n      close()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ closeDrawer } />\r\n        </Popconfirm>\r\n      ) }\r\n      footer={\r\n        <>\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            Vytvořit\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        textAlign: \"right\"\r\n      } }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      visible={ open }\r\n      width={ 500 }>\r\n      <Form\r\n        form={ form }\r\n        layout=\"vertical\"\r\n        name=\"guest\">\r\n        <Title level={ 5 }>Osobní údaje</Title>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Jméno\"\r\n          name=\"name\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Jméno\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Příjmení\"\r\n          name=\"surname\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Příjmení\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"E-Mail\"\r\n          name=\"email\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input\r\n            addonBefore={ (\r\n              <Form.Item name=\"email-prefix\" noStyle>\r\n                <MailOutlined />\r\n              </Form.Item>\r\n            ) }\r\n            placeholder=\"e-mail\"\r\n            type=\"email\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  )\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const SUITES = gql`\r\n  query Suites {\r\n    suites {\r\n      id\r\n      title\r\n      number\r\n    }\r\n  }\r\n`\r\n\r\nexport const SUITES_WITH_RESERVATIONS = gql`\r\n  query SuitesWithReservations {\r\n    guests {\r\n      id\r\n      name\r\n      surname\r\n    }\r\n    suites {\r\n      id\r\n      number\r\n      title\r\n    }\r\n    reservations {\r\n      fromDate\r\n      id\r\n      guest {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      meal\r\n      notes\r\n      purpose\r\n      roommates {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      suite {\r\n        id\r\n      }\r\n      toDate\r\n      type\r\n    }\r\n  }\r\n`","import { FormInstance, Rule } from \"antd/lib/form\";\r\nimport { OptionsType, Reservation, ReservationTypeKey } from \"../Types\";\r\n\r\ninterface OID {\r\n  id: number\r\n}\r\n\r\ninterface IReservationFormHelper {\r\n  getRequiredRule: (message: string) => Rule\r\n  guestValidators: (form: FormInstance) => Rule[]\r\n  mealOptions: OptionsType[]\r\n  reservationOptions: (OptionsType & { value: ReservationTypeKey })[]\r\n  roommateValidators: (form: FormInstance) => Rule[]\r\n}\r\n\r\nexport const ReservationFormHelper: IReservationFormHelper = {\r\n  mealOptions: [\r\n    {\r\n      label: \"Bez Stravy\",\r\n      value: \"NOMEAL\"\r\n    },\r\n    {\r\n      label: \"Jen Snídaně\",\r\n      value: \"BREAKFAST\"\r\n    },\r\n    {\r\n      label: \"Polopenze\",\r\n      value: \"HALFBOARD\"\r\n    }\r\n  ],\r\n  reservationOptions: [\r\n    {\r\n      label: Reservation.getType(\"BINDING\"),\r\n      value: \"BINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"NONBINDING\"),\r\n      value: \"NONBINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"ACCOMMODATED\"),\r\n      value: \"ACCOMMODATED\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"INHABITED\"),\r\n      value: \"INHABITED\"\r\n    }\r\n  ],\r\n  getRequiredRule: (message: string): Rule => {\r\n    return { required: true, message }\r\n  },\r\n  guestValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"host nemůže být stejný jako spolubydlící\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const roommates: Array<OID> = form.getFieldValue(\"roommates\")\r\n          if (roommates === undefined || roommates.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          const duplicate = roommates.filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicate === undefined || duplicate.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail guest validation, equals to roommate\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"vyberte hosta\",\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  roommateValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"spolubydlící je již vybrán\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const duplicates: Array<OID> = form.getFieldValue(\"roommates\").filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicates === undefined || duplicates.length <= 1) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, duplicate value\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"spolubydlící nemůže být stejný jako host\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          if (form.getFieldValue(\"guest\") !== value) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, equals to guest\"))\r\n        }\r\n      }\r\n    ]\r\n  },\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_RESERVATION = gql`\r\n  mutation CreateReservation($data: ReservationInput!) {\r\n    createReservation(data: $data) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_RESERVATION = gql`\r\n  mutation DeleteReservation($reservationId: ID!) {\r\n    deleteReservation(reservationId: $reservationId) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_RESERVATION = gql`\r\n  mutation UpdateReservation($data: ReservationInput!) {\r\n    updateReservation(data: $data) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\nimport { Button, DatePicker, Form, Input, message, Modal, Popconfirm, Select, Space } from \"antd\"\nimport { Moment } from \"moment\"\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\nimport { Store } from \"rc-field-form/lib/interface\"\nimport { CloseCircleOutlined, CloseOutlined, EditOutlined, MinusCircleOutlined, PlusCircleOutlined, PlusOutlined } from \"@ant-design/icons\"\nimport \"./styles.css\"\nimport { IReservation, OptionsType, ReservationTypeKey } from \"../../lib/Types\"\nimport { ReservationFormHelper } from \"../../lib/components/ReservationFormHelper\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { CreateReservation, CreateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/CreateReservation\"\nimport { Guests_guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\nimport { CREATE_RESERVATION, DELETE_RESERVATION, UPDATE_RESERVATION } from \"../../lib/graphql/mutations/Reservation\"\nimport { UpdateReservation, UpdateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/UpdateReservation\"\nimport { ReservationInput } from \"../../lib/graphql/globalTypes\"\nimport { DeleteReservation, DeleteReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/DeleteReservation\"\nimport { dateFormat } from \"../../lib/Constants\"\nimport { SuitesWithReservations } from \"../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations\"\n\ninterface Props {\n  close: () => void\n  guests: (Guests_guests | null)[] | undefined | null\n  isOpen: boolean\n  openGuestDrawer: () => void\n  refetch: ((variables?: Partial<OperationVariables> | undefined) => Promise<ApolloQueryResult<SuitesWithReservations>>) | undefined\n  reservation: IReservation | undefined\n}\n\nexport const ReservationModal = ({\n  close,\n  guests,\n  isOpen,\n  openGuestDrawer,\n  refetch,\n  reservation,\n}: Props) => {\n\n  const [ createReservation ] = useMutation<CreateReservation, CreateReservationVariables>(CREATE_RESERVATION, {\n    onCompleted: (): void => {\n      message.success(\"Rezervace byla vytvořena!\")\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (error: ApolloError): void => {\n      message.error(error.message)\n    }\n  })\n  const [ updateReservation ] = useMutation<UpdateReservation, UpdateReservationVariables>(UPDATE_RESERVATION, {\n    onCompleted: () => {\n      message.success(\"Rezervace byla aktualizována!\")\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (error: ApolloError) => {\n      message.error(error.message)\n    }\n  })\n  const [ deleteReservation ] = useMutation<DeleteReservation, DeleteReservationVariables>(DELETE_RESERVATION, {\n    onCompleted: () => {\n      message.success(\"Rezervace byla odstraněna!\")\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (error: ApolloError) => {\n      message.error(error)\n    }\n  })\n\n  const [ deleteConfirmVisible, setDeleteConfirmVisible ] = useState<boolean>(false)\n  const [ guestOptions, setGuestOptions ] = useState<OptionsType[]>([])\n\n  const [ form ] = Form.useForm()\n  const initialValues: Store & { type: ReservationTypeKey } = reservation !== undefined ? {\n    dates: [ reservation.fromDate, reservation.toDate ],\n    guest: reservation.guest === undefined ? null : reservation.guest.id,\n    meal: reservation.meal,\n    notes: reservation.notes,\n    purpose: reservation.purpose,\n    roommates: Array.from(reservation.roommates, roommate => {\n      return { id: roommate.id }\n    }),\n    type: reservation.type\n  } : { type: \"NONBINDING\" }\n\n  const closeModal = () => {\n    setDeleteConfirmVisible(false)\n    setTimeout(() => { close() })\n  }\n\n  const submitForm = (): void => {\n    const formData = form.getFieldsValue(true)\n    const [ from, to ]: Array<Moment> = form.getFieldValue(\"dates\")\n    const roommates = formData.roommates === undefined ? [] :\n      Array.from(formData.roommates, (data: { id: number }) => data.id)\n\n    const variables: ReservationInput = {\n      fromDate: from.format(dateFormat),\n      guest: formData.guest,\n      meal: formData.meal,\n      notes: formData.notes,\n      purpose: formData.purpose,\n      roommates: roommates,\n      suite: reservation !== undefined ? +reservation.suite.id : null,\n      toDate: to.format(dateFormat),\n      type: formData.type\n    }\n    if (reservation !== undefined && reservation.id !== undefined) {\n      updateReservation({ variables: { data: { ...variables, id: String(reservation.id) } } })\n    } else {\n      createReservation({ variables: { data: variables } })\n    }\n  }\n\n  const getRemoveButton = () => {\n    return reservation !== undefined ? (\n      <Popconfirm\n        cancelText=\"Ne\"\n        key=\"remove\"\n        okText=\"Ano\"\n        onConfirm={ () => {\n          deleteReservation({ variables: { reservationId: String(reservation.id) } })\n        } }\n        title=\"Odstranit rezervaci?\">\n        <Button\n          className=\"cancel-button\"\n          danger\n          icon={ <CloseCircleOutlined /> }>\n          Odstranit\n        </Button>\n      </Popconfirm>\n    ) : null\n  }\n\n  const footerButtons = [\n    getRemoveButton(),\n    <Button\n      key=\"guest\"\n      onClick={ openGuestDrawer }>\n      Přidat hosta\n    </Button>,\n    <Button\n      key=\"create\"\n      icon={ reservation === undefined ? <PlusCircleOutlined /> : <EditOutlined /> }\n      onClick={ () => {\n        form.validateFields()\n          .then(submitForm)\n      } }\n      type=\"primary\">\n      { (reservation !== undefined && reservation.id !== undefined) ? \"Upravit\" : \"Uložit\" }\n    </Button>\n  ]\n\n  useEffect(() => {\n    if (guests !== undefined && guests !== null) {\n      setGuestOptions(Array.from(guests, (guest: any): any => {\n        return {\n          label: `${ guest.name } ${ guest.surname }`,\n          value: guest.id\n        }\n      }))\n    }\n  }, [ guests ])\n\n  // Reset form to update range, has to be after modal is opened,\n  // otherwise the form might not be initialized\n  useEffect(() => {\n    if (isOpen === true) {\n      form.resetFields()\n    }\n  }, [ form, isOpen ])\n\n  return (\n    <Modal\n      closeIcon={ (\n        <Popconfirm\n          onCancel={ () => setDeleteConfirmVisible(false) }\n          onConfirm={ closeModal }\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n          visible={ deleteConfirmVisible }>\n          <CloseOutlined onClick={ () => {\n            if (form.isFieldsTouched()) {\n              setDeleteConfirmVisible(true)\n            } else {\n              closeModal()\n            }\n          } } />\n        </Popconfirm>\n      ) }\n      footer={ footerButtons }\n      title=\"Rezervační formulář\"\n      visible={ isOpen }>\n      <Form\n        form={ form }\n        initialValues={ initialValues }\n        layout=\"vertical\">\n        <Form.Item\n          label=\"Datum Rezervace\"\n          name=\"dates\"\n          required>\n          <DatePicker.RangePicker\n            format={ dateFormat }\n            showTime />\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          label=\"Host\"\n          name=\"guest\"\n          required\n          rules={ ReservationFormHelper.guestValidators(form) }>\n          <Select\n            filterOption={ (input, option): boolean => {\n              const match = option?.label?.toString().toLowerCase().indexOf(input.toLowerCase())\n              return match !== undefined && match >= 0\n            } }\n            options={ guestOptions }\n            showSearch />\n        </Form.Item>\n        <Form.List name=\"roommates\">\n          { (fields, { add, remove }) => (\n            <>\n              { fields.map(({ key, name, fieldKey, ...restField }) => (\n                <Space\n                  align=\"baseline\"\n                  className=\"roommate-list\"\n                  key={ key }>\n                  <Form.Item\n                    hasFeedback\n                    { ...restField }\n                    fieldKey={ [ fieldKey, 'first' ] }\n                    name={ [ name, \"id\" ] }\n                    rules={ ReservationFormHelper.roommateValidators(form) }>\n                    <Select\n                      options={ guestOptions }\n                      showSearch />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={ () => {\n                    remove(name)\n                    form.validateFields()\n                  } } />\n                </Space>\n              )) }\n              <Form.Item>\n                <Button\n                  disabled={ fields.length >= guestOptions.length }\n                  type=\"dashed\"\n                  onClick={ () => add() }\n                  block\n                  icon={ <PlusOutlined /> }>\n                  Přidat spolubydlícího\n                </Button>\n              </Form.Item>\n            </>\n          ) }\n        </Form.List>\n        <Form.Item\n          hasFeedback\n          label=\"Typ Rezervace\"\n          name=\"type\"\n          required\n          rules={ [ ReservationFormHelper.getRequiredRule(\"vyberte typ rezervace\") ] }>\n          <Select\n            options={ ReservationFormHelper.reservationOptions } />\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          label=\"Strava\"\n          name=\"meal\"\n          required\n          rules={ [ FormHelper.requiredRule ] }>\n          <Select\n            options={ ReservationFormHelper.mealOptions } />\n        </Form.Item>\n        <Form.Item\n          label=\"Účel pobytu\"\n          name=\"purpose\">\n          <Input placeholder=\"účel pobytu\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Poznámky\"\n          name=\"notes\">\n          <Input.TextArea\n            placeholder=\"zadejte text\"\n            allowClear />\n        </Form.Item>\n      </Form>\n    </Modal >\n  )\n}","import { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport { ApolloError, useLazyQuery } from \"@apollo/client\"\nimport Title from \"antd/lib/typography/Title\"\nimport Text from \"antd/lib/typography/Text\"\nimport Timeline, { CursorMarker, DateHeader, SidebarHeader, TimelineGroup, TimelineHeaders, TimelineItem } from \"react-calendar-timeline\"\nimport { useEffect, useState } from \"react\"\nimport { Empty, Layout, message, Popover } from \"antd\"\nimport \"react-calendar-timeline/lib/Timeline.css\"\nimport \"./styles.css\"\nimport moment, { Moment } from \"moment\"\nimport { CustomGroupFields, CustomItemFields, IReservation, Reservation } from \"../../lib/Types\"\nimport { GuestDrawerSmall } from \"../GuestDrawerSmall\"\nimport { SUITES_WITH_RESERVATIONS } from \"../../lib/graphql/queries/Suites\"\nimport { SuitesWithReservations, SuitesWithReservations_reservations, SuitesWithReservations_suites } from \"../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations\"\nimport { ReservationModal } from \"../ReservationModal\"\n\ninterface Props {\n  isAuthenticated: boolean\n}\n\n// https://github.com/namespace-ee/react-calendar-timeline\nexport const Reservations = withRouter(({ history, isAuthenticated }: RouteComponentProps & Props) => {\n\n  const getReservationColor = (reservationType: string): string => {\n    switch (reservationType) {\n      case \"NONBINDING\":\n        return \"rgb(254, 223, 3)\"\n      case \"ACCOMMODATED\":\n        return \"rgb(0, 133, 182)\"\n      case \"INHABITED\":\n        return \"rgb(254, 127, 45)\"\n      case \"BINDING\":\n      default: return \"rgb(0, 212, 157)\"\n    }\n  }\n\n  const [ getData, { data, refetch } ] = useLazyQuery<SuitesWithReservations>(SUITES_WITH_RESERVATIONS, {\n    onError: (reason: ApolloError) => {\n      console.error(reason)\n      message.error(\"Chyba serveru, kontaktujte správce\")\n    }\n  })\n\n  const [ groups, setGroups ] = useState<TimelineGroup<CustomGroupFields>[]>([])\n  const [ guestDrawerOpen, setGuestDrawerOpen ] = useState<boolean>(false)\n  const [ items, setItems ] = useState<TimelineItem<CustomItemFields, Moment>[]>([])\n  const [ reservationModalOpen, setReservationModalOpen ] = useState<boolean>(false)\n  const [ selectedReservation, setSelectedReservation ] = useState<IReservation>()\n\n  useEffect(() => {\n    if (isAuthenticated === true) {\n      getData()\n    } else {\n      history.push(\"/login?next=/\")\n    }\n  }, [ getData, history, isAuthenticated ])\n\n  useEffect(() => {\n    const suites: TimelineGroup<CustomGroupFields>[] = []\n    const reservations: TimelineItem<CustomItemFields, Moment>[] = []\n    data?.suites?.forEach((suite: SuitesWithReservations_suites | null) => {\n      if (suite !== null) {\n        suites.push({ ...suite, stackItems: true })\n      }\n    })\n    data?.reservations?.forEach((reservation: SuitesWithReservations_reservations | null) => {\n      if (reservation !== null) {\n        reservations.push({\n          color: getReservationColor(reservation.type),\n          end_time: moment(reservation.toDate),\n          group: reservation.suite.id,\n          id: reservation.id,\n          itemProps: {\n            className: 'reservation-item',\n            style: {\n              background: getReservationColor(reservation.type),\n              border: \"none\"\n            }\n          },\n          start_time: moment(reservation.fromDate),\n          title: `${ reservation.guest.name } ${ reservation.guest.surname }`,\n          type: Reservation.getType(reservation.type)\n        })\n      }\n    })\n    setGroups(suites)\n    setItems(reservations)\n  }, [ data ])\n\n  const getTimeline = () => {\n    return data !== undefined ? (\n      <Timeline\n        canChangeGroup={ false }\n        canMove={ false }\n        canResize={ false }\n        defaultTimeEnd={ moment().add(12, \"day\") }\n        defaultTimeStart={ moment().add(-12, \"day\") }\n        groupRenderer={ ({ group }) => {\n          return (\n            <>\n              <Title level={ 5 }>{ group.title }</Title>\n            </>\n          )\n        } }\n        groups={ groups }\n        itemRenderer={ ({ item, itemContext, getItemProps, getResizeProps }) => {\n          const { left: leftResizeProps, right: rightResizeProps } = getResizeProps()\n          return item.itemProps !== undefined ? (\n            <div { ...getItemProps(item.itemProps) }>\n              { itemContext.useResizeHandle ? <div { ...leftResizeProps } /> : '' }\n              <Popover title={ item.title } content={ (\n                <>\n                  <div style={ { color: item.color, fontWeight: 700 } }>\n                    { item.type }\n                  </div>\n                  <div>\n                    Od: <strong>{ item.start_time.format(\"DD MMM HH:mm\") }</strong>\n                  </div>\n                  <div>\n                    Do: <strong>{ item.end_time.format(\"DD MMM HH:mm\") }</strong>\n                  </div>\n                </>\n              ) }>\n                <div\n                  className=\"rct-item-content\"\n                  style={ { maxHeight: `${ itemContext.dimensions.height }` } }>\n                  <Text strong>{ item.title }</Text>\n                </div>\n              </Popover>\n              { itemContext.useResizeHandle ? <div { ...rightResizeProps } /> : '' }\n            </div>\n          ) : null\n        } }\n        items={ items }\n        lineHeight={ 60 }\n        onCanvasClick={ (groupId: number, time: number) => {\n          const selectedGroup = groups.find(group => group.id === groupId)\n          if (selectedGroup !== undefined) {\n            setSelectedReservation({\n              fromDate: moment(time),\n              suite: { ...selectedGroup },\n              roommates: [],\n              toDate: moment(time).add(1, \"day\"),\n              type: \"NONBINDING\"\n            })\n            setReservationModalOpen(true)\n          }\n        } }\n        onItemClick={ (itemId: number, _e, time: number) => {\n          if (data?.reservations !== undefined && data.reservations !== null) {\n            const reservation = data.reservations.find(entry => entry !== null && entry.id === String(itemId))\n            if (reservation !== undefined && reservation !== null) {\n              setSelectedReservation({\n                fromDate: moment(reservation.fromDate),\n                guest: reservation.guest,\n                id: +reservation.id,\n                meal: reservation.meal,\n                notes: reservation.notes,\n                purpose: reservation.purpose,\n                roommates: reservation.roommates,\n                suite: reservation.suite,\n                toDate: moment(reservation.toDate),\n                type: reservation.type\n              })\n              setReservationModalOpen(true)\n            }\n          }\n        } }>\n        <TimelineHeaders>\n          <SidebarHeader>\n            { ({ getRootProps }) => {\n              return (\n                <div\n                  { ...getRootProps() }\n                  className=\"side-header\" />\n              )\n            } }\n          </SidebarHeader>\n          <DateHeader unit=\"primaryHeader\" />\n          <DateHeader\n            className=\"days\"\n            unit=\"day\" />\n        </TimelineHeaders>\n        <CursorMarker>\n          {\n            ({ styles, date }) => {\n              return (\n                <div style={ { ...styles, backgroundColor: \"rgba(136, 136, 136, 0.5)\", color: \"#888\" } }>\n                  <div className=\"rt-marker__label\">\n                    <div className=\"rt-marker__content\">\n                      { moment(date).format(\"DD MMM HH:mm\") }\n                    </div>\n                  </div>\n                </div>\n              )\n            }\n          }\n        </CursorMarker>\n      </Timeline>\n    ) : <Empty />\n  }\n\n  return (\n    <Layout>\n      <Layout.Header>\n        <Title level={ 3 } className=\"home__listings-title\">\n          Rezervace / Obsazenost\n        </Title>\n      </Layout.Header>\n      <Layout.Content className=\"app-content timeline\">\n        { getTimeline() }\n        <ReservationModal\n          close={ () => {\n            setSelectedReservation(undefined)\n            setReservationModalOpen(false)\n          } }\n          guests={ data?.guests }\n          isOpen={ reservationModalOpen }\n          openGuestDrawer={ () => setGuestDrawerOpen(true) }\n          refetch={ refetch }\n          reservation={ selectedReservation } />\n        <GuestDrawerSmall\n          close={ () => setGuestDrawerOpen(false) }\n          open={ guestDrawerOpen }\n          refetch={ refetch } />\n      </Layout.Content>\n    </Layout>\n  )\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_SUITE = gql`\r\n  mutation CreateSuite($data: SuiteInput!) {\r\n    createSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_SUITE = gql`\r\n  mutation UpdateSuite($data: SuiteInput!) {\r\n    updateSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_SUITE = gql`\r\n  mutation DeleteSuite($suiteId: ID!) {\r\n    deleteSuite(suiteId: $suiteId) {\r\n      suite {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\nimport { Button, Drawer, Form, Input, message, Popconfirm } from \"antd\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { CloseOutlined } from \"@ant-design/icons\"\nimport { Suites, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport { Store } from \"antd/lib/form/interface\"\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\nimport { CreateSuite, CreateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/CreateSuite\"\nimport { CREATE_SUITE, UPDATE_SUITE } from \"../../lib/graphql/mutations/Suite\"\nimport { SuiteForm } from \"../../lib/Types\"\nimport { SuiteInput } from \"../../lib/graphql/globalTypes\"\nimport { UpdateSuite, UpdateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/UpdateSuite\"\n\ninterface Props {\n  close: () => void\n  refetch: ((variables?: Partial<OperationVariables>) => Promise<ApolloQueryResult<Suites>>) | undefined\n  suite: Suites_suites | undefined\n  visible: boolean\n}\n\nexport const SuiteDrawer = ({\n  close,\n  suite,\n  refetch,\n  visible\n}: Props) => {\n\n  const [ createSuite ] = useMutation<CreateSuite, CreateSuiteVariables>(CREATE_SUITE, {\n    onCompleted: (data: CreateSuite): void => {\n      message.success(`Apartmá ${ data.createSuite?.suite?.title } byla vytvořena`)\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (reason: ApolloError): void => {\n      console.error(reason)\n    }\n  })\n  const [ updateSuite ] = useMutation<UpdateSuite, UpdateSuiteVariables>(UPDATE_SUITE, {\n    onCompleted: (data: UpdateSuite): void => {\n      message.success(`Apartmá ${ data.updateSuite?.suite?.title } byla aktualizována`)\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (reason: ApolloError): void => {\n      console.error(reason)\n    }\n  })\n\n  const [ form ] = Form.useForm()\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\n\n  const initialValues: Store = {\n    number: suite?.number,\n    title: suite?.title\n  }\n\n  useEffect(() => {\n    if (visible === true) {\n      form.resetFields()\n    }\n  }, [ form, visible ])\n\n  const submitForm = () => {\n    form.validateFields()\n      .then(() => {\n        const formData: SuiteForm = form.getFieldsValue(true)\n        const variables: { data: SuiteInput } = {\n          data: {\n            number: formData.number,\n            title: formData.title\n          }\n        }\n        if (suite === undefined) {\n          createSuite({ variables })\n        } else {\n          if (form.isFieldsTouched()) {\n            variables.data.id = suite.id\n            updateSuite({ variables })\n          }\n        }\n      })\n      .catch(() => {\n        console.error(\"Form validation failed\");\n      })\n  }\n\n  const closeDrawer = (): void => {\n    if (form.isFieldsTouched()) {\n      setConfirmClose(true)\n    } else {\n      close()\n    }\n  }\n\n  return (\n    <Drawer\n      closeIcon={ (\n        <Popconfirm\n          onCancel={ () => setConfirmClose(false) }\n          onConfirm={ () => {\n            setConfirmClose(false)\n            close()\n          } }\n          placement=\"rightTop\"\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n          visible={ confirmClose }>\n          <CloseOutlined onClick={ closeDrawer } />\n        </Popconfirm>\n      ) }\n      footer={\n        <>\n          <Button\n            onClick={ submitForm }\n            type=\"primary\">\n            Vytvořit\n          </Button>\n        </>\n      }\n      footerStyle={ {\n        textAlign: \"right\"\n      } }\n      placement=\"left\"\n      title=\"Nové apartmá\"\n      visible={ visible }\n      width={ 500 }>\n      <Form\n        form={ form }\n        initialValues={ initialValues }\n        layout=\"vertical\"\n        name=\"suite\">\n        <Form.Item\n          hasFeedback\n          label=\"Název\"\n          name=\"title\"\n          required\n          rules={ [ FormHelper.requiredRule ] }>\n          <Input placeholder=\"název apartmá\" />\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          label=\"Číslo\"\n          name=\"number\"\n          required\n          rules={ [\n            FormHelper.requiredRule,\n            {\n              message: \"zadejte číslo\",\n              pattern: /^[0-9]+$/\n            }\n          ] }>\n          <Input placeholder=\"číslo apartmá\" type=\"number\" />\n        </Form.Item>\n      </Form>\n    </Drawer>\n  )\n}","import { useEffect, useState } from \"react\"\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport { HomeOutlined, PlusCircleOutlined, WarningOutlined } from \"@ant-design/icons\"\nimport { Avatar, Button, Layout, List, message, Popconfirm, Skeleton } from \"antd\"\nimport { SuiteDrawer } from \"../SuiteDrawer\"\nimport { ApolloError, useLazyQuery, useMutation } from \"@apollo/client\"\nimport { SUITES } from \"../../lib/graphql/queries/Suites\"\nimport { Suites as SuitesData, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport Title from \"antd/lib/typography/Title\"\nimport \"./styles.css\"\nimport { DELETE_SUITE } from \"../../lib/graphql/mutations/Suite\"\nimport { DeleteSuite, DeleteSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/DeleteSuite\"\n\ninterface Props {\n  isAuthenticated: boolean\n}\n\nexport const Suites = withRouter(({ history, isAuthenticated }: RouteComponentProps & Props) => {\n\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\n  const [ activeSuite, setActiveSuite ] = useState<Suites_suites>()\n  const [ suites, setSuites ] = useState<Suites_suites[]>([])\n\n  const [ getData, { loading: queryLoading, data: queryData, refetch } ] = useLazyQuery<SuitesData>(SUITES, {\n    onError: (reason: ApolloError) => {\n      console.error(reason);\n      message.error(\"Chyba serveru, kontaktujte správce\")\n    }\n  })\n  const [ deleteSuite, { loading: removeLoading, data: removeData } ] = useMutation<DeleteSuite, DeleteSuiteVariables>(DELETE_SUITE, {\n    onError: (reason: ApolloError) => {\n      console.error(reason)\n    }\n  })\n\n  useEffect(() => {\n    if (isAuthenticated === true) {\n      getData()\n    } else {\n      history.push(\"/login?next=/apartma\")\n    }\n  }, [ getData, history, isAuthenticated ])\n\n  useEffect(() => {\n    const suitesData: Suites_suites[] = []\n    queryData?.suites?.forEach((suite: Suites_suites | null) => {\n      if (suite !== null) {\n        suitesData.push(suite)\n      }\n    })\n    setSuites(suitesData)\n  }, [ queryData ])\n\n  useEffect(() => {\n    if (refetch !== undefined) {\n      refetch()\n    }\n  }, [ refetch, removeData ])\n\n  const editSuite = (suite: Suites_suites): void => {\n    setActiveSuite(suite)\n    setDrawerVisible(true)\n  }\n\n  const removeSuite = (suite: Suites_suites): void => {\n    deleteSuite({ variables: { suiteId: suite.id } })\n  }\n\n  return (\n    <Layout>\n      <Layout.Header>\n        <Title level={ 3 } className=\"home__listings-title\">\n          Apartmá\n        </Title>\n      </Layout.Header>\n      <Layout.Content className=\"app-content\">\n        <List\n          bordered={ true }\n          className=\"suites-list\"\n          dataSource={ suites }\n          footer={\n            <Button\n              icon={ <PlusCircleOutlined /> }\n              onClick={ () => {\n                setActiveSuite(undefined)\n                setDrawerVisible(true)\n              } }\n              type=\"primary\">\n              Přidat apartmá\n            </Button>\n          }\n          header={ <h4>Seznam apartmá</h4> }\n          itemLayout=\"horizontal\"\n          loading={ queryLoading }\n          renderItem={ suite => (\n            <List.Item\n              actions={ [\n                <Button\n                  key=\"edit\"\n                  onClick={ () => editSuite(suite) }\n                  type=\"link\">\n                  upravit\n                </Button>,\n                <Popconfirm\n                  cancelText=\"Ne\"\n                  icon={ <WarningOutlined /> }\n                  okText=\"Ano\"\n                  onConfirm={ () => removeSuite(suite) }\n                  title=\"opravdu odstranit?\">\n                  <Button\n                    key=\"remove\"\n                    loading={ removeLoading }\n                    type=\"link\">\n                    odstranit\n                  </Button>\n                </Popconfirm>\n              ] }>\n              <Skeleton title={ false } loading={ queryLoading } active>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar gap={ 4 } size=\"large\">\n                      <HomeOutlined />\n                    </Avatar>\n                  }\n                  description={ `číslo pokoje - ${ suite.number }` }\n                  title={ suite.title } />\n              </Skeleton>\n            </List.Item>\n          ) } />\n        <SuiteDrawer\n          close={ () => setDrawerVisible(false) }\n          refetch={ refetch }\n          suite={ activeSuite }\n          visible={ drawerVisible } />\n      </Layout.Content>\n    </Layout>\n  )\n})","import { Affix, ConfigProvider, Layout } from \"antd\"\r\nimport csCZ from \"antd/lib/locale/cs_CZ\"\r\nimport { useState } from \"react\"\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport { Header } from \"../Header\"\r\nimport { Guests } from \"../Guests\"\r\nimport { Login } from \"../Login\"\r\nimport { NotFound } from \"../NotFound\"\r\nimport { Reservations } from \"../Reservations\"\r\nimport { Suites } from \"../Suites\"\r\n\r\nexport const App = () => {\r\n\r\n  const [ isAuthenticated, setIsAuthenticated ] = useState<boolean>(false)\r\n\r\n  return (\r\n    <ConfigProvider locale={ csCZ }>\r\n      <Router>\r\n        <Layout id=\"app\">\r\n          <Affix offsetTop={ 0 } className=\"app__affix-header\">\r\n            <Header isAuthenticated={ isAuthenticated } setIsAuthenticated={ setIsAuthenticated } />\r\n          </Affix>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Reservations isAuthenticated={ isAuthenticated } />\r\n            </Route>\r\n            <Route exact path=\"/apartma\">\r\n              <Suites isAuthenticated={ isAuthenticated } />\r\n            </Route>\r\n            <Route exact path=\"/guests\">\r\n              <Guests isAuthenticated={ isAuthenticated } />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              <Login setIsAuthenticated={ setIsAuthenticated } />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n    </ConfigProvider>\r\n  )\r\n}","import ReactDOM from 'react-dom'\nimport './index.css'\nimport { getCookie } from \"./lib/Cookie\"\nimport moment from 'moment'\nimport 'moment/locale/cs'\nimport { ApolloClient, ApolloLink, ApolloProvider, concat, HttpLink, InMemoryCache } from '@apollo/client'\nimport { App } from './sections/App'\n\nmoment.locale(\"cs\")\n\nconst httpLink = new HttpLink({ uri: '/api' });\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  const authtoken = getCookie(\"authtoken\")\n  const csrftoken = getCookie(\"csrftoken\")\n  operation.setContext(({ headers = {} }) => ({\n    headers: {\n      ...headers,\n      authorization: authtoken === null ? null : `JWT ${ authtoken }`,\n      \"X-CSRFToken\": csrftoken === null ? \"\" : csrftoken\n    }\n  }));\n  return forward(operation);\n})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          guests: {\n            merge: false\n          },\n          reservations: {\n            merge: false\n          },\n          suiteReservations: {\n            merge: false\n          },\n          suites: {\n            merge: false\n          }\n        }\n      },\n      Reservation: {\n        fields: {\n          roommates: { merge: false }\n        }\n      }\n    }\n  }),\n  link: concat(authMiddleware, httpLink),\n})\n\nReactDOM.render(\n  <ApolloProvider client={ client }>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}