{"version":3,"sources":["lib/Cookie.ts","sections/AppHeader/assets/mill.svg","sections/AppHeader/components/MenuItems.tsx","sections/AppHeader/index.tsx","lib/graphql/queries/Guests/index.ts","lib/components/FormHelper.ts","lib/components/GuestFormHelper.ts","lib/graphql/mutations/Guest/index.ts","sections/GuestDrawer/index.tsx","sections/Guests/index.tsx","lib/graphql/queries/Suites/index.ts","lib/components/CsCalendarLocale.ts","lib/Constants.ts","lib/Types.ts","lib/components/ReservationFormHelper.ts","lib/graphql/mutations/Reservation/index.ts","sections/ReservationModal/index.tsx","sections/GuestDrawerSmall/index.tsx","sections/ReserveCalendar/index.tsx","sections/Home/index.tsx","lib/graphql/mutations/User/index.ts","lib/graphql/queries/User/index.ts","sections/Login/index.tsx","sections/Overview/index.tsx","lib/graphql/mutations/Suite/index.ts","sections/SuiteDrawer/index.tsx","sections/Suites/index.tsx","sections/App/index.tsx","index.tsx"],"names":["getCookie","name","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","MenuItems","mode","Item","icon","BookOutlined","to","EyeOutlined","IdcardOutlined","HomeOutlined","AppHeader","isAuthenticated","className","src","logo","alt","GUESTS_FULL","gql","FormHelper","requiredRule","required","message","value","undefined","GuestFormHelper","ageOptions","label","getGuestResponseErrorList","errorString","Array","from","Object","values","JSON","parse","replaceAll","list","error","phoneCodeRequiredRules","pattern","transform","requiredAlphaRules","requiredNumericRules","CREATE_GUEST","CREATE_GUEST_BASIC","UPDATE_GUEST","DELETE_GUEST","GuestDrawer","close","guest","refetch","visible","Form","useForm","form","useMutation","onCompleted","data","success","createGuest","surname","resetFields","onError","updateGuest","useState","confirmClose","setConfirmClose","initialValues","age","address","municipality","addressMunicipality","psc","addressPsc","street","addressStreet","citizenship","selected","email","gender","identity","phone","phoneNumber","visa","visaNumber","emailPrefixIcon","noStyle","MailOutlined","useEffect","closeIcon","onCancel","onConfirm","placement","title","CloseOutlined","onClick","isFieldsTouched","width","footer","validateFields","then","formData","getFieldsValue","variables","new","id","catch","type","footerStyle","padding","textAlign","layout","level","hasFeedback","rules","placeholder","addonBefore","options","Option","Group","compact","style","marginBottom","Guests","withRouter","history","drawerVisible","setDrawerVisible","guests","setGuests","selectedGuest","setSelectedGuest","useLazyQuery","getData","queryLoading","loading","queryData","deleteGuest","deleteLoading","deleteData","push","guestsData","forEach","dataSource","itemLayout","renderItem","actions","cancelText","WarningOutlined","okText","guestId","Meta","PlusCircleOutlined","SUITES","SUITES_WITH_RESERVATIONS","CsCalendarLocale","months","weekDays","short","isWeekend","weekStartingIndex","getToday","gregorainTodayObject","toNativeDate","date","Date","year","month","day","getMonthLength","getDate","transformDigit","digit","nextMonth","previousMonth","openMonthSelector","openYearSelector","closeMonthSelector","closeYearSelector","defaultPlaceholder","digitSeparator","yearLetterSkip","isRtl","getDaysWithinMonth","days","index","getDaysWithinOverlappingMonths","utils","TransformDate","years","fromMonth","toMonth","idx","keys","shift","getDaysWithinOverlappingYears","dateFormat","Reservation","key","ReservationFormHelper","mealOptions","reservationOptions","getRequiredRule","guestValidators","validator","_rule","roommates","getFieldValue","Promise","resolve","duplicate","filter","reject","Error","roommateValidators","duplicates","CREATE_RESERVATION","DELETE_RESERVATION","UPDATE_RESERVATION","ReservationModal","isOpen","openGuestDrawer","reservation","createReservation","updateReservation","deleteReservation","deleteConfirmVisible","setDeleteConfirmVisible","guestOptions","setGuestOptions","dates","fromDate","toDate","meal","notes","purpose","roommate","closeModal","setTimeout","submitForm","format","suite","String","footerButtons","reservationId","danger","CloseCircleOutlined","EditOutlined","RangePicker","showTime","filterOption","input","option","match","toString","toLowerCase","indexOf","showSearch","List","fields","add","remove","map","fieldKey","restField","align","MinusCircleOutlined","disabled","block","PlusOutlined","TextArea","allowClear","GuestDrawerSmall","open","console","ReserveCalendar","reservations","modalOpen","setModalOpen","guestDrawerOpen","setGuestDrawerOpen","reservedDays","setReservedDays","selectedReservation","setSelectedReservation","getDayClassName","moment","span","onChange","dayValue","rangeDay","find","locale","customDaysClassName","shouldHighlightWeekends","Home","reason","filterSuiteReservations","active","suites","gutter","getContent","JWT_TOKEN","USER","labelCol","wrapperCol","tailLayout","offset","Login","setIsAuthenticated","tokenAuth","token","getToken","loginLoading","userLoading","useQuery","whoami","username","spinnerTip","setSpinnerTip","Content","spinning","tip","onFinish","htmlType","Overview","getReservationColor","reservationType","groups","setGroups","items","setItems","reservationModalOpen","setReservationModalOpen","stackItems","color","end_time","group","itemProps","background","border","start_time","canChangeGroup","canMove","canResize","defaultTimeEnd","defaultTimeStart","groupRenderer","itemRenderer","item","itemContext","getItemProps","getResizeProps","leftResizeProps","left","rightResizeProps","right","useResizeHandle","content","fontWeight","maxHeight","dimensions","height","strong","lineHeight","onCanvasClick","groupId","time","selectedGroup","onItemClick","itemId","_e","entry","getRootProps","unit","styles","backgroundColor","CREATE_SUITE","UPDATE_SUITE","DELETE_SUITE","SuiteDrawer","createSuite","updateSuite","number","Suites","activeSuite","setActiveSuite","setSuites","deleteSuite","removeLoading","removeData","suitesData","editSuite","suiteId","removeSuite","App","csCZ","offsetTop","exact","path","render","httpLink","HttpLink","uri","authMiddleware","ApolloLink","operation","forward","authtoken","csrftoken","setContext","headers","authorization","client","ApolloClient","cache","InMemoryCache","typePolicies","Query","merge","suiteReservations","link","concat","ReactDOM","ApolloProvider","getElementById"],"mappings":"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","file":"static/js/main.009bd0e6.chunk.js","sourcesContent":["export const getCookie = (name: string): string | null => {\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[ i ].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        return decodeURIComponent(cookie.substring(name.length + 1));\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport const setCookie = (name: string, value: string): void => {\r\n  if (document.cookie && document.cookie !== '') {\r\n    document.cookie = `${ name }=${ value };path=/`\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/mill.1f872c17.svg\";","import { BookOutlined, EyeOutlined, HomeOutlined, IdcardOutlined } from \"@ant-design/icons\"\r\nimport { Menu } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const MenuItems = () => {\r\n  return (\r\n    <Menu mode=\"horizontal\">\r\n      <Menu.Item key=\"reservation\" icon={ <BookOutlined /> }>\r\n        <Link to=\"/\">Rezervace</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"overview\" icon={ <EyeOutlined /> }>\r\n        <Link to=\"/prehled\">Přehled</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"guests\" icon={ <IdcardOutlined /> }>\r\n        <Link to=\"/guests\">Hosté</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"suites\" icon={ <HomeOutlined /> }>\r\n        <Link to=\"/apartma\">Apartmá</Link>\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n}","import { Link } from 'react-router-dom'\r\nimport { Header } from 'antd/lib/layout/layout'\r\nimport './styles.css'\r\nimport logo from './assets/mill.svg'\r\nimport { MenuItems } from './components/MenuItems'\r\n\r\ninterface Props {\r\n  isAuthenticated: boolean\r\n}\r\n\r\nexport const AppHeader = ({ isAuthenticated }: Props) => {\r\n\r\n  return (\r\n    <Header className=\"app-header\">\r\n      <div className=\"app-header__logo-search-section\">\r\n        <div className=\"app-header__logo\">\r\n          <Link to=\"/\">\r\n            <img src={ logo } alt=\"Kamenice logo\" />\r\n          </Link>\r\n        </div>\r\n        {\r\n          isAuthenticated === true &&\r\n          <div className=\"app-header__menu-section\">\r\n            <MenuItems />\r\n          </div>\r\n        }\r\n      </div>\r\n    </Header>\r\n  )\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const GUESTS = gql`\r\n  query Guests {\r\n    guests {\r\n      id\r\n      name\r\n      surname\r\n    }\r\n  }\r\n`\r\n\r\nexport const GUESTS_FULL = gql`\r\n  query GuestsFull {\r\n    guests {\r\n      age\r\n      addressMunicipality\r\n      addressPsc\r\n      addressStreet\r\n      citizenship\r\n      email\r\n      gender\r\n      identity\r\n      id\r\n      name\r\n      phoneNumber\r\n      surname\r\n      visaNumber\r\n    }\r\n  }\r\n`","import { Rule } from \"antd/lib/form\"\r\n\r\ninterface IFormHelper {\r\n  requiredRule: Rule\r\n  trim: (value: string | undefined) => string | undefined\r\n}\r\nexport const FormHelper: IFormHelper = {\r\n  requiredRule: {\r\n    required: true,\r\n    message: \"pole je povinné\"\r\n  },\r\n  trim: (value: string | undefined): string | undefined => {\r\n    return value === undefined ? value : value.trim()\r\n  }\r\n}","import { Rule } from \"antd/lib/form\";\nimport { OptionsType } from \"../Types\";\nimport { FormHelper } from \"./FormHelper\";\n\ninterface IGuestFormHelper {\n  ageOptions: OptionsType[]\n  getGuestResponseErrorList: (errorString: string) => Array<string>\n  phoneCodeRequiredRules: Rule[]\n  requiredAlphaRules: Rule[]\n  requiredNumericRules: Rule[]\n}\n\nexport const GuestFormHelper: IGuestFormHelper = {\n  ageOptions: [\n    {\n      label: \"12+\",\n      value: \"YOUNG\"\n    },\n    {\n      label: \"3-12 let\",\n      value: \"CHILD\"\n    },\n    {\n      label: \"Do 3 let\",\n      value: \"INFANT\"\n    },\n    {\n      label: \"Dospělý\",\n      value: \"ADULT\"\n    }\n  ],\n  getGuestResponseErrorList: (errorString: string) => {\n    try {\n      return Array.from(\n        Object.values(\n          JSON.parse(errorString.replaceAll(\"'\", \"\\\"\"))\n        ), ((list: any) => list[ 0 ])\n      )\n    } catch (error) {\n      return [ \"Chyba serveru, kontaktujte správce\" ]\n    }\n  },\n  phoneCodeRequiredRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte kód ve formátu 420, +420 nebo (420)\",\n      pattern: /^\\+?\\(?[0-9]*\\)?$/,\n      transform: FormHelper.trim\n    }\n  ],\n  requiredAlphaRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte pouze text\",\n      pattern: /^([A-Za-z\\sáÁčČďĎéÉěĚíÍňŇřŘšŠťŤúÚůŮýÝžŽóÓ])+$/,\n      transform: FormHelper.trim\n    }\n  ],\n  requiredNumericRules: [\n    FormHelper.requiredRule,\n    {\n      message: \"zadejte pouze čísla\",\n      pattern: /^[\\d\\s]+$/,\n      transform: FormHelper.trim\n    }\n  ]\n}","import { gql } from \"@apollo/client\"\n\nexport const CREATE_GUEST = gql`\n  mutation CreateGuest($data: GuestInput!) {\n    createGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const CREATE_GUEST_BASIC = gql`\n  mutation CreateGuestBasic($data: GuestInput!) {\n    createGuest(data: $data) {\n      guest {\n        email\n        name\n        surname\n      }\n    }\n  }\n`\n\nexport const UPDATE_GUEST = gql`\n  mutation UpdateGuest($data: GuestInput!) {\n    updateGuest(data: $data) {\n      guest {\n        addressMunicipality\n        addressPsc\n        addressStreet\n        citizenship\n        email\n        gender\n        identity\n        id\n        name\n        phoneNumber\n        surname\n        visaNumber\n      }\n    }\n  }\n`\n\nexport const DELETE_GUEST = gql`\n  mutation DeleteGuest($guestId: ID!) {\n    deleteGuest(guestId: $guestId) {\n      guest {\n        id\n      }\n    }\n  }\n`","import { useState } from \"react\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm, Select } from \"antd\"\r\nimport { CloseOutlined, MailOutlined } from \"@ant-design/icons\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { Store } from \"rc-field-form/lib/interface\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport \"./styles.css\"\r\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\r\nimport { CREATE_GUEST, UPDATE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuest, CreateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuest\"\r\nimport { GuestsFull, GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { Guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\r\nimport { UpdateGuest, UpdateGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/UpdateGuest\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  guest: GuestsFull_guests | null\r\n  refetch: ((variables?: Partial<OperationVariables>) => Promise<ApolloQueryResult<Guests | GuestsFull>>) | undefined\r\n  visible: boolean\r\n}\r\n\r\nexport const GuestDrawer = ({\r\n  close,\r\n  guest,\r\n  refetch,\r\n  visible\r\n}: Props) => {\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ createGuest ] = useMutation<CreateGuest, CreateGuestVariables>(CREATE_GUEST, {\r\n    onCompleted: (data: CreateGuest) => {\r\n      message.success(`Host ${ data.createGuest?.guest?.name } ${ data.createGuest?.guest?.surname } byl přidán`)\r\n      if (refetch !== undefined) {\r\n        refetch()\r\n      }\r\n      form.resetFields()\r\n      close()\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n  const [ updateGuest ] = useMutation<UpdateGuest, UpdateGuestVariables>(UPDATE_GUEST, {\r\n    onCompleted: (data: UpdateGuest) => {\r\n      message.success(`Host ${ data.updateGuest?.guest?.name } ${ data.updateGuest?.guest?.surname } byl upraven`)\r\n      form.resetFields()\r\n      close()\r\n    },\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n  const initialValues: Store = {\r\n    age: guest?.age,\r\n    address: {\r\n      municipality: guest?.addressMunicipality,\r\n      psc: guest?.addressPsc,\r\n      street: guest?.addressStreet\r\n    },\r\n    citizenship: {\r\n      selected: guest?.citizenship\r\n    },\r\n    email: guest?.email,\r\n    gender: guest?.gender,\r\n    identity: guest?.identity,\r\n    name: guest?.name,\r\n    phone: guest?.phoneNumber,\r\n    surname: guest?.surname,\r\n    visa: guest?.visaNumber\r\n  }\r\n  const emailPrefixIcon = (\r\n    <Form.Item name=\"email-prefix\" noStyle>\r\n      <MailOutlined />\r\n    </Form.Item>\r\n  )\r\n\r\n  const closeDrawer = (): void => {\r\n    if (form.isFieldsTouched()) {\r\n      setConfirmClose(true)\r\n    } else {\r\n      close()\r\n    }\r\n  }\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          age: formData.age,\r\n          addressMunicipality: formData.address?.municipality,\r\n          addressPsc: formData.address?.psc,\r\n          addressStreet: formData.address?.street,\r\n          citizenship: formData.citizenship?.selected === undefined ? formData.citizenship?.new : formData.citizenship.selected,\r\n          email: formData.email,\r\n          gender: formData.gender,\r\n          identity: formData.identity,\r\n          name: formData.name,\r\n          phoneNumber: formData.phone,\r\n          surname: formData.surname,\r\n          visaNumber: formData.visa\r\n        }\r\n        if (guest === null) {\r\n          createGuest({ variables: { data: { ...variables } } })\r\n        } else {\r\n          updateGuest({ variables: { data: { id: guest.id, ...variables } } })\r\n        }\r\n      })\r\n      .catch(() => message.error(\"Formulář nelze odeslat, opravte prosím chyby\"))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true) {\r\n      form.resetFields()\r\n    }\r\n  }, [ form, visible ])\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ closeDrawer } />\r\n        </Popconfirm>\r\n      ) }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      width={ 500 }\r\n      visible={ visible }\r\n      footer={\r\n        <>\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            { guest === null ? \"Vytvořit\" : \"Upravit\" }\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        padding: \"16px 20px\",\r\n        textAlign: \"right\"\r\n      } }>\r\n      <Form\r\n        form={ form }\r\n        initialValues={ initialValues }\r\n        layout=\"vertical\"\r\n        name=\"guest\">\r\n        <Title level={ 5 }>Osobní údaje</Title>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Jméno\"\r\n          name=\"name\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Jméno\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Příjmení\"\r\n          name=\"surname\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Příjmení\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Číslo OP\"\r\n          name=\"identity\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input placeholder=\"číslo občanského průkazu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Telefonní Číslo\"\r\n          name=\"phone\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input placeholder=\"číslo\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"E-Mail\"\r\n          name=\"email\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input\r\n            addonBefore={ emailPrefixIcon }\r\n            placeholder=\"e-mail\"\r\n            type=\"email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Věk\"\r\n          name=\"age\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Select\r\n            options={ GuestFormHelper.ageOptions }\r\n            placeholder=\"vyberte ze seznamu\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Pohlaví\"\r\n          name=\"gender\">\r\n          <Select\r\n            placeholder=\"vyberte ze seznamu\">\r\n            <Select.Option value=\"M\">Muž</Select.Option>\r\n            <Select.Option value=\"F\">Žena</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Číslo viza\"\r\n          name=\"visa\">\r\n          <Input placeholder=\"číslo visa\" />\r\n        </Form.Item>\r\n        <Title level={ 5 }>Trvalé bydliště</Title>\r\n        <Form.Item\r\n          label=\"Ulice\"\r\n          name={ [ \"address\", \"street\" ] }>\r\n          <Input placeholder=\"ulice\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"PSČ/Obec\">\r\n          <Input.Group compact>\r\n            <Form.Item\r\n              style={ { marginBottom: 0, width: \"50%\" } }\r\n              name={ [ \"address\", \"psc\" ] }>\r\n              <Input placeholder=\"PSČ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={ { marginBottom: 0, width: \"50%\" } }\r\n              name={ [ \"address\", \"municipality\" ] }>\r\n              <Input placeholder=\"Obec\" />\r\n            </Form.Item>\r\n          </Input.Group>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Občanství\">\r\n          <Input.Group compact>\r\n            <Form.Item\r\n              style={ { width: \"50%\" } }\r\n              name={ [ \"citizenship\", \"selected\" ] }>\r\n              <Select style={ { width: \"100%\" } } placeholder=\"ze seznamu\">\r\n                <Select.Option value=\"cze\">CZE</Select.Option>\r\n                <Select.Option value=\"sk\">SK</Select.Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={ { width: \"50%\" } }\r\n              name={ [ \"citizenship\", \"new\" ] }>\r\n              <Input placeholder=\"ručně\" />\r\n            </Form.Item>\r\n          </Input.Group>\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  )\r\n}","import { useState } from \"react\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\nimport { Button, List, message, Popconfirm } from \"antd\"\r\nimport { Content } from \"antd/lib/layout/layout\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { GuestsFull as GuestsData, GuestsFull_guests } from \"../../lib/graphql/queries/Guests/__generated__/GuestsFull\"\r\nimport { PlusCircleOutlined, WarningOutlined } from \"@ant-design/icons\"\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\"\r\nimport { GUESTS_FULL } from \"../../lib/graphql/queries/Guests\"\r\nimport { useEffect } from \"react\"\r\nimport { GuestDrawer } from \"../GuestDrawer\"\r\nimport { DELETE_GUEST } from \"../../lib/graphql/mutations/Guest\"\r\nimport { DeleteGuest, DeleteGuestVariables } from \"../../lib/graphql/mutations/Guest/__generated__/DeleteGuest\"\r\n\r\ninterface Props {\r\n  isAuthenticated: boolean\r\n}\r\n\r\nexport const Guests = withRouter(({ history, isAuthenticated }: RouteComponentProps & Props) => {\r\n\r\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\r\n  const [ guests, setGuests ] = useState<GuestsFull_guests[]>([])\r\n  const [ selectedGuest, setSelectedGuest ] = useState<GuestsFull_guests | null>(null)\r\n\r\n  const [ getData, { loading: queryLoading, data: queryData, refetch } ] = useLazyQuery<GuestsData>(GUESTS_FULL, {\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n  const [ deleteGuest, { loading: deleteLoading, data: deleteData } ] = useMutation<DeleteGuest, DeleteGuestVariables>(DELETE_GUEST, {\r\n    onError: () => {\r\n      message.error(\"Chyba serveru, kontaktujte správce\")\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated === true) {\r\n      getData()\r\n    } else {\r\n      history.push(\"/login\")\r\n    }\r\n  }, [ getData, history, isAuthenticated ])\r\n\r\n  useEffect(() => {\r\n    const guestsData: GuestsFull_guests[] = []\r\n    queryData?.guests?.forEach((guest: GuestsFull_guests | null) => {\r\n      if (guest !== null) {\r\n        guestsData.push(guest)\r\n      }\r\n    })\r\n    setGuests(guestsData)\r\n  }, [ queryData ])\r\n\r\n  useEffect(() => {\r\n    if (refetch !== undefined) {\r\n      refetch()\r\n    }\r\n  }, [ refetch, deleteData ])\r\n\r\n  return (\r\n    <Content className=\"app-content\">\r\n      <Title level={ 3 } className=\"home__listings-title\">\r\n        Hosté\r\n      </Title>\r\n      <List\r\n        className=\"suites-list\"\r\n        dataSource={ guests }\r\n        itemLayout=\"horizontal\"\r\n        loading={ queryLoading }\r\n        renderItem={ (guest: GuestsFull_guests) => (\r\n          <List.Item\r\n            actions={ [\r\n              <Button\r\n                key=\"edit\"\r\n                onClick={ () => {\r\n                  setSelectedGuest(guest)\r\n                  setDrawerVisible(true)\r\n                } }\r\n                type=\"link\">\r\n                upravit\r\n              </Button>,\r\n              <Popconfirm\r\n                cancelText=\"Ne\"\r\n                icon={ <WarningOutlined /> }\r\n                okText=\"Ano\"\r\n                onConfirm={ () => {\r\n                  deleteGuest({ variables: { guestId: guest.id } })\r\n                } }\r\n                title=\"opravdu odstranit?\">\r\n                <Button\r\n                  key=\"remove\"\r\n                  loading={ deleteLoading }\r\n                  type=\"link\">\r\n                  odstranit\r\n                </Button>\r\n              </Popconfirm>\r\n            ] }>\r\n            <List.Item.Meta title={ `${ guest.name } ${ guest.surname }` } />\r\n          </List.Item>\r\n        ) } />\r\n      <Button\r\n        icon={ <PlusCircleOutlined /> }\r\n        onClick={ () => {\r\n          setSelectedGuest(null)\r\n          setDrawerVisible(true)\r\n        } }\r\n        type=\"primary\">\r\n        Přidat hosta\r\n      </Button>\r\n      <GuestDrawer\r\n        close={ () => setDrawerVisible(false) }\r\n        guest={ selectedGuest }\r\n        refetch={ refetch }\r\n        visible={ drawerVisible } />\r\n    </Content>\r\n  )\r\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const SUITES = gql`\r\n  query Suites {\r\n    suites {\r\n      id\r\n      title\r\n      number\r\n    }\r\n  }\r\n`\r\n\r\nexport const SUITES_WITH_RESERVATIONS = gql`\r\n  query SuitesWithReservations {\r\n    guests {\r\n      id\r\n      name\r\n      surname\r\n    }\r\n    suites {\r\n      id\r\n      number\r\n      title\r\n    }\r\n    reservations {\r\n      fromDate\r\n      id\r\n      guest {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      meal\r\n      notes\r\n      purpose\r\n      roommates {\r\n        id\r\n        name\r\n        surname\r\n      }\r\n      suite {\r\n        id\r\n      }\r\n      toDate\r\n      type\r\n    }\r\n  }\r\n`","import { Day, DayValue, Locale, utils } from \"react-modern-calendar-datepicker\";\r\n\r\nexport const CsCalendarLocale: Locale = {\r\n  months: [\r\n    'Leden',\r\n    'Únor',\r\n    'Březen',\r\n    'Duben',\r\n    'Květen',\r\n    'Červen',\r\n    'Červenec',\r\n    'Srpen',\r\n    'Září',\r\n    'Říjen',\r\n    'Listopad',\r\n    'Prosinec'\r\n  ],\r\n  weekDays: [\r\n    {\r\n      name: 'Neděle', // used for accessibility \r\n      short: 'Ned', // displayed at the top of days' rows\r\n      isWeekend: true, // is it a formal weekend or not?\r\n    },\r\n    {\r\n      name: 'Pondělí',\r\n      short: 'Pon',\r\n    },\r\n    {\r\n      name: 'Úterý',\r\n      short: 'Út',\r\n    },\r\n    {\r\n      name: 'Středa',\r\n      short: 'St',\r\n    },\r\n    {\r\n      name: 'Čtvrtek',\r\n      short: 'Čt',\r\n    },\r\n    {\r\n      name: 'Pátek',\r\n      short: 'Pá',\r\n    },\r\n    {\r\n      name: 'Sobota',\r\n      short: 'Sob',\r\n      isWeekend: true,\r\n    }\r\n  ],\r\n  weekStartingIndex: 0,\r\n  // return a { year: number, month: number, day: number } object\r\n  getToday(gregorainTodayObject) {\r\n    return gregorainTodayObject;\r\n  },\r\n  // return a native JavaScript date here\r\n  toNativeDate(date) {\r\n    return new Date(date.year, date.month - 1, date.day);\r\n  },\r\n  // return a number for date's month length\r\n  getMonthLength(date) {\r\n    return new Date(date.year, date.month, 0).getDate();\r\n  },\r\n  // return a transformed digit to your locale\r\n  transformDigit(digit) {\r\n    return digit;\r\n  },\r\n  // texts in the date picker\r\n  nextMonth: 'Příští Měsíc',\r\n  previousMonth: 'Předchozí Měsíc',\r\n  openMonthSelector: 'Otevřít Výběr Měsíce',\r\n  openYearSelector: 'Otevřít Výběr Roku',\r\n  closeMonthSelector: 'Zavřít Výběr Měsíce',\r\n  closeYearSelector: 'Zavřít Výběr Roku',\r\n  defaultPlaceholder: 'Vybrat...',\r\n  // for input range value\r\n  from: 'od',\r\n  to: 'do',\r\n  // used for input value when multi dates are selected\r\n  digitSeparator: ',',\r\n  // if your provide -2 for example, year will be 2 digited\r\n  yearLetterSkip: 0,\r\n  // is your language rtl or ltr?\r\n  isRtl: false\r\n}\r\n\r\nconst getDaysWithinMonth = (from: number, to: number, month: number, year: number): Day[] => {\r\n  const days: Day[] = []\r\n  for (let index = from; index <= to; index++) {\r\n    days.push({ year: year, month: month, day: index })\r\n  }\r\n  return days\r\n}\r\n\r\nconst getDaysWithinOverlappingMonths = (from: number, to: number, months: number[], year: number): Day[] => {\r\n  const { getMonthLength } = utils(\"en\")\r\n  const days: Day[] = []\r\n  months.forEach((month: number, index: number) => {\r\n    if (index === 0) { // first month, get days till the end of the month\r\n      getDaysWithinMonth(from, getMonthLength({ day: from, month, year }), month, year).forEach((day: Day) => days.push(day))\r\n    } else if (index === months.length - 1) { // get days of te last month\r\n      getDaysWithinMonth(1, to, month, year).forEach((day: Day) => days.push(day))\r\n    } else { // get days of the intermediary month\r\n      getDaysWithinMonth(1, getMonthLength({ day: 1, month, year }), month, year).forEach((day: Day) => days.push(day))\r\n    }\r\n  })\r\n  return days\r\n}\r\n\r\nconst getDaysWithinOverlappingYears = (from: number, to: number, fromMonth: number, toMonth: number, years: number[]) => {\r\n  const { getMonthLength } = utils(\"en\")\r\n  const days: Day[] = []\r\n  years.forEach((year: number, index: number) => {\r\n    const months: number[] = []\r\n    if (index === 0) { // get days from first year\r\n      for (let idx = fromMonth; idx <= 12; idx++) {\r\n        months.push(idx)\r\n      }\r\n      getDaysWithinOverlappingMonths(from, getMonthLength({ day: 1, month: 12, year }), months, year).forEach((day: Day) => days.push(day))\r\n    } else if (index === years.length - 1) { // get days from last year\r\n      for (let idx = 1; idx <= toMonth; idx++) {\r\n        months.push(idx)\r\n      }\r\n      if (months.length > 1) {\r\n        getDaysWithinOverlappingMonths(1, to, months, year).forEach((day: Day) => days.push(day))\r\n      } else {\r\n        getDaysWithinMonth(1, to, months[ 0 ], year).forEach((day: Day) => days.push(day))\r\n      }\r\n    } else { // get days from intermediary year\r\n      const months = Array.from(Array(13).keys())\r\n      months.shift()\r\n      getDaysWithinOverlappingMonths(1, getMonthLength({ day: 1, month: 12, year }), months, year).forEach((day: Day) => days.push(day))\r\n    }\r\n  })\r\n  return days\r\n}\r\n\r\nexport const TransformDate = {\r\n  getDaysFromRange: (from: DayValue, to: DayValue): Day[] => {\r\n    if (from === undefined || from === null || to === undefined || to === null) {\r\n      return []\r\n    }\r\n    if (to.year === from.year) {\r\n      // processing within same year\r\n      if (to.month === from.month) {\r\n        // processing within same month\r\n        return getDaysWithinMonth(from.day, to.day, from.month, from.year)\r\n      } else {\r\n        // processing within overlapping months\r\n        const months = []\r\n        for (let index = from.month; index <= to.month; index++) {\r\n          months.push(index)\r\n        }\r\n        return getDaysWithinOverlappingMonths(from.day, to.day, months, from.year)\r\n      }\r\n    } else {\r\n      // processing within overlapping years\r\n      const years = []\r\n      for (let index = from.year; index <= to.year; index++) {\r\n        years.push(index)\r\n      }\r\n      return getDaysWithinOverlappingYears(from.day, to.day, from.month, to.month, years)\r\n    }\r\n  },\r\n  toLocaleString: (day: DayValue, defaultValue: string) => {\r\n    if (day === undefined || day === null) {\r\n      return defaultValue\r\n    }\r\n    return `${ day?.day } ${ CsCalendarLocale.months[ day.month - 1 ] } ${ day.year }`\r\n  }\r\n}\r\n","export const defaultArrivalHour: number = 14\r\nexport const defaultDepartureHour: number = 10\r\nexport const dateFormat = \"YYYY-MM-DD HH:mm\"","import { Day } from \"react-modern-calendar-datepicker\"\nimport { Moment } from \"moment\"\n\nexport type ReservationType = \"Závazná Rezervace\" | \"Nezávazná Rezervace\" | \"Aktuálně Ubytování\" | \"Obydlený Termín\"\nexport type ReservationTypeKey = \"BINDING\" | \"NONBINDING\" | \"ACCOMMODATED\" | \"INHABITED\"\nexport type ReserveDay = Day & { hour?: number, minute?: number }\n\nexport const Reservation = {\n  getType: (key: ReservationTypeKey): ReservationType => {\n    switch (key) {\n      case \"NONBINDING\":\n        return \"Nezávazná Rezervace\"\n      case \"ACCOMMODATED\":\n        return \"Aktuálně Ubytování\"\n      case \"INHABITED\":\n        return \"Obydlený Termín\"\n      case \"BINDING\":\n      default: return \"Závazná Rezervace\"\n    }\n  }\n}\n\nexport type DrawerType = \"guest\" | \"suite\"\nexport type ReservationMeal = \"BREAKFAST\" | \"HALFBOARD\" | \"NOMEAL\"\n\nexport interface ReservationRange {\n  from: Moment\n  to: Moment\n}\n\nexport interface ReserveRange {\n  id?: number\n  from: ReserveDay\n  to: ReserveDay\n  type: ReservationTypeKey\n}\n\nexport interface Room {\n  id: number\n  name: string\n  reservedRanges: ReserveRange[]\n}\n\ninterface Address {\n  municipality?: string\n  psc?: number\n  street?: string\n}\n\ninterface Citizenship {\n  new?: string\n  selected?: string\n}\n\nexport interface GuestForm {\n  age: string,\n  address?: Address\n  citizenship?: Citizenship\n  email: string\n  gender?: string\n  id?: number\n  name: string\n  identity: string\n  phone: string\n  surname: string\n  visa?: string\n}\n\nexport interface GuestErrorResponse {\n  email: Array<string>\n  gender: Array<string>\n  identity: Array<string>\n  name: Array<string>\n  phone_number: Array<string>\n  surname: Array<string>\n}\n\nexport interface Guest {\n  id?: number | string\n  name: string\n  surname: string\n}\n\nexport interface Suite {\n  id: number | string\n  number?: number | null\n  title?: string\n}\n\nexport interface IReservation {\n  fromDate: Moment\n  guest?: Guest\n  meal?: ReservationMeal\n  id?: number\n  notes?: string | null\n  purpose?: string | null\n  roommates: Array<Guest>\n  suite: Suite\n  toDate: Moment\n  type: ReservationTypeKey\n}\n\nexport interface SuiteForm {\n  number: number,\n  title: string\n}\n\nexport interface OptionsType {\n  label: string,\n  value: string | number\n}\n\nexport interface CustomGroupFields {\n  number: number | null\n  title: string\n}\n\nexport interface CustomItemFields {\n  color?: string\n  type?: string\n}","import { FormInstance, Rule } from \"antd/lib/form\";\r\nimport { OptionsType, Reservation, ReservationTypeKey } from \"../Types\";\r\n\r\ninterface OID {\r\n  id: number\r\n}\r\n\r\ninterface IReservationFormHelper {\r\n  getRequiredRule: (message: string) => Rule\r\n  guestValidators: (form: FormInstance) => Rule[]\r\n  mealOptions: OptionsType[]\r\n  reservationOptions: (OptionsType & { value: ReservationTypeKey })[]\r\n  roommateValidators: (form: FormInstance) => Rule[]\r\n}\r\n\r\nexport const ReservationFormHelper: IReservationFormHelper = {\r\n  mealOptions: [\r\n    {\r\n      label: \"Bez Stravy\",\r\n      value: \"NOMEAL\"\r\n    },\r\n    {\r\n      label: \"Jen Snídaně\",\r\n      value: \"BREAKFAST\"\r\n    },\r\n    {\r\n      label: \"Polopenze\",\r\n      value: \"HALFBOARD\"\r\n    }\r\n  ],\r\n  reservationOptions: [\r\n    {\r\n      label: Reservation.getType(\"BINDING\"),\r\n      value: \"BINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"NONBINDING\"),\r\n      value: \"NONBINDING\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"ACCOMMODATED\"),\r\n      value: \"ACCOMMODATED\"\r\n    },\r\n    {\r\n      label: Reservation.getType(\"INHABITED\"),\r\n      value: \"INHABITED\"\r\n    }\r\n  ],\r\n  getRequiredRule: (message: string): Rule => {\r\n    return { required: true, message }\r\n  },\r\n  guestValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"host nemůže být stejný jako spolubydlící\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const roommates: Array<OID> = form.getFieldValue(\"roommates\")\r\n          if (roommates === undefined || roommates.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          const duplicate = roommates.filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicate === undefined || duplicate.length === 0) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail guest validation, equals to roommate\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"vyberte hosta\",\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  roommateValidators: (form: FormInstance): Rule[] => {\r\n    return [\r\n      {\r\n        message: \"spolubydlící je již vybrán\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          const duplicates: Array<OID> = form.getFieldValue(\"roommates\").filter((id: OID | undefined) => {\r\n            return id !== undefined && id.id === value\r\n          })\r\n          if (duplicates === undefined || duplicates.length <= 1) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, duplicate value\"))\r\n        }\r\n      },\r\n      {\r\n        message: \"spolubydlící nemůže být stejný jako host\",\r\n        validator: (_rule, value: number): Promise<void | Error> => {\r\n          if (form.getFieldValue(\"guest\") !== value) {\r\n            return Promise.resolve()\r\n          }\r\n          return Promise.reject(new Error(\"Fail roommate validation, equals to guest\"))\r\n        }\r\n      }\r\n    ]\r\n  },\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_RESERVATION = gql`\r\n  mutation CreateReservation($data: ReservationInput!) {\r\n    createReservation(data: $data) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_RESERVATION = gql`\r\n  mutation DeleteReservation($reservationId: ID!) {\r\n    deleteReservation(reservationId: $reservationId) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_RESERVATION = gql`\r\n  mutation UpdateReservation($data: ReservationInput!) {\r\n    updateReservation(data: $data) {\r\n      reservation {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\nimport { Button, DatePicker, Form, Input, message, Modal, Popconfirm, Select, Space } from \"antd\"\nimport { Moment } from \"moment\"\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\nimport { Store } from \"rc-field-form/lib/interface\"\nimport { CloseCircleOutlined, CloseOutlined, EditOutlined, MinusCircleOutlined, PlusCircleOutlined, PlusOutlined } from \"@ant-design/icons\"\nimport \"./styles.css\"\nimport { IReservation, OptionsType, ReservationTypeKey } from \"../../lib/Types\"\nimport { ReservationFormHelper } from \"../../lib/components/ReservationFormHelper\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { CreateReservation, CreateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/CreateReservation\"\nimport { Guests_guests } from \"../../lib/graphql/queries/Guests/__generated__/Guests\"\nimport { CREATE_RESERVATION, DELETE_RESERVATION, UPDATE_RESERVATION } from \"../../lib/graphql/mutations/Reservation\"\nimport { UpdateReservation, UpdateReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/UpdateReservation\"\nimport { ReservationInput } from \"../../lib/graphql/globalTypes\"\nimport { DeleteReservation, DeleteReservationVariables } from \"../../lib/graphql/mutations/Reservation/__generated__/DeleteReservation\"\nimport { dateFormat } from \"../../lib/Constants\"\nimport { SuitesWithReservations } from \"../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations\"\n\ninterface Props {\n  close: () => void\n  guests: (Guests_guests | null)[] | undefined | null\n  isOpen: boolean\n  openGuestDrawer: () => void\n  refetch: ((variables?: Partial<OperationVariables> | undefined) => Promise<ApolloQueryResult<SuitesWithReservations>>) | undefined\n  reservation: IReservation | undefined\n}\n\nexport const ReservationModal = ({\n  close,\n  guests,\n  isOpen,\n  openGuestDrawer,\n  refetch,\n  reservation,\n}: Props) => {\n\n  const [ createReservation ] = useMutation<CreateReservation, CreateReservationVariables>(CREATE_RESERVATION, {\n    onCompleted: (): void => {\n      message.success(\"Rezervace byla vytvořena!\")\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (error: ApolloError): void => {\n      message.error(error.message)\n    }\n  })\n  const [ updateReservation ] = useMutation<UpdateReservation, UpdateReservationVariables>(UPDATE_RESERVATION, {\n    onCompleted: () => {\n      message.success(\"Rezervace byla aktualizována!\")\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (error: ApolloError) => {\n      message.error(error.message)\n    }\n  })\n  const [ deleteReservation ] = useMutation<DeleteReservation, DeleteReservationVariables>(DELETE_RESERVATION, {\n    onCompleted: () => {\n      message.success(\"Rezervace byla odstraněna!\")\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (error: ApolloError) => {\n      message.error(error)\n    }\n  })\n\n  const [ deleteConfirmVisible, setDeleteConfirmVisible ] = useState<boolean>(false)\n  const [ guestOptions, setGuestOptions ] = useState<OptionsType[]>([])\n\n  const [ form ] = Form.useForm()\n  const initialValues: Store & { type: ReservationTypeKey } = reservation !== undefined ? {\n    dates: [ reservation.fromDate, reservation.toDate ],\n    guest: reservation.guest === undefined ? null : reservation.guest.id,\n    meal: reservation.meal,\n    notes: reservation.notes,\n    purpose: reservation.purpose,\n    roommates: Array.from(reservation.roommates, roommate => {\n      return { id: roommate.id }\n    }),\n    type: reservation.type\n  } : { type: \"NONBINDING\" }\n\n  const closeModal = () => {\n    setDeleteConfirmVisible(false)\n    setTimeout(() => { close() })\n  }\n\n  const submitForm = (): void => {\n    const formData = form.getFieldsValue(true)\n    const [ from, to ]: Array<Moment> = form.getFieldValue(\"dates\")\n    const roommates = formData.roommates === undefined ? [] :\n      Array.from(formData.roommates, (data: { id: number }) => data.id)\n\n    const variables: ReservationInput = {\n      fromDate: from.format(dateFormat),\n      guest: formData.guest,\n      meal: formData.meal,\n      notes: formData.notes,\n      purpose: formData.purpose,\n      roommates: roommates,\n      suite: reservation !== undefined ? +reservation.suite.id : null,\n      toDate: to.format(dateFormat),\n      type: formData.type\n    }\n    if (reservation !== undefined && reservation.id !== undefined) {\n      updateReservation({ variables: { data: { ...variables, id: String(reservation.id) } } })\n    } else {\n      createReservation({ variables: { data: variables } })\n    }\n  }\n\n  const getRemoveButton = () => {\n    return reservation !== undefined ? (\n      <Popconfirm\n        cancelText=\"Ne\"\n        key=\"remove\"\n        okText=\"Ano\"\n        onConfirm={ () => {\n          deleteReservation({ variables: { reservationId: String(reservation.id) } })\n        } }\n        title=\"Odstranit rezervaci?\">\n        <Button\n          className=\"cancel-button\"\n          danger\n          icon={ <CloseCircleOutlined /> }>\n          Odstranit\n        </Button>\n      </Popconfirm>\n    ) : null\n  }\n\n  const footerButtons = [\n    getRemoveButton(),\n    <Button\n      key=\"guest\"\n      onClick={ openGuestDrawer }>\n      Přidat hosta\n    </Button>,\n    <Button\n      key=\"create\"\n      icon={ reservation === undefined ? <PlusCircleOutlined /> : <EditOutlined /> }\n      onClick={ () => {\n        form.validateFields()\n          .then(submitForm)\n      } }\n      type=\"primary\">\n      { (reservation !== undefined && reservation.id !== undefined) ? \"Upravit\" : \"Uložit\" }\n    </Button>\n  ]\n\n  useEffect(() => {\n    if (guests !== undefined && guests !== null) {\n      setGuestOptions(Array.from(guests, (guest: any): any => {\n        return {\n          label: `${ guest.name } ${ guest.surname }`,\n          value: guest.id\n        }\n      }))\n    }\n  }, [ guests ])\n\n  // Reset form to update range, has to be after modal is opened,\n  // otherwise the form might not be initialized\n  useEffect(() => {\n    if (isOpen === true) {\n      form.resetFields()\n    }\n  }, [ form, isOpen ])\n\n  return (\n    <Modal\n      closeIcon={ (\n        <Popconfirm\n          onCancel={ () => setDeleteConfirmVisible(false) }\n          onConfirm={ closeModal }\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n          visible={ deleteConfirmVisible }>\n          <CloseOutlined onClick={ () => {\n            if (form.isFieldsTouched()) {\n              setDeleteConfirmVisible(true)\n            } else {\n              closeModal()\n            }\n          } } />\n        </Popconfirm>\n      ) }\n      footer={ footerButtons }\n      title=\"Rezervační formulář\"\n      visible={ isOpen }>\n      <Form\n        form={ form }\n        initialValues={ initialValues }\n        layout=\"vertical\">\n        <Form.Item\n          label=\"Datum Rezervace\"\n          name=\"dates\"\n          required>\n          <DatePicker.RangePicker\n            format={ dateFormat }\n            showTime />\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          label=\"Host\"\n          name=\"guest\"\n          required\n          rules={ ReservationFormHelper.guestValidators(form) }>\n          <Select\n            filterOption={ (input, option): boolean => {\n              const match = option?.label?.toString().toLowerCase().indexOf(input.toLowerCase())\n              return match !== undefined && match >= 0\n            } }\n            options={ guestOptions }\n            showSearch />\n        </Form.Item>\n        <Form.List name=\"roommates\">\n          { (fields, { add, remove }) => (\n            <>\n              { fields.map(({ key, name, fieldKey, ...restField }) => (\n                <Space\n                  align=\"baseline\"\n                  className=\"roommate-list\"\n                  key={ key }>\n                  <Form.Item\n                    hasFeedback\n                    { ...restField }\n                    fieldKey={ [ fieldKey, 'first' ] }\n                    name={ [ name, \"id\" ] }\n                    rules={ ReservationFormHelper.roommateValidators(form) }>\n                    <Select\n                      options={ guestOptions }\n                      showSearch />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={ () => {\n                    remove(name)\n                    form.validateFields()\n                  } } />\n                </Space>\n              )) }\n              <Form.Item>\n                <Button\n                  disabled={ fields.length >= guestOptions.length }\n                  type=\"dashed\"\n                  onClick={ () => add() }\n                  block\n                  icon={ <PlusOutlined /> }>\n                  Přidat spolubydlícího\n                </Button>\n              </Form.Item>\n            </>\n          ) }\n        </Form.List>\n        <Form.Item\n          hasFeedback\n          label=\"Typ Rezervace\"\n          name=\"type\"\n          required\n          rules={ [ ReservationFormHelper.getRequiredRule(\"vyberte typ rezervace\") ] }>\n          <Select\n            options={ ReservationFormHelper.reservationOptions } />\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          label=\"Strava\"\n          name=\"meal\"\n          required\n          rules={ [ FormHelper.requiredRule ] }>\n          <Select\n            options={ ReservationFormHelper.mealOptions } />\n        </Form.Item>\n        <Form.Item\n          label=\"Účel pobytu\"\n          name=\"purpose\">\n          <Input placeholder=\"účel pobytu\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Poznámky\"\n          name=\"notes\">\n          <Input.TextArea\n            placeholder=\"zadejte text\"\n            allowClear />\n        </Form.Item>\n      </Form>\n    </Modal >\n  )\n}","import { CloseOutlined, MailOutlined } from \"@ant-design/icons\"\r\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\r\nimport { Button, Drawer, Form, Input, message, Popconfirm } from \"antd\"\r\nimport Title from \"antd/lib/typography/Title\"\r\nimport { useState } from \"react\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport { GuestFormHelper } from \"../../lib/components/GuestFormHelper\"\r\nimport { CREATE_GUEST_BASIC } from \"../../lib/graphql/mutations/Guest\"\r\nimport { CreateGuestBasic, CreateGuestBasicVariables } from \"../../lib/graphql/mutations/Guest/__generated__/CreateGuestBasic\"\r\nimport { SuitesWithReservations } from \"../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations\"\r\nimport { GuestForm } from \"../../lib/Types\"\r\n\r\ninterface Props {\r\n  close: () => void\r\n  open: boolean\r\n  refetch: ((variables?: Partial<OperationVariables> | undefined) => Promise<ApolloQueryResult<SuitesWithReservations>>) | undefined\r\n}\r\n\r\nexport const GuestDrawerSmall = ({\r\n  close,\r\n  open,\r\n  refetch\r\n}: Props) => {\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\r\n\r\n  const [ createGuest ] = useMutation<CreateGuestBasic, CreateGuestBasicVariables>(CREATE_GUEST_BASIC, {\r\n    onCompleted: (data: CreateGuestBasic) => {\r\n      message.success(`Host ${ data.createGuest?.guest?.name } ${ data.createGuest?.guest?.surname } byl přidán`)\r\n      if (refetch !== undefined) {\r\n        refetch()\r\n      }\r\n      close()\r\n    },\r\n    onError: (error: ApolloError): void => {\r\n      message.error(error.message)\r\n    }\r\n  })\r\n\r\n  const submitForm = (): void => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        const formData: GuestForm = form.getFieldsValue(true)\r\n        const variables = {\r\n          email: formData.email,\r\n          name: formData.name,\r\n          surname: formData.surname\r\n        }\r\n        createGuest({ variables: { data: variables } })\r\n      })\r\n      .catch(() => console.error(\"Formulář nelze odeslat\"))\r\n  }\r\n\r\n  const closeDrawer = (): void => {\r\n    if (form.isFieldsTouched()) {\r\n      setConfirmClose(true)\r\n    } else {\r\n      close()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      closeIcon={ (\r\n        <Popconfirm\r\n          onCancel={ () => setConfirmClose(false) }\r\n          onConfirm={ () => {\r\n            setConfirmClose(false)\r\n            form.resetFields()\r\n            close()\r\n          } }\r\n          placement=\"rightTop\"\r\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\r\n          visible={ confirmClose }>\r\n          <CloseOutlined onClick={ closeDrawer } />\r\n        </Popconfirm>\r\n      ) }\r\n      footer={\r\n        <>\r\n          <Button\r\n            onClick={ submitForm }\r\n            type=\"primary\">\r\n            Vytvořit\r\n          </Button>\r\n        </>\r\n      }\r\n      footerStyle={ {\r\n        textAlign: \"right\"\r\n      } }\r\n      placement=\"left\"\r\n      title=\"Nový host\"\r\n      visible={ open }\r\n      width={ 500 }>\r\n      <Form\r\n        form={ form }\r\n        layout=\"vertical\"\r\n        name=\"guest\">\r\n        <Title level={ 5 }>Osobní údaje</Title>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Jméno\"\r\n          name=\"name\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Jméno\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"Příjmení\"\r\n          name=\"surname\"\r\n          required\r\n          rules={ GuestFormHelper.requiredAlphaRules }>\r\n          <Input placeholder=\"Vaše Příjmení\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          hasFeedback\r\n          label=\"E-Mail\"\r\n          name=\"email\"\r\n          required\r\n          rules={ [ FormHelper.requiredRule ] }>\r\n          <Input\r\n            addonBefore={ (\r\n              <Form.Item name=\"email-prefix\" noStyle>\r\n                <MailOutlined />\r\n              </Form.Item>\r\n            ) }\r\n            placeholder=\"e-mail\"\r\n            type=\"email\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  )\r\n}","import { useState, useEffect } from 'react'\nimport { Col } from 'antd'\nimport { Calendar, Day, DayValue } from 'react-modern-calendar-datepicker'\nimport { CsCalendarLocale, TransformDate } from '../../lib/components/CsCalendarLocale'\nimport './styles.css'\nimport { defaultArrivalHour, defaultDepartureHour } from '../../lib/Constants'\nimport { ReservationModal } from '../ReservationModal'\nimport { IReservation } from '../../lib/Types'\nimport { ReservationType } from '../../lib/graphql/globalTypes'\nimport Title from 'antd/lib/typography/Title'\nimport moment, { Moment } from 'moment'\nimport { GuestDrawerSmall } from '../GuestDrawerSmall'\nimport { SuitesWithReservations, SuitesWithReservations_guests, SuitesWithReservations_reservations } from '../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations'\nimport { Suites_suites } from '../../lib/graphql/queries/Suites/__generated__/Suites'\nimport { ApolloQueryResult, OperationVariables } from '@apollo/client'\n\ninterface Props {\n  guests: (SuitesWithReservations_guests | null)[] | null\n  refetch: ((variables?: Partial<OperationVariables> | undefined) => Promise<ApolloQueryResult<SuitesWithReservations>>) | undefined\n  reservations: (SuitesWithReservations_reservations | null)[] | undefined\n  suite: Suites_suites\n}\ntype CustomDayClassNameItem = Day & { className: string, reservationId: string };\n\nexport const ReserveCalendar = ({\n  guests,\n  refetch,\n  reservations,\n  suite,\n}: Props) => {\n\n  const [ modalOpen, setModalOpen ] = useState<boolean>(false)\n  const [ guestDrawerOpen, setGuestDrawerOpen ] = useState<boolean>(false)\n  const [ reservedDays, setReservedDays ] = useState<CustomDayClassNameItem[]>([])\n  const [ selectedReservation, setSelectedReservation ] = useState<IReservation>()\n\n  const getDayClassName = (type: ReservationType) => {\n    switch (type) {\n      case \"BINDING\":\n        return \"greenDay\"\n      case \"NONBINDING\":\n        return \"yellowDay\"\n      case \"ACCOMMODATED\":\n        return \"purpleDay\"\n      case \"INHABITED\":\n        return \"orangeDay\"\n      default: return \"greenDay\"\n    }\n  }\n\n  const setReservationRange = (dayValue: DayValue) => {\n    const rangeDay = reservedDays.find((day: CustomDayClassNameItem) => {\n      return day.year === dayValue?.year\n        && day.month === dayValue.month\n        && day.day === dayValue.day\n    })\n    if (rangeDay !== undefined) {\n      const reservation = reservations?.find(reservation => reservation?.id === rangeDay.reservationId)\n      if (reservation !== undefined && reservation !== null) {\n        setSelectedReservation({\n          fromDate: moment(reservation.fromDate),\n          guest: {\n            id: reservation.guest.id,\n            name: reservation.guest.name,\n            surname: reservation.guest.surname\n          },\n          meal: reservation.meal,\n          id: +reservation.id,\n          notes: reservation.notes,\n          purpose: reservation.purpose,\n          roommates: reservation.roommates,\n          suite: reservation.suite,\n          toDate: moment(reservation.toDate),\n          type: reservation.type\n        })\n      }\n    }\n    if (rangeDay === undefined && dayValue !== undefined && dayValue !== null) {\n      setSelectedReservation({\n        fromDate: moment([ dayValue.year, dayValue.month - 1, dayValue.day, defaultArrivalHour, 0 ]),\n        roommates: [],\n        suite: { id: suite.id },\n        toDate: moment([ dayValue.year, dayValue.month - 1, dayValue.day + 1, defaultDepartureHour, 0 ]),\n        type: \"NONBINDING\"\n      })\n    }\n    setModalOpen(true)\n  }\n\n  // Add reserved days to calendar based on reservation data from server\n  useEffect(() => {\n    const reservedDays: CustomDayClassNameItem[] = []\n    reservations?.forEach((reservation: SuitesWithReservations_reservations | null) => {\n      if (reservation !== null) {\n        const from: Moment = moment(reservation.fromDate)\n        const to: Moment = moment(reservation.toDate)\n        TransformDate.getDaysFromRange(\n          {\n            year: from.year(),\n            month: from.month() + 1,\n            day: from.date()\n          },\n          {\n            year: to.year(),\n            month: to.month() + 1,\n            day: to.date()\n          }).forEach((day: Day) => {\n            reservedDays.push({ className: getDayClassName(reservation.type), reservationId: reservation.id, ...day })\n          })\n      }\n    })\n    setReservedDays(reservedDays)\n  }, [ reservations ])\n\n  return (\n    <>\n      <Col\n        span={ 8 }\n        className=\"home__listing\">\n        <Title\n          level={ 4 }\n          className=\"home__listings-title\">\n          { suite.title }\n        </Title>\n        <div className=\"home__calendar\">\n          <Calendar\n            onChange={ setReservationRange }\n            locale={ CsCalendarLocale }\n            customDaysClassName={ reservedDays }\n            shouldHighlightWeekends />\n        </div>\n      </Col>\n      <ReservationModal\n        close={ () => {\n          setSelectedReservation(undefined)\n          setModalOpen(false)\n        } }\n        guests={ guests }\n        isOpen={ modalOpen }\n        openGuestDrawer={ () => setGuestDrawerOpen(true) }\n        refetch={ refetch }\n        reservation={ selectedReservation } />\n      <GuestDrawerSmall\n        close={ () => setGuestDrawerOpen(false) }\n        open={ guestDrawerOpen }\n        refetch={ refetch } />\n    </>\n  )\n}","import { ApolloError, useLazyQuery } from '@apollo/client'\nimport { Content } from 'antd/lib/layout/layout'\nimport Title from 'antd/lib/typography/Title'\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\"\nimport './styles.css'\nimport { Empty, message, Row, Skeleton } from 'antd'\nimport { Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport { SUITES_WITH_RESERVATIONS } from '../../lib/graphql/queries/Suites'\nimport { SuitesWithReservations, SuitesWithReservations_reservations } from '../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations'\nimport { useEffect } from 'react'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { ReserveCalendar } from '../ReserveCalendar'\n\ninterface Props {\n  isAuthenticated: boolean\n}\n\nexport const Home = withRouter(({ history, isAuthenticated }: RouteComponentProps & Props) => {\n\n  const [ getData, { loading, data, refetch } ] = useLazyQuery<SuitesWithReservations>(SUITES_WITH_RESERVATIONS, {\n    onError: (reason: ApolloError) => {\n      console.error(reason);\n      message.error(\"Chyba při načítání apartmá, kontaktujte správce\")\n    }\n  })\n\n  const filterSuiteReservations = (suite: Suites_suites) => {\n    return data?.reservations?.filter((reservation: SuitesWithReservations_reservations | null) => {\n      return reservation !== null && reservation.suite.id === suite.id\n    })\n  }\n\n  const getContent = () => {\n    return data?.suites?.length !== undefined && data.suites.length > 0 ? (\n      <Row gutter={ 8 }>\n        {\n          data.suites.map((suite: Suites_suites | null) => {\n            return suite !== null ? (\n              <ReserveCalendar\n                guests={ data.guests }\n                key={ suite.id }\n                refetch={ refetch }\n                reservations={ filterSuiteReservations(suite) }\n                suite={ suite } />\n            ) : null\n          })\n        }\n      </Row>\n    ) : <Empty />\n  }\n\n  useEffect(() => {\n    if (isAuthenticated === true) {\n      getData()\n    } else {\n      history.push(\"/login\")\n    }\n  }, [ getData, history, isAuthenticated ])\n\n  return isAuthenticated === true ? (\n    <Content className=\"app-content\">\n      <div className=\"home__listings\">\n        <Title level={ 3 } className=\"home__listings-title\">\n          Rezervace / Obsazenost\n        </Title>\n        <Skeleton\n          active\n          loading={ loading }>\n          { getContent() }\n        </Skeleton>\n      </div>\n    </Content >\n  ) : null\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const JWT_TOKEN = gql`\r\n  mutation RetrieveToken($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  } \r\n`","import { gql } from \"@apollo/client\";\r\n\r\nexport const USER = gql`\r\n  query Whoami {\r\n    whoami {\r\n      username\r\n    }\r\n  }\r\n`","import { ApolloError, useMutation, useQuery } from \"@apollo/client\"\r\nimport { Button, Form, Input, Layout, message, Spin } from \"antd\"\r\nimport { useState } from \"react\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\nimport { FormHelper } from \"../../lib/components/FormHelper\"\r\nimport { setCookie } from \"../../lib/Cookie\"\r\nimport { JWT_TOKEN } from \"../../lib/graphql/mutations/User\"\r\nimport { RetrieveToken, RetrieveTokenVariables } from \"../../lib/graphql/mutations/User/__generated__/RetrieveToken\"\r\nimport { USER } from \"../../lib/graphql/queries/User\"\r\nimport { Whoami } from \"../../lib/graphql/queries/User/__generated__/Whoami\"\r\nimport \"./styles.css\"\r\n\r\ninterface Props {\r\n  setIsAuthenticated: (state: boolean) => void\r\n}\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nexport const Login = withRouter(({ history, setIsAuthenticated }: RouteComponentProps & Props) => {\r\n\r\n  const [ getToken, { loading: loginLoading } ] = useMutation<RetrieveToken, RetrieveTokenVariables>(JWT_TOKEN, {\r\n    onCompleted: (data: RetrieveToken) => {\r\n      if (data.tokenAuth?.token !== undefined) {\r\n        setCookie(\"authtoken\", data.tokenAuth.token)\r\n        setIsAuthenticated(true)\r\n        history.push(\"/\")\r\n      }\r\n    },\r\n    onError: (reason: ApolloError) => {\r\n      console.error(reason);\r\n      message.error(\"Nesprávné přihlašovací údaje\")\r\n    }\r\n  })\r\n\r\n  const { loading: userLoading } = useQuery<Whoami>(USER, {\r\n    onCompleted: (data: Whoami) => {\r\n      if (data?.whoami?.username !== undefined) {\r\n        setIsAuthenticated(true)\r\n        history.push(\"/\")\r\n      }\r\n    },\r\n    onError: (reason: ApolloError) => {\r\n      console.error(reason)\r\n    }\r\n  })\r\n\r\n  const [ form ] = Form.useForm()\r\n\r\n  const [ spinnerTip, setSpinnerTip ] = useState<string>(\"Načítám...\")\r\n\r\n  const submitForm = (variables: any): void => {\r\n    setSpinnerTip(\"Přihlašování...\")\r\n    getToken({ variables })\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Layout.Content>\r\n        <Spin spinning={ userLoading || loginLoading } tip={ spinnerTip }>\r\n          <Form\r\n            { ...layout }\r\n            className=\"login\"\r\n            form={ form }\r\n            name=\"login\"\r\n            onFinish={ submitForm }>\r\n            <Form.Item\r\n              label=\"Jméno\"\r\n              name=\"username\"\r\n              rules={ [ FormHelper.requiredRule ] }>\r\n              <Input type=\"text\" placeholder=\"uživatelské jméno\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Heslo\"\r\n              name=\"password\"\r\n              rules={ [ FormHelper.requiredRule ] }>\r\n              <Input type=\"password\" placeholder=\"heslo\" />\r\n            </Form.Item>\r\n            <Form.Item { ...tailLayout }>\r\n              <Button type=\"default\" htmlType=\"button\" onClick={ () => form.resetFields() }>\r\n                Reset\r\n              </Button>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Přihlásit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Spin>\r\n      </Layout.Content>\r\n    </Layout>\r\n  )\r\n})","import { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport { ApolloError, useLazyQuery } from \"@apollo/client\"\nimport { Content } from \"antd/lib/layout/layout\"\nimport Title from \"antd/lib/typography/Title\"\nimport Text from \"antd/lib/typography/Text\"\nimport Timeline, { CursorMarker, DateHeader, SidebarHeader, TimelineGroup, TimelineHeaders, TimelineItem } from \"react-calendar-timeline\"\nimport { useEffect, useState } from \"react\"\nimport { Empty, message, Popover } from \"antd\"\nimport \"react-calendar-timeline/lib/Timeline.css\"\nimport \"./styles.css\"\nimport moment, { Moment } from \"moment\"\nimport { CustomGroupFields, CustomItemFields, IReservation, Reservation } from \"../../lib/Types\"\nimport { GuestDrawerSmall } from \"../GuestDrawerSmall\"\nimport { SUITES_WITH_RESERVATIONS } from \"../../lib/graphql/queries/Suites\"\nimport { SuitesWithReservations, SuitesWithReservations_reservations, SuitesWithReservations_suites } from \"../../lib/graphql/queries/Suites/__generated__/SuitesWithReservations\"\nimport { ReservationModal } from \"../ReservationModal\"\n\ninterface Props {\n  isAuthenticated: boolean\n}\n\n// https://github.com/namespace-ee/react-calendar-timeline\nexport const Overview = withRouter(({ history, isAuthenticated }: RouteComponentProps & Props) => {\n\n  const getReservationColor = (reservationType: string): string => {\n    switch (reservationType) {\n      case \"NONBINDING\":\n        return \"rgb(254, 223, 3)\"\n      case \"ACCOMMODATED\":\n        return \"rgb(0, 133, 182)\"\n      case \"INHABITED\":\n        return \"rgb(254, 127, 45)\"\n      case \"BINDING\":\n      default: return \"rgb(0, 212, 157)\"\n    }\n  }\n\n  const [ getData, { data, refetch } ] = useLazyQuery<SuitesWithReservations>(SUITES_WITH_RESERVATIONS, {\n    onError: (reason: ApolloError) => {\n      console.error(reason)\n      message.error(\"Chyba serveru, kontaktujte správce\")\n    }\n  })\n\n  const [ groups, setGroups ] = useState<TimelineGroup<CustomGroupFields>[]>([])\n  const [ guestDrawerOpen, setGuestDrawerOpen ] = useState<boolean>(false)\n  const [ items, setItems ] = useState<TimelineItem<CustomItemFields, Moment>[]>([])\n  const [ reservationModalOpen, setReservationModalOpen ] = useState<boolean>(false)\n  const [ selectedReservation, setSelectedReservation ] = useState<IReservation>()\n\n  useEffect(() => {\n    if (isAuthenticated === true) {\n      getData()\n    } else {\n      history.push(\"/login\")\n    }\n  }, [ getData, history, isAuthenticated ])\n\n  useEffect(() => {\n    const suites: TimelineGroup<CustomGroupFields>[] = []\n    const reservations: TimelineItem<CustomItemFields, Moment>[] = []\n    data?.suites?.forEach((suite: SuitesWithReservations_suites | null) => {\n      if (suite !== null) {\n        suites.push({ ...suite, stackItems: true })\n      }\n    })\n    data?.reservations?.forEach((reservation: SuitesWithReservations_reservations | null) => {\n      if (reservation !== null) {\n        reservations.push({\n          color: getReservationColor(reservation.type),\n          end_time: moment(reservation.toDate),\n          group: reservation.suite.id,\n          id: reservation.id,\n          itemProps: {\n            className: 'reservation-item',\n            style: {\n              background: getReservationColor(reservation.type),\n              border: \"none\"\n            }\n          },\n          start_time: moment(reservation.fromDate),\n          title: `${ reservation.guest.name } ${ reservation.guest.surname }`,\n          type: Reservation.getType(reservation.type)\n        })\n      }\n    })\n    setGroups(suites)\n    setItems(reservations)\n  }, [ data ])\n\n  const getTimeline = () => {\n    return data !== undefined ? (\n      <Timeline\n        canChangeGroup={ false }\n        canMove={ false }\n        canResize={ false }\n        defaultTimeEnd={ moment().add(12, \"day\") }\n        defaultTimeStart={ moment().add(-12, \"day\") }\n        groupRenderer={ ({ group }) => {\n          return (\n            <>\n              <Title level={ 5 }>{ group.title }</Title>\n            </>\n          )\n        } }\n        groups={ groups }\n        itemRenderer={ ({ item, itemContext, getItemProps, getResizeProps }) => {\n          const { left: leftResizeProps, right: rightResizeProps } = getResizeProps()\n          return item.itemProps !== undefined ? (\n            <div { ...getItemProps(item.itemProps) }>\n              { itemContext.useResizeHandle ? <div { ...leftResizeProps } /> : '' }\n              <Popover title={ item.title } content={ (\n                <>\n                  <div style={ { color: item.color, fontWeight: 700 } }>\n                    { item.type }\n                  </div>\n                  <div>\n                    Od: <strong>{ item.start_time.format(\"DD MMM HH:mm\") }</strong>\n                  </div>\n                  <div>\n                    Do: <strong>{ item.end_time.format(\"DD MMM HH:mm\") }</strong>\n                  </div>\n                </>\n              ) }>\n                <div\n                  className=\"rct-item-content\"\n                  style={ { maxHeight: `${ itemContext.dimensions.height }` } }>\n                  <Text strong>{ item.title }</Text>\n                </div>\n              </Popover>\n              { itemContext.useResizeHandle ? <div { ...rightResizeProps } /> : '' }\n            </div>\n          ) : null\n        } }\n        items={ items }\n        lineHeight={ 60 }\n        onCanvasClick={ (groupId: number, time: number) => {\n          const selectedGroup = groups.find(group => group.id === groupId)\n          if (selectedGroup !== undefined) {\n            setSelectedReservation({\n              fromDate: moment(time),\n              suite: { ...selectedGroup },\n              roommates: [],\n              toDate: moment(time).add(1, \"day\"),\n              type: \"NONBINDING\"\n            })\n            setReservationModalOpen(true)\n          }\n        } }\n        onItemClick={ (itemId: number, _e, time: number) => {\n          if (data?.reservations !== undefined && data.reservations !== null) {\n            const reservation = data.reservations.find(entry => entry !== null && entry.id === String(itemId))\n            if (reservation !== undefined && reservation !== null) {\n              setSelectedReservation({\n                fromDate: moment(reservation.fromDate),\n                guest: reservation.guest,\n                id: +reservation.id,\n                meal: reservation.meal,\n                notes: reservation.notes,\n                purpose: reservation.purpose,\n                roommates: reservation.roommates,\n                suite: reservation.suite,\n                toDate: moment(reservation.toDate),\n                type: reservation.type\n              })\n              setReservationModalOpen(true)\n            }\n          }\n        } }>\n        <TimelineHeaders>\n          <SidebarHeader>\n            { ({ getRootProps }) => {\n              return (\n                <div\n                  { ...getRootProps() }\n                  className=\"side-header\" />\n              )\n            } }\n          </SidebarHeader>\n          <DateHeader unit=\"primaryHeader\" />\n          <DateHeader\n            className=\"days\"\n            unit=\"day\" />\n        </TimelineHeaders>\n        <CursorMarker>\n          {\n            ({ styles, date }) => {\n              return (\n                <div style={ { ...styles, backgroundColor: \"rgba(136, 136, 136, 0.5)\", color: \"#888\" } }>\n                  <div className=\"rt-marker__label\">\n                    <div className=\"rt-marker__content\">\n                      { moment(date).format(\"DD MMM HH:mm\") }\n                    </div>\n                  </div>\n                </div>\n              )\n            }\n          }\n        </CursorMarker>\n      </Timeline>\n    ) : <Empty />\n  }\n\n  return (\n    <Content className=\"app-content\">\n      <Title level={ 3 } className=\"home__listings-title\">\n        Přehled\n      </Title>\n      { getTimeline() }\n      <ReservationModal\n        close={ () => {\n          setSelectedReservation(undefined)\n          setReservationModalOpen(false)\n        } }\n        guests={ data?.guests }\n        isOpen={ reservationModalOpen }\n        openGuestDrawer={ () => setGuestDrawerOpen(true) }\n        refetch={ refetch }\n        reservation={ selectedReservation } />\n      <GuestDrawerSmall\n        close={ () => setGuestDrawerOpen(false) }\n        open={ guestDrawerOpen }\n        refetch={ refetch } />\n    </Content >\n  )\n})","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_SUITE = gql`\r\n  mutation CreateSuite($data: SuiteInput!) {\r\n    createSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_SUITE = gql`\r\n  mutation UpdateSuite($data: SuiteInput!) {\r\n    updateSuite(data: $data) {\r\n      suite {\r\n        id\r\n        number\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_SUITE = gql`\r\n  mutation DeleteSuite($suiteId: ID!) {\r\n    deleteSuite(suiteId: $suiteId) {\r\n      suite {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import { useEffect, useState } from \"react\"\nimport { Button, Drawer, Form, Input, message, Popconfirm } from \"antd\"\nimport { FormHelper } from \"../../lib/components/FormHelper\"\nimport { CloseOutlined } from \"@ant-design/icons\"\nimport { Suites, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport { Store } from \"antd/lib/form/interface\"\nimport { ApolloError, ApolloQueryResult, OperationVariables, useMutation } from \"@apollo/client\"\nimport { CreateSuite, CreateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/CreateSuite\"\nimport { CREATE_SUITE, UPDATE_SUITE } from \"../../lib/graphql/mutations/Suite\"\nimport { SuiteForm } from \"../../lib/Types\"\nimport { SuiteInput } from \"../../lib/graphql/globalTypes\"\nimport { UpdateSuite, UpdateSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/UpdateSuite\"\n\ninterface Props {\n  close: () => void\n  refetch: ((variables?: Partial<OperationVariables>) => Promise<ApolloQueryResult<Suites>>) | undefined\n  suite: Suites_suites | undefined\n  visible: boolean\n}\n\nexport const SuiteDrawer = ({\n  close,\n  suite,\n  refetch,\n  visible\n}: Props) => {\n\n  const [ createSuite ] = useMutation<CreateSuite, CreateSuiteVariables>(CREATE_SUITE, {\n    onCompleted: (data: CreateSuite): void => {\n      message.success(`Apartmá ${ data.createSuite?.suite?.title } byla vytvořena`)\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (reason: ApolloError): void => {\n      console.error(reason)\n    }\n  })\n  const [ updateSuite ] = useMutation<UpdateSuite, UpdateSuiteVariables>(UPDATE_SUITE, {\n    onCompleted: (data: UpdateSuite): void => {\n      message.success(`Apartmá ${ data.updateSuite?.suite?.title } byla aktualizována`)\n      if (refetch !== undefined) {\n        refetch()\n      }\n      close()\n    },\n    onError: (reason: ApolloError): void => {\n      console.error(reason)\n    }\n  })\n\n  const [ form ] = Form.useForm()\n  const [ confirmClose, setConfirmClose ] = useState<boolean>(false)\n\n  const initialValues: Store = {\n    number: suite?.number,\n    title: suite?.title\n  }\n\n  useEffect(() => {\n    if (visible === true) {\n      form.resetFields()\n    }\n  }, [ form, visible ])\n\n  const submitForm = () => {\n    form.validateFields()\n      .then(() => {\n        const formData: SuiteForm = form.getFieldsValue(true)\n        const variables: { data: SuiteInput } = {\n          data: {\n            number: formData.number,\n            title: formData.title\n          }\n        }\n        if (suite === undefined) {\n          createSuite({ variables })\n        } else {\n          if (form.isFieldsTouched()) {\n            variables.data.id = suite.id\n            updateSuite({ variables })\n          }\n        }\n      })\n      .catch(() => {\n        console.error(\"Form validation failed\");\n      })\n  }\n\n  const closeDrawer = (): void => {\n    if (form.isFieldsTouched()) {\n      setConfirmClose(true)\n    } else {\n      close()\n    }\n  }\n\n  return (\n    <Drawer\n      closeIcon={ (\n        <Popconfirm\n          onCancel={ () => setConfirmClose(false) }\n          onConfirm={ () => {\n            setConfirmClose(false)\n            close()\n          } }\n          placement=\"rightTop\"\n          title=\"Zavřít formulář? Data ve formuláři budou ztracena\"\n          visible={ confirmClose }>\n          <CloseOutlined onClick={ closeDrawer } />\n        </Popconfirm>\n      ) }\n      footer={\n        <>\n          <Button\n            onClick={ submitForm }\n            type=\"primary\">\n            Vytvořit\n          </Button>\n        </>\n      }\n      footerStyle={ {\n        textAlign: \"right\"\n      } }\n      placement=\"left\"\n      title=\"Nové apartmá\"\n      visible={ visible }\n      width={ 500 }>\n      <Form\n        form={ form }\n        initialValues={ initialValues }\n        layout=\"vertical\"\n        name=\"suite\">\n        <Form.Item\n          hasFeedback\n          label=\"Název\"\n          name=\"title\"\n          required\n          rules={ [ FormHelper.requiredRule ] }>\n          <Input placeholder=\"název apartmá\" />\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          label=\"Číslo\"\n          name=\"number\"\n          required\n          rules={ [\n            FormHelper.requiredRule,\n            {\n              message: \"zadejte číslo\",\n              pattern: /^[0-9]+$/\n            }\n          ] }>\n          <Input placeholder=\"číslo apartmá\" type=\"number\" />\n        </Form.Item>\n      </Form>\n    </Drawer>\n  )\n}","import { useEffect, useState } from \"react\"\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\nimport { PlusCircleOutlined, WarningOutlined } from \"@ant-design/icons\"\nimport { Button, List, message, Popconfirm, Skeleton } from \"antd\"\nimport { Content } from \"antd/lib/layout/layout\"\nimport { SuiteDrawer } from \"../SuiteDrawer\"\nimport { ApolloError, useLazyQuery, useMutation } from \"@apollo/client\"\nimport { SUITES } from \"../../lib/graphql/queries/Suites\"\nimport { Suites as SuitesData, Suites_suites } from \"../../lib/graphql/queries/Suites/__generated__/Suites\"\nimport Title from \"antd/lib/typography/Title\"\nimport \"./styles.css\"\nimport { DELETE_SUITE } from \"../../lib/graphql/mutations/Suite\"\nimport { DeleteSuite, DeleteSuiteVariables } from \"../../lib/graphql/mutations/Suite/__generated__/DeleteSuite\"\n\ninterface Props {\n  isAuthenticated: boolean\n}\n\nexport const Suites = withRouter(({ history, isAuthenticated }: RouteComponentProps & Props) => {\n\n  const [ drawerVisible, setDrawerVisible ] = useState<boolean>(false)\n  const [ activeSuite, setActiveSuite ] = useState<Suites_suites>()\n  const [ suites, setSuites ] = useState<Suites_suites[]>([])\n\n  const [ getData, { loading: queryLoading, data: queryData, refetch } ] = useLazyQuery<SuitesData>(SUITES, {\n    onError: (reason: ApolloError) => {\n      console.error(reason);\n      message.error(\"Chyba serveru, kontaktujte správce\")\n    }\n  })\n  const [ deleteSuite, { loading: removeLoading, data: removeData } ] = useMutation<DeleteSuite, DeleteSuiteVariables>(DELETE_SUITE, {\n    onError: (reason: ApolloError) => {\n      console.error(reason)\n    }\n  })\n\n  useEffect(() => {\n    if (isAuthenticated === true) {\n      getData()\n    } else {\n      history.push(\"/login\")\n    }\n  }, [ getData, history, isAuthenticated ])\n\n  useEffect(() => {\n    const suitesData: Suites_suites[] = []\n    queryData?.suites?.forEach((suite: Suites_suites | null) => {\n      if (suite !== null) {\n        suitesData.push(suite)\n      }\n    })\n    setSuites(suitesData)\n  }, [ queryData ])\n\n  useEffect(() => {\n    if (refetch !== undefined) {\n      refetch()\n    }\n  }, [ refetch, removeData ])\n\n  const editSuite = (suite: Suites_suites): void => {\n    setActiveSuite(suite)\n    setDrawerVisible(true)\n  }\n\n  const removeSuite = (suite: Suites_suites): void => {\n    deleteSuite({ variables: { suiteId: suite.id } })\n  }\n\n  return (\n    <Content className=\"app-content\">\n      <Title level={ 3 } className=\"home__listings-title\">\n        Seznam apartmá\n      </Title>\n      <List\n        className=\"suites-list\"\n        dataSource={ suites }\n        itemLayout=\"horizontal\"\n        loading={ queryLoading }\n        renderItem={ suite => (\n          <List.Item\n            actions={ [\n              <Button\n                key=\"edit\"\n                onClick={ () => editSuite(suite) }\n                type=\"link\">\n                upravit\n              </Button>,\n              <Popconfirm\n                cancelText=\"Ne\"\n                icon={ <WarningOutlined /> }\n                okText=\"Ano\"\n                onConfirm={ () => removeSuite(suite) }\n                title=\"opravdu odstranit?\">\n                <Button\n                  key=\"remove\"\n                  loading={ removeLoading }\n                  type=\"link\">\n                  odstranit\n                </Button>\n              </Popconfirm>\n            ] }>\n            <Skeleton title={ false } loading={ queryLoading } active>\n              <List.Item.Meta\n                title={ suite.title } />\n            </Skeleton>\n          </List.Item>\n        ) } />\n      <Button\n        icon={ <PlusCircleOutlined /> }\n        onClick={ () => {\n          setActiveSuite(undefined)\n          setDrawerVisible(true)\n        } }\n        type=\"primary\">\n        Přidat apartmá\n      </Button>\n      <SuiteDrawer\n        close={ () => setDrawerVisible(false) }\n        refetch={ refetch }\n        suite={ activeSuite }\n        visible={ drawerVisible } />\n    </Content>\n  )\n})","import { Affix, ConfigProvider, Layout } from \"antd\"\r\nimport csCZ from \"antd/lib/locale/cs_CZ\"\r\nimport { useState } from \"react\"\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport { AppHeader } from \"../AppHeader\"\r\nimport { Guests } from \"../Guests\"\r\nimport { Home } from \"../Home\"\r\nimport { Login } from \"../Login\"\r\nimport { Overview } from \"../Overview\"\r\nimport { Suites } from \"../Suites\"\r\n\r\nexport const App = () => {\r\n\r\n  const [ isAuthenticated, setIsAuthenticated ] = useState<boolean>(false)\r\n\r\n  return (\r\n    <ConfigProvider locale={ csCZ }>\r\n      <Router>\r\n        <Layout id=\"app\">\r\n          <Affix offsetTop={ 0 } className=\"app__affix-header\">\r\n            <AppHeader isAuthenticated={ isAuthenticated } />\r\n          </Affix>\r\n          <Switch>\r\n            <Route exact path=\"/\" render={ () => <Home isAuthenticated={ isAuthenticated } /> } />\r\n            <Route exact path=\"/apartma\" render={ () => <Suites isAuthenticated={ isAuthenticated } /> } />\r\n            <Route exact path=\"/guests\" render={ () => <Guests isAuthenticated={ isAuthenticated } /> } />\r\n            <Route exact path=\"/prehled\" render={ () => <Overview isAuthenticated={ isAuthenticated } /> } />\r\n            <Route exact path=\"/login\" render={ () => <Login setIsAuthenticated={ setIsAuthenticated } /> } />\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n    </ConfigProvider>\r\n  )\r\n}","import ReactDOM from 'react-dom'\nimport './index.css'\nimport { getCookie } from \"./lib/Cookie\"\nimport moment from 'moment'\nimport 'moment/locale/cs'\nimport { ApolloClient, ApolloLink, ApolloProvider, concat, HttpLink, InMemoryCache } from '@apollo/client'\nimport { App } from './sections/App'\n\nmoment.locale(\"cs\")\n\nconst httpLink = new HttpLink({ uri: '/api' });\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  const authtoken = getCookie(\"authtoken\")\n  const csrftoken = getCookie(\"csrftoken\")\n  operation.setContext(({ headers = {} }) => ({\n    headers: {\n      ...headers,\n      authorization: authtoken === null ? null : `JWT ${ authtoken }`,\n      \"X-CSRFToken\": csrftoken === null ? \"\" : csrftoken\n    }\n  }));\n  return forward(operation);\n})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          guests: {\n            merge: false\n          },\n          reservations: {\n            merge: false\n          },\n          suiteReservations: {\n            merge: false\n          },\n          suites: {\n            merge: false\n          }\n        }\n      },\n      Reservation: {\n        fields: {\n          roommates: { merge: false }\n        }\n      }\n    }\n  }),\n  link: concat(authMiddleware, httpLink),\n})\n\nReactDOM.render(\n  <ApolloProvider client={ client }>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}